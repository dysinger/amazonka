{
    "waiters": {
        "waiters": {
            "InstanceTerminated": {
                "operation": "DescribeInstances",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dirReservations) . folding (concatOf rInstances) . i1State . isName",
                        "expected": "ISNTerminated"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dirReservations) . folding (concatOf rInstances) . i1State . isName",
                        "expected": "ISNPending"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dirReservations) . folding (concatOf rInstances) . i1State . isName",
                        "expected": "ISNStopping"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "VolumeInUse": {
                "operation": "DescribeVolumes",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dvrVolumes) . vState",
                        "expected": "VSInUse"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dvrVolumes) . vState",
                        "expected": "VSDeleted"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "SubnetAvailable": {
                "operation": "DescribeSubnets",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dsrSubnets) . s1State",
                        "expected": "SSAvailable"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "CustomerGatewayAvailable": {
                "operation": "DescribeCustomerGateways",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dcgrCustomerGateways) . cgState",
                        "expected": "\"available\""
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dcgrCustomerGateways) . cgState",
                        "expected": "\"deleted\""
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dcgrCustomerGateways) . cgState",
                        "expected": "\"deleting\""
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "ConversionTaskCompleted": {
                "operation": "DescribeConversionTasks",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dctrConversionTasks) . ctState",
                        "expected": "CTSCompleted"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dctrConversionTasks) . ctState",
                        "expected": "CTSCancelled"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dctrConversionTasks) . ctState",
                        "expected": "CTSCancelling"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "InstanceStopped": {
                "operation": "DescribeInstances",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dirReservations) . folding (concatOf rInstances) . i1State . isName",
                        "expected": "ISNStopped"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dirReservations) . folding (concatOf rInstances) . i1State . isName",
                        "expected": "ISNPending"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dirReservations) . folding (concatOf rInstances) . i1State . isName",
                        "expected": "ISNTerminated"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "InstanceRunning": {
                "operation": "DescribeInstances",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dirReservations) . folding (concatOf rInstances) . i1State . isName",
                        "expected": "ISNRunning"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dirReservations) . folding (concatOf rInstances) . i1State . isName",
                        "expected": "ISNShuttingDown"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dirReservations) . folding (concatOf rInstances) . i1State . isName",
                        "expected": "ISNTerminated"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dirReservations) . folding (concatOf rInstances) . i1State . isName",
                        "expected": "ISNStopping"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "VpcAvailable": {
                "operation": "DescribeVpcs",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dvrVpcs) . vpcState",
                        "expected": "VpcStateAvailable"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "ExportTaskCompleted": {
                "operation": "DescribeExportTasks",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf detrExportTasks) . etState",
                        "expected": "ETSCompleted"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "VpnConnectionAvailable": {
                "operation": "DescribeVpnConnections",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dvcrVpnConnections) . vcState",
                        "expected": "VpnStateAvailable"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dvcrVpnConnections) . vcState",
                        "expected": "VpnStateDeleting"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dvcrVpnConnections) . vcState",
                        "expected": "VpnStateDeleted"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "ExportTaskCancelled": {
                "operation": "DescribeExportTasks",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf detrExportTasks) . etState",
                        "expected": "ETSCancelled"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "VolumeDeleted": {
                "operation": "DescribeVolumes",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dvrVolumes) . vState",
                        "expected": "VSDeleted"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "BundleTaskComplete": {
                "operation": "DescribeBundleTasks",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dbtrBundleTasks) . btState",
                        "expected": "BTSComplete"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dbtrBundleTasks) . btState",
                        "expected": "BTSFailed"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "VpnConnectionDeleted": {
                "operation": "DescribeVpnConnections",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dvcrVpnConnections) . vcState",
                        "expected": "VpnStateDeleted"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dvcrVpnConnections) . vcState",
                        "expected": "VpnStatePending"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "ConversionTaskCancelled": {
                "operation": "DescribeConversionTasks",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dctrConversionTasks) . ctState",
                        "expected": "CTSCancelled"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "SnapshotCompleted": {
                "operation": "DescribeSnapshots",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dsrSnapshots) . sState",
                        "expected": "Completed"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            },
            "VolumeAvailable": {
                "operation": "DescribeVolumes",
                "acceptors": [
                    {
                        "matcher": "matchAll",
                        "state": "success",
                        "argument": "folding (concatOf dvrVolumes) . vState",
                        "expected": "VSAvailable"
                    },
                    {
                        "matcher": "matchAny",
                        "state": "failure",
                        "argument": "folding (concatOf dvrVolumes) . vState",
                        "expected": "VSDeleted"
                    }
                ],
                "maxAttempts": 40,
                "delay": 15
            }
        },
        "namespace": "Network.AWS.EC2.Waiters",
        "imports": [
            "Network.AWS.EC2.DescribeBundleTasks",
            "Network.AWS.EC2.DescribeConversionTasks",
            "Network.AWS.EC2.DescribeCustomerGateways",
            "Network.AWS.EC2.DescribeExportTasks",
            "Network.AWS.EC2.DescribeInstances",
            "Network.AWS.EC2.DescribeSnapshots",
            "Network.AWS.EC2.DescribeSubnets",
            "Network.AWS.EC2.DescribeVolumes",
            "Network.AWS.EC2.DescribeVpcs",
            "Network.AWS.EC2.DescribeVpnConnections",
            "Network.AWS.EC2.Types"
        ]
    },
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "EC2",
        "error": "EC2Error",
        "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.EC2",
        "protocol": "ec2",
        "imports": [
            "Network.AWS.EC2.AcceptVpcPeeringConnection",
            "Network.AWS.EC2.AllocateAddress",
            "Network.AWS.EC2.AssignPrivateIpAddresses",
            "Network.AWS.EC2.AssociateAddress",
            "Network.AWS.EC2.AssociateDhcpOptions",
            "Network.AWS.EC2.AssociateRouteTable",
            "Network.AWS.EC2.AttachInternetGateway",
            "Network.AWS.EC2.AttachNetworkInterface",
            "Network.AWS.EC2.AttachVolume",
            "Network.AWS.EC2.AttachVpnGateway",
            "Network.AWS.EC2.AuthorizeSecurityGroupEgress",
            "Network.AWS.EC2.AuthorizeSecurityGroupIngress",
            "Network.AWS.EC2.BundleInstance",
            "Network.AWS.EC2.CancelBundleTask",
            "Network.AWS.EC2.CancelConversionTask",
            "Network.AWS.EC2.CancelExportTask",
            "Network.AWS.EC2.CancelReservedInstancesListing",
            "Network.AWS.EC2.CancelSpotInstanceRequests",
            "Network.AWS.EC2.ConfirmProductInstance",
            "Network.AWS.EC2.CopyImage",
            "Network.AWS.EC2.CopySnapshot",
            "Network.AWS.EC2.CreateCustomerGateway",
            "Network.AWS.EC2.CreateDhcpOptions",
            "Network.AWS.EC2.CreateImage",
            "Network.AWS.EC2.CreateInstanceExportTask",
            "Network.AWS.EC2.CreateInternetGateway",
            "Network.AWS.EC2.CreateKeyPair",
            "Network.AWS.EC2.CreateNetworkAcl",
            "Network.AWS.EC2.CreateNetworkAclEntry",
            "Network.AWS.EC2.CreateNetworkInterface",
            "Network.AWS.EC2.CreatePlacementGroup",
            "Network.AWS.EC2.CreateReservedInstancesListing",
            "Network.AWS.EC2.CreateRoute",
            "Network.AWS.EC2.CreateRouteTable",
            "Network.AWS.EC2.CreateSecurityGroup",
            "Network.AWS.EC2.CreateSnapshot",
            "Network.AWS.EC2.CreateSpotDatafeedSubscription",
            "Network.AWS.EC2.CreateSubnet",
            "Network.AWS.EC2.CreateTags",
            "Network.AWS.EC2.CreateVolume",
            "Network.AWS.EC2.CreateVpc",
            "Network.AWS.EC2.CreateVpcPeeringConnection",
            "Network.AWS.EC2.CreateVpnConnection",
            "Network.AWS.EC2.CreateVpnConnectionRoute",
            "Network.AWS.EC2.CreateVpnGateway",
            "Network.AWS.EC2.DeleteCustomerGateway",
            "Network.AWS.EC2.DeleteDhcpOptions",
            "Network.AWS.EC2.DeleteInternetGateway",
            "Network.AWS.EC2.DeleteKeyPair",
            "Network.AWS.EC2.DeleteNetworkAcl",
            "Network.AWS.EC2.DeleteNetworkAclEntry",
            "Network.AWS.EC2.DeleteNetworkInterface",
            "Network.AWS.EC2.DeletePlacementGroup",
            "Network.AWS.EC2.DeleteRoute",
            "Network.AWS.EC2.DeleteRouteTable",
            "Network.AWS.EC2.DeleteSecurityGroup",
            "Network.AWS.EC2.DeleteSnapshot",
            "Network.AWS.EC2.DeleteSpotDatafeedSubscription",
            "Network.AWS.EC2.DeleteSubnet",
            "Network.AWS.EC2.DeleteTags",
            "Network.AWS.EC2.DeleteVolume",
            "Network.AWS.EC2.DeleteVpc",
            "Network.AWS.EC2.DeleteVpcPeeringConnection",
            "Network.AWS.EC2.DeleteVpnConnection",
            "Network.AWS.EC2.DeleteVpnConnectionRoute",
            "Network.AWS.EC2.DeleteVpnGateway",
            "Network.AWS.EC2.DeregisterImage",
            "Network.AWS.EC2.DescribeAccountAttributes",
            "Network.AWS.EC2.DescribeAddresses",
            "Network.AWS.EC2.DescribeAvailabilityZones",
            "Network.AWS.EC2.DescribeBundleTasks",
            "Network.AWS.EC2.DescribeConversionTasks",
            "Network.AWS.EC2.DescribeCustomerGateways",
            "Network.AWS.EC2.DescribeDhcpOptions",
            "Network.AWS.EC2.DescribeExportTasks",
            "Network.AWS.EC2.DescribeImageAttribute",
            "Network.AWS.EC2.DescribeImages",
            "Network.AWS.EC2.DescribeInstanceAttribute",
            "Network.AWS.EC2.DescribeInstanceStatus",
            "Network.AWS.EC2.DescribeInstances",
            "Network.AWS.EC2.DescribeInternetGateways",
            "Network.AWS.EC2.DescribeKeyPairs",
            "Network.AWS.EC2.DescribeNetworkAcls",
            "Network.AWS.EC2.DescribeNetworkInterfaceAttribute",
            "Network.AWS.EC2.DescribeNetworkInterfaces",
            "Network.AWS.EC2.DescribePlacementGroups",
            "Network.AWS.EC2.DescribeRegions",
            "Network.AWS.EC2.DescribeReservedInstances",
            "Network.AWS.EC2.DescribeReservedInstancesListings",
            "Network.AWS.EC2.DescribeReservedInstancesModifications",
            "Network.AWS.EC2.DescribeReservedInstancesOfferings",
            "Network.AWS.EC2.DescribeRouteTables",
            "Network.AWS.EC2.DescribeSecurityGroups",
            "Network.AWS.EC2.DescribeSnapshotAttribute",
            "Network.AWS.EC2.DescribeSnapshots",
            "Network.AWS.EC2.DescribeSpotDatafeedSubscription",
            "Network.AWS.EC2.DescribeSpotInstanceRequests",
            "Network.AWS.EC2.DescribeSpotPriceHistory",
            "Network.AWS.EC2.DescribeSubnets",
            "Network.AWS.EC2.DescribeTags",
            "Network.AWS.EC2.DescribeVolumeAttribute",
            "Network.AWS.EC2.DescribeVolumeStatus",
            "Network.AWS.EC2.DescribeVolumes",
            "Network.AWS.EC2.DescribeVpcAttribute",
            "Network.AWS.EC2.DescribeVpcPeeringConnections",
            "Network.AWS.EC2.DescribeVpcs",
            "Network.AWS.EC2.DescribeVpnConnections",
            "Network.AWS.EC2.DescribeVpnGateways",
            "Network.AWS.EC2.DetachInternetGateway",
            "Network.AWS.EC2.DetachNetworkInterface",
            "Network.AWS.EC2.DetachVolume",
            "Network.AWS.EC2.DetachVpnGateway",
            "Network.AWS.EC2.DisableVgwRoutePropagation",
            "Network.AWS.EC2.DisassociateAddress",
            "Network.AWS.EC2.DisassociateRouteTable",
            "Network.AWS.EC2.EnableVgwRoutePropagation",
            "Network.AWS.EC2.EnableVolumeIO",
            "Network.AWS.EC2.GetConsoleOutput",
            "Network.AWS.EC2.GetPasswordData",
            "Network.AWS.EC2.ImportInstance",
            "Network.AWS.EC2.ImportKeyPair",
            "Network.AWS.EC2.ImportVolume",
            "Network.AWS.EC2.ModifyImageAttribute",
            "Network.AWS.EC2.ModifyInstanceAttribute",
            "Network.AWS.EC2.ModifyNetworkInterfaceAttribute",
            "Network.AWS.EC2.ModifyReservedInstances",
            "Network.AWS.EC2.ModifySnapshotAttribute",
            "Network.AWS.EC2.ModifySubnetAttribute",
            "Network.AWS.EC2.ModifyVolumeAttribute",
            "Network.AWS.EC2.ModifyVpcAttribute",
            "Network.AWS.EC2.MonitorInstances",
            "Network.AWS.EC2.PurchaseReservedInstancesOffering",
            "Network.AWS.EC2.RebootInstances",
            "Network.AWS.EC2.RegisterImage",
            "Network.AWS.EC2.RejectVpcPeeringConnection",
            "Network.AWS.EC2.ReleaseAddress",
            "Network.AWS.EC2.ReplaceNetworkAclAssociation",
            "Network.AWS.EC2.ReplaceNetworkAclEntry",
            "Network.AWS.EC2.ReplaceRoute",
            "Network.AWS.EC2.ReplaceRouteTableAssociation",
            "Network.AWS.EC2.ReportInstanceStatus",
            "Network.AWS.EC2.RequestSpotInstances",
            "Network.AWS.EC2.ResetImageAttribute",
            "Network.AWS.EC2.ResetInstanceAttribute",
            "Network.AWS.EC2.ResetNetworkInterfaceAttribute",
            "Network.AWS.EC2.ResetSnapshotAttribute",
            "Network.AWS.EC2.RevokeSecurityGroupEgress",
            "Network.AWS.EC2.RevokeSecurityGroupIngress",
            "Network.AWS.EC2.RunInstances",
            "Network.AWS.EC2.StartInstances",
            "Network.AWS.EC2.StopInstances",
            "Network.AWS.EC2.TerminateInstances",
            "Network.AWS.EC2.Types",
            "Network.AWS.EC2.UnassignPrivateIpAddresses",
            "Network.AWS.EC2.UnmonitorInstances",
            "Network.AWS.EC2.Waiters"
        ],
        "name": "Amazon Elastic Compute Cloud",
        "version": "2014-10-01",
        "documentation": "-- | Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides\n-- resizable compute capacity in the cloud. It is designed to make web-scale\n-- computing easier for developers. Amazon EC2’s simple web service interface\n-- allows you to obtain and configure capacity with minimal friction. It\n-- provides you with complete control of your computing resources and lets you\n-- run on Amazon’s proven computing environment. Amazon EC2 reduces the time\n-- required to obtain and boot new server instances to minutes, allowing you to\n-- quickly scale capacity, both up and down, as your computing requirements\n-- change. Amazon EC2 changes the economics of computing by allowing you to pay\n-- only for capacity that you actually use. Amazon EC2 provides developers the\n-- tools to build failure resilient applications and isolate themselves from\n-- common failure scenarios.",
        "xmlNamespace": "http://ec2.amazonaws.com/doc/2014-10-01",
        "jsonVersion": null,
        "retryDelay": {
            "base": 5.0e-2,
            "attempts": 5,
            "growth": 2
        },
        "endpointPrefix": "ec2",
        "retryPolicies": {
            "request_limit_exceeded": {
                "error": "RequestLimitExceeded",
                "code": 503
            },
            "service_unavailable": {
                "error": null,
                "code": 503
            },
            "general_server_error": {
                "error": null,
                "code": 500
            },
            "limit_exceeded": {
                "error": null,
                "code": 509
            }
        },
        "targetPrefix": null
    },
    "cabal": {
        "other": [
            "Network.AWS.EC2.Internal"
        ],
        "library": "amazonka-ec2",
        "abbrev": "EC2",
        "exposed": [
            "Network.AWS.EC2",
            "Network.AWS.EC2.AcceptVpcPeeringConnection",
            "Network.AWS.EC2.AllocateAddress",
            "Network.AWS.EC2.AssignPrivateIpAddresses",
            "Network.AWS.EC2.AssociateAddress",
            "Network.AWS.EC2.AssociateDhcpOptions",
            "Network.AWS.EC2.AssociateRouteTable",
            "Network.AWS.EC2.AttachInternetGateway",
            "Network.AWS.EC2.AttachNetworkInterface",
            "Network.AWS.EC2.AttachVolume",
            "Network.AWS.EC2.AttachVpnGateway",
            "Network.AWS.EC2.AuthorizeSecurityGroupEgress",
            "Network.AWS.EC2.AuthorizeSecurityGroupIngress",
            "Network.AWS.EC2.BundleInstance",
            "Network.AWS.EC2.CancelBundleTask",
            "Network.AWS.EC2.CancelConversionTask",
            "Network.AWS.EC2.CancelExportTask",
            "Network.AWS.EC2.CancelReservedInstancesListing",
            "Network.AWS.EC2.CancelSpotInstanceRequests",
            "Network.AWS.EC2.ConfirmProductInstance",
            "Network.AWS.EC2.CopyImage",
            "Network.AWS.EC2.CopySnapshot",
            "Network.AWS.EC2.CreateCustomerGateway",
            "Network.AWS.EC2.CreateDhcpOptions",
            "Network.AWS.EC2.CreateImage",
            "Network.AWS.EC2.CreateInstanceExportTask",
            "Network.AWS.EC2.CreateInternetGateway",
            "Network.AWS.EC2.CreateKeyPair",
            "Network.AWS.EC2.CreateNetworkAcl",
            "Network.AWS.EC2.CreateNetworkAclEntry",
            "Network.AWS.EC2.CreateNetworkInterface",
            "Network.AWS.EC2.CreatePlacementGroup",
            "Network.AWS.EC2.CreateReservedInstancesListing",
            "Network.AWS.EC2.CreateRoute",
            "Network.AWS.EC2.CreateRouteTable",
            "Network.AWS.EC2.CreateSecurityGroup",
            "Network.AWS.EC2.CreateSnapshot",
            "Network.AWS.EC2.CreateSpotDatafeedSubscription",
            "Network.AWS.EC2.CreateSubnet",
            "Network.AWS.EC2.CreateTags",
            "Network.AWS.EC2.CreateVolume",
            "Network.AWS.EC2.CreateVpc",
            "Network.AWS.EC2.CreateVpcPeeringConnection",
            "Network.AWS.EC2.CreateVpnConnection",
            "Network.AWS.EC2.CreateVpnConnectionRoute",
            "Network.AWS.EC2.CreateVpnGateway",
            "Network.AWS.EC2.DeleteCustomerGateway",
            "Network.AWS.EC2.DeleteDhcpOptions",
            "Network.AWS.EC2.DeleteInternetGateway",
            "Network.AWS.EC2.DeleteKeyPair",
            "Network.AWS.EC2.DeleteNetworkAcl",
            "Network.AWS.EC2.DeleteNetworkAclEntry",
            "Network.AWS.EC2.DeleteNetworkInterface",
            "Network.AWS.EC2.DeletePlacementGroup",
            "Network.AWS.EC2.DeleteRoute",
            "Network.AWS.EC2.DeleteRouteTable",
            "Network.AWS.EC2.DeleteSecurityGroup",
            "Network.AWS.EC2.DeleteSnapshot",
            "Network.AWS.EC2.DeleteSpotDatafeedSubscription",
            "Network.AWS.EC2.DeleteSubnet",
            "Network.AWS.EC2.DeleteTags",
            "Network.AWS.EC2.DeleteVolume",
            "Network.AWS.EC2.DeleteVpc",
            "Network.AWS.EC2.DeleteVpcPeeringConnection",
            "Network.AWS.EC2.DeleteVpnConnection",
            "Network.AWS.EC2.DeleteVpnConnectionRoute",
            "Network.AWS.EC2.DeleteVpnGateway",
            "Network.AWS.EC2.DeregisterImage",
            "Network.AWS.EC2.DescribeAccountAttributes",
            "Network.AWS.EC2.DescribeAddresses",
            "Network.AWS.EC2.DescribeAvailabilityZones",
            "Network.AWS.EC2.DescribeBundleTasks",
            "Network.AWS.EC2.DescribeConversionTasks",
            "Network.AWS.EC2.DescribeCustomerGateways",
            "Network.AWS.EC2.DescribeDhcpOptions",
            "Network.AWS.EC2.DescribeExportTasks",
            "Network.AWS.EC2.DescribeImageAttribute",
            "Network.AWS.EC2.DescribeImages",
            "Network.AWS.EC2.DescribeInstanceAttribute",
            "Network.AWS.EC2.DescribeInstanceStatus",
            "Network.AWS.EC2.DescribeInstances",
            "Network.AWS.EC2.DescribeInternetGateways",
            "Network.AWS.EC2.DescribeKeyPairs",
            "Network.AWS.EC2.DescribeNetworkAcls",
            "Network.AWS.EC2.DescribeNetworkInterfaceAttribute",
            "Network.AWS.EC2.DescribeNetworkInterfaces",
            "Network.AWS.EC2.DescribePlacementGroups",
            "Network.AWS.EC2.DescribeRegions",
            "Network.AWS.EC2.DescribeReservedInstances",
            "Network.AWS.EC2.DescribeReservedInstancesListings",
            "Network.AWS.EC2.DescribeReservedInstancesModifications",
            "Network.AWS.EC2.DescribeReservedInstancesOfferings",
            "Network.AWS.EC2.DescribeRouteTables",
            "Network.AWS.EC2.DescribeSecurityGroups",
            "Network.AWS.EC2.DescribeSnapshotAttribute",
            "Network.AWS.EC2.DescribeSnapshots",
            "Network.AWS.EC2.DescribeSpotDatafeedSubscription",
            "Network.AWS.EC2.DescribeSpotInstanceRequests",
            "Network.AWS.EC2.DescribeSpotPriceHistory",
            "Network.AWS.EC2.DescribeSubnets",
            "Network.AWS.EC2.DescribeTags",
            "Network.AWS.EC2.DescribeVolumeAttribute",
            "Network.AWS.EC2.DescribeVolumeStatus",
            "Network.AWS.EC2.DescribeVolumes",
            "Network.AWS.EC2.DescribeVpcAttribute",
            "Network.AWS.EC2.DescribeVpcPeeringConnections",
            "Network.AWS.EC2.DescribeVpcs",
            "Network.AWS.EC2.DescribeVpnConnections",
            "Network.AWS.EC2.DescribeVpnGateways",
            "Network.AWS.EC2.DetachInternetGateway",
            "Network.AWS.EC2.DetachNetworkInterface",
            "Network.AWS.EC2.DetachVolume",
            "Network.AWS.EC2.DetachVpnGateway",
            "Network.AWS.EC2.DisableVgwRoutePropagation",
            "Network.AWS.EC2.DisassociateAddress",
            "Network.AWS.EC2.DisassociateRouteTable",
            "Network.AWS.EC2.EnableVgwRoutePropagation",
            "Network.AWS.EC2.EnableVolumeIO",
            "Network.AWS.EC2.GetConsoleOutput",
            "Network.AWS.EC2.GetPasswordData",
            "Network.AWS.EC2.ImportInstance",
            "Network.AWS.EC2.ImportKeyPair",
            "Network.AWS.EC2.ImportVolume",
            "Network.AWS.EC2.ModifyImageAttribute",
            "Network.AWS.EC2.ModifyInstanceAttribute",
            "Network.AWS.EC2.ModifyNetworkInterfaceAttribute",
            "Network.AWS.EC2.ModifyReservedInstances",
            "Network.AWS.EC2.ModifySnapshotAttribute",
            "Network.AWS.EC2.ModifySubnetAttribute",
            "Network.AWS.EC2.ModifyVolumeAttribute",
            "Network.AWS.EC2.ModifyVpcAttribute",
            "Network.AWS.EC2.MonitorInstances",
            "Network.AWS.EC2.PurchaseReservedInstancesOffering",
            "Network.AWS.EC2.RebootInstances",
            "Network.AWS.EC2.RegisterImage",
            "Network.AWS.EC2.RejectVpcPeeringConnection",
            "Network.AWS.EC2.ReleaseAddress",
            "Network.AWS.EC2.ReplaceNetworkAclAssociation",
            "Network.AWS.EC2.ReplaceNetworkAclEntry",
            "Network.AWS.EC2.ReplaceRoute",
            "Network.AWS.EC2.ReplaceRouteTableAssociation",
            "Network.AWS.EC2.ReportInstanceStatus",
            "Network.AWS.EC2.RequestSpotInstances",
            "Network.AWS.EC2.ResetImageAttribute",
            "Network.AWS.EC2.ResetInstanceAttribute",
            "Network.AWS.EC2.ResetNetworkInterfaceAttribute",
            "Network.AWS.EC2.ResetSnapshotAttribute",
            "Network.AWS.EC2.RevokeSecurityGroupEgress",
            "Network.AWS.EC2.RevokeSecurityGroupIngress",
            "Network.AWS.EC2.RunInstances",
            "Network.AWS.EC2.StartInstances",
            "Network.AWS.EC2.StopInstances",
            "Network.AWS.EC2.TerminateInstances",
            "Network.AWS.EC2.Types",
            "Network.AWS.EC2.UnassignPrivateIpAddresses",
            "Network.AWS.EC2.UnmonitorInstances",
            "Network.AWS.EC2.Waiters"
        ],
        "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/Welcome.html",
        "protocol": "ec2",
        "name": "Amazon Elastic Compute Cloud",
        "version": "0.2.0",
        "description": "Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides\nresizable compute capacity in the cloud. It is designed to make web-scale\ncomputing easier for developers. Amazon EC2’s simple web service interface\nallows you to obtain and configure capacity with minimal friction. It\nprovides you with complete control of your computing resources and lets you\nrun on Amazon’s proven computing environment. Amazon EC2 reduces the time\nrequired to obtain and boot new server instances to minutes, allowing you to\nquickly scale capacity, both up and down, as your computing requirements\nchange. Amazon EC2 changes the economics of computing by allowing you to pay\nonly for capacity that you actually use. Amazon EC2 provides developers the\ntools to build failure resilient applications and isolate themselves from\ncommon failure scenarios."
    },
    "types": {
        "namespace": "Network.AWS.EC2.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "ImageKernel": "kernel",
                    "ImageBlockDeviceMapping": "blockDeviceMapping",
                    "ImageRamdisk": "ramdisk",
                    "ImageProductCodes": "productCodes",
                    "ImageDescription": "description",
                    "ImageLaunchPermission": "launchPermission"
                },
                "valuePad": 19,
                "name": "ImageAttributeName",
                "type": "nullary",
                "branchPad": 23
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "All": "all"
                },
                "valuePad": 4,
                "name": "PermissionGroup",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 16,
                "ctor": "networkAclEntry",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "NetworkAclEntry",
                "locationPad": 13,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeRuleNumber",
                        "name": "_naeRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "-- | The rule number for the entry. ACL entries are processed in ascending order\n-- by rule number.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeProtocol",
                        "name": "_naeProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "-- | The protocol. A value of '-1' means all protocols.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeRuleAction",
                        "name": "_naeRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "-- | Indicates whether to allow or deny the traffic that matches the rule.",
                        "typeExposed": "Maybe RuleAction",
                        "type": "Maybe RuleAction"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeEgress",
                        "name": "_naeEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "-- | Indicates whether the rule is an egress rule (applied to traffic leaving the\n-- subnet).",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeCidrBlock",
                        "name": "_naeCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The network range to allow or deny, in CIDR notation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeIcmpTypeCode",
                        "name": "_naeIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "icmpTypeCode",
                        "documentation": "-- | ICMP protocol: The ICMP type and code.",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naePortRange",
                        "name": "_naePortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "-- | TCP or UDP protocols: The range of ports the rule applies to.",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeCidrBlock",
                        "name": "_naeCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The network range to allow or deny, in CIDR notation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeEgress",
                        "name": "_naeEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "-- | Indicates whether the rule is an egress rule (applied to traffic leaving the\n-- subnet).",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeIcmpTypeCode",
                        "name": "_naeIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "icmpTypeCode",
                        "documentation": "-- | ICMP protocol: The ICMP type and code.",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naePortRange",
                        "name": "_naePortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "-- | TCP or UDP protocols: The range of ports the rule applies to.",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeProtocol",
                        "name": "_naeProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "-- | The protocol. A value of '-1' means all protocols.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeRuleAction",
                        "name": "_naeRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "-- | Indicates whether to allow or deny the traffic that matches the rule.",
                        "typeExposed": "Maybe RuleAction",
                        "type": "Maybe RuleAction"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naeRuleNumber",
                        "name": "_naeRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "-- | The rule number for the entry. ACL entries are processed in ascending order\n-- by rule number.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "blobAttributeValue",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "bavValue",
                    "name": "_bavValue",
                    "shape": "Blob",
                    "locationName": "value",
                    "documentation": null,
                    "typeExposed": "Maybe Base64",
                    "type": "Maybe Base64"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "BlobAttributeValue",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bavValue",
                        "name": "_bavValue",
                        "shape": "Blob",
                        "locationName": "value",
                        "documentation": null,
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bavValue",
                        "name": "_bavValue",
                        "shape": "Blob",
                        "locationName": "value",
                        "documentation": null,
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 38,
                "ctor": "importInstanceLaunchSpecification",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ImportInstanceLaunchSpecification",
                "locationPad": 34,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsArchitecture",
                        "name": "_iilsArchitecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "-- | The architecture of the instance.",
                        "typeExposed": "Maybe ArchitectureValues",
                        "type": "Maybe ArchitectureValues"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iilsGroupNames",
                        "name": "_iilsGroupNames",
                        "shape": "SecurityGroupStringList",
                        "locationName": "GroupName",
                        "documentation": "-- | One or more security group names.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroup\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iilsGroupIds",
                        "name": "_iilsGroupIds",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsAdditionalInfo",
                        "name": "_iilsAdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsUserData",
                        "name": "_iilsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "-- | User data to be made available to the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsInstanceType",
                        "name": "_iilsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html Instance Types\u003e in the /AmazonElastic Compute Cloud User Guide/.",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsPlacement",
                        "name": "_iilsPlacement",
                        "shape": "Placement",
                        "locationName": "placement",
                        "documentation": null,
                        "typeExposed": "Maybe Placement",
                        "type": "Maybe Placement"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsMonitoring",
                        "name": "_iilsMonitoring",
                        "shape": "Boolean",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsSubnetId",
                        "name": "_iilsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | [EC2-VPC] The ID of the subnet to launch the instance into.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsInstanceInitiatedShutdownBehavior",
                        "name": "_iilsInstanceInitiatedShutdownBehavior",
                        "shape": "ShutdownBehavior",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "-- | Indicates whether an instance stops or terminates when you initiate shutdown\n-- from the instance (using the operating system command for system shutdown).",
                        "typeExposed": "Maybe ShutdownBehavior",
                        "type": "Maybe ShutdownBehavior"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsPrivateIpAddress",
                        "name": "_iilsPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | [EC2-VPC] Optionally, you can use this parameter to assign the instance a\n-- specific available IP address from the IP address range of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsAdditionalInfo",
                        "name": "_iilsAdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsArchitecture",
                        "name": "_iilsArchitecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "-- | The architecture of the instance.",
                        "typeExposed": "Maybe ArchitectureValues",
                        "type": "Maybe ArchitectureValues"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iilsGroupIds",
                        "name": "_iilsGroupIds",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iilsGroupNames",
                        "name": "_iilsGroupNames",
                        "shape": "SecurityGroupStringList",
                        "locationName": "GroupName",
                        "documentation": "-- | One or more security group names.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroup\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsInstanceInitiatedShutdownBehavior",
                        "name": "_iilsInstanceInitiatedShutdownBehavior",
                        "shape": "ShutdownBehavior",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "-- | Indicates whether an instance stops or terminates when you initiate shutdown\n-- from the instance (using the operating system command for system shutdown).",
                        "typeExposed": "Maybe ShutdownBehavior",
                        "type": "Maybe ShutdownBehavior"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsInstanceType",
                        "name": "_iilsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html Instance Types\u003e in the /AmazonElastic Compute Cloud User Guide/.",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsMonitoring",
                        "name": "_iilsMonitoring",
                        "shape": "Boolean",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsPlacement",
                        "name": "_iilsPlacement",
                        "shape": "Placement",
                        "locationName": "placement",
                        "documentation": null,
                        "typeExposed": "Maybe Placement",
                        "type": "Maybe Placement"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsPrivateIpAddress",
                        "name": "_iilsPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | [EC2-VPC] Optionally, you can use this parameter to assign the instance a\n-- specific available IP address from the IP address range of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsSubnetId",
                        "name": "_iilsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | [EC2-VPC] The ID of the subnet to launch the instance into.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iilsUserData",
                        "name": "_iilsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "-- | User data to be made available to the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 13,
                "ctor": "snapshot",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sSnapshotId",
                        "name": "_sSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The ID of the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sVolumeId",
                        "name": "_sVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sState",
                        "name": "_sState",
                        "shape": "SnapshotState",
                        "locationName": "status",
                        "documentation": "-- | The snapshot state.",
                        "typeExposed": "SnapshotState",
                        "type": "SnapshotState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sStartTime",
                        "name": "_sStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "-- | The time stamp when the snapshot was initiated.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sProgress",
                        "name": "_sProgress",
                        "shape": "String",
                        "locationName": "progress",
                        "documentation": "-- | The progress of the snapshot, as a percentage.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sOwnerId",
                        "name": "_sOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the Amazon EBS snapshot owner.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sDescription",
                        "name": "_sDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description for the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sVolumeSize",
                        "name": "_sVolumeSize",
                        "shape": "Integer",
                        "locationName": "volumeSize",
                        "documentation": "-- | The size of the volume, in GiB.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sEncrypted",
                        "name": "_sEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Indicates whether the snapshot is encrypted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "contentPad": 0,
                "name": "Snapshot",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sOwnerAlias",
                        "name": "_sOwnerAlias",
                        "shape": "String",
                        "locationName": "ownerAlias",
                        "documentation": "-- | The AWS account alias (for example, 'amazon', 'self') or AWS account ID that owns\n-- the snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sTags",
                        "name": "_sTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the snapshot.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sKmsKeyId",
                        "name": "_sKmsKeyId",
                        "shape": "String",
                        "locationName": "kmsKeyId",
                        "documentation": "-- | The full ARN of the AWS Key Management Service (KMS) Customer Master Key\n-- (CMK) that was used to protect the volume encryption key for the parent\n-- volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sDescription",
                        "name": "_sDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description for the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sEncrypted",
                        "name": "_sEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Indicates whether the snapshot is encrypted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sKmsKeyId",
                        "name": "_sKmsKeyId",
                        "shape": "String",
                        "locationName": "kmsKeyId",
                        "documentation": "-- | The full ARN of the AWS Key Management Service (KMS) Customer Master Key\n-- (CMK) that was used to protect the volume encryption key for the parent\n-- volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sOwnerAlias",
                        "name": "_sOwnerAlias",
                        "shape": "String",
                        "locationName": "ownerAlias",
                        "documentation": "-- | The AWS account alias (for example, 'amazon', 'self') or AWS account ID that owns\n-- the snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sOwnerId",
                        "name": "_sOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the Amazon EBS snapshot owner.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sProgress",
                        "name": "_sProgress",
                        "shape": "String",
                        "locationName": "progress",
                        "documentation": "-- | The progress of the snapshot, as a percentage.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sSnapshotId",
                        "name": "_sSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The ID of the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sStartTime",
                        "name": "_sStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "-- | The time stamp when the snapshot was initiated.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sState",
                        "name": "_sState",
                        "shape": "SnapshotState",
                        "locationName": "status",
                        "documentation": "-- | The snapshot state.",
                        "typeExposed": "SnapshotState",
                        "type": "SnapshotState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sTags",
                        "name": "_sTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the snapshot.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sVolumeId",
                        "name": "_sVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sVolumeSize",
                        "name": "_sVolumeSize",
                        "shape": "Integer",
                        "locationName": "volumeSize",
                        "documentation": "-- | The size of the volume, in GiB.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 12,
                "ctor": "spotInstanceStateFault",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "SpotInstanceStateFault",
                "locationPad": 8,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sisfCode",
                        "name": "_sisfCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The reason code for the Spot Instance state change.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sisfMessage",
                        "name": "_sisfMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The message for the Spot Instance state change.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sisfCode",
                        "name": "_sisfCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The reason code for the Spot Instance state change.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sisfMessage",
                        "name": "_sisfMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The message for the Spot Instance state change.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "tagDescription",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tdResourceId",
                        "name": "_tdResourceId",
                        "shape": "String",
                        "locationName": "resourceId",
                        "documentation": "-- | The ID of the resource. For example, 'ami-1a2b3c4d'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tdResourceType",
                        "name": "_tdResourceType",
                        "shape": "ResourceType",
                        "locationName": "resourceType",
                        "documentation": "-- | The type of resource.",
                        "typeExposed": "ResourceType",
                        "type": "ResourceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tdKey",
                        "name": "_tdKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "-- | The key of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tdValue",
                        "name": "_tdValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "-- | The value of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "TagDescription",
                "locationPad": 13,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tdKey",
                        "name": "_tdKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "-- | The key of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tdResourceId",
                        "name": "_tdResourceId",
                        "shape": "String",
                        "locationName": "resourceId",
                        "documentation": "-- | The ID of the resource. For example, 'ami-1a2b3c4d'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tdResourceType",
                        "name": "_tdResourceType",
                        "shape": "ResourceType",
                        "locationName": "resourceType",
                        "documentation": "-- | The type of resource.",
                        "typeExposed": "ResourceType",
                        "type": "ResourceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tdValue",
                        "name": "_tdValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "-- | The value of the tag.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 12,
                "ctor": "groupIdentifier",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "GroupIdentifier",
                "locationPad": 10,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "giGroupName",
                        "name": "_giGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "giGroupId",
                        "name": "_giGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "giGroupId",
                        "name": "_giGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "giGroupName",
                        "name": "_giGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Static": "Static"
                },
                "valuePad": 7,
                "name": "VpnStaticRouteSource",
                "type": "nullary",
                "branchPad": 6
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 30,
                "ctor": "reservedInstancesListing",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ReservedInstancesListing",
                "locationPad": 27,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilReservedInstancesListingId",
                        "name": "_rilReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "-- | The ID of the Reserved Instance listing.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilReservedInstancesId",
                        "name": "_rilReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The ID of the Reserved Instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilCreateDate",
                        "name": "_rilCreateDate",
                        "shape": "DateTime",
                        "locationName": "createDate",
                        "documentation": "-- | The time the listing was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilUpdateDate",
                        "name": "_rilUpdateDate",
                        "shape": "DateTime",
                        "locationName": "updateDate",
                        "documentation": "-- | The last modified timestamp of the listing.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilStatus",
                        "name": "_rilStatus",
                        "shape": "ListingStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of the Reserved Instance listing.",
                        "typeExposed": "Maybe ListingStatus",
                        "type": "Maybe ListingStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilStatusMessage",
                        "name": "_rilStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | The reason for the current status of the Reserved Instance listing. The\n-- response can be blank.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rilInstanceCounts",
                        "name": "_rilInstanceCounts",
                        "shape": "InstanceCountList",
                        "locationName": "instanceCounts",
                        "documentation": "-- | The number of instances in this state.",
                        "typeExposed": "[InstanceCount]",
                        "type": "List \"item\" InstanceCount"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rilPriceSchedules",
                        "name": "_rilPriceSchedules",
                        "shape": "PriceScheduleList",
                        "locationName": "priceSchedules",
                        "documentation": "-- | The price of the Reserved Instance listing.",
                        "typeExposed": "[PriceSchedule]",
                        "type": "List \"item\" PriceSchedule"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rilTags",
                        "name": "_rilTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the resource.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilClientToken",
                        "name": "_rilClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | The idempotency token you provided when you created the listing.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilClientToken",
                        "name": "_rilClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | The idempotency token you provided when you created the listing.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilCreateDate",
                        "name": "_rilCreateDate",
                        "shape": "DateTime",
                        "locationName": "createDate",
                        "documentation": "-- | The time the listing was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rilInstanceCounts",
                        "name": "_rilInstanceCounts",
                        "shape": "InstanceCountList",
                        "locationName": "instanceCounts",
                        "documentation": "-- | The number of instances in this state.",
                        "typeExposed": "[InstanceCount]",
                        "type": "List \"item\" InstanceCount"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rilPriceSchedules",
                        "name": "_rilPriceSchedules",
                        "shape": "PriceScheduleList",
                        "locationName": "priceSchedules",
                        "documentation": "-- | The price of the Reserved Instance listing.",
                        "typeExposed": "[PriceSchedule]",
                        "type": "List \"item\" PriceSchedule"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilReservedInstancesId",
                        "name": "_rilReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The ID of the Reserved Instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilReservedInstancesListingId",
                        "name": "_rilReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "-- | The ID of the Reserved Instance listing.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilStatus",
                        "name": "_rilStatus",
                        "shape": "ListingStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of the Reserved Instance listing.",
                        "typeExposed": "Maybe ListingStatus",
                        "type": "Maybe ListingStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilStatusMessage",
                        "name": "_rilStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | The reason for the current status of the Reserved Instance listing. The\n-- response can be blank.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rilTags",
                        "name": "_rilTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the resource.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilUpdateDate",
                        "name": "_rilUpdateDate",
                        "shape": "DateTime",
                        "locationName": "updateDate",
                        "documentation": "-- | The last modified timestamp of the listing.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Spot": "spot"
                },
                "valuePad": 5,
                "name": "InstanceLifecycleType",
                "type": "nullary",
                "branchPad": 4
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Paravirtual": "paravirtual",
                    "Hvm": "hvm"
                },
                "valuePad": 12,
                "name": "VirtualizationType",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "InUse": "in-use",
                    "Detaching": "detaching",
                    "Attaching": "attaching",
                    "Available": "available"
                },
                "valuePad": 10,
                "name": "NetworkInterfaceStatus",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Windows": "Windows"
                },
                "valuePad": 8,
                "name": "PlatformValues",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "createVolumePermission",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "CreateVolumePermission",
                "locationPad": 7,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpUserId",
                        "name": "_cvpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "-- | The specific AWS account ID that is to be added or removed from a volume's\n-- list of create volume permissions.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpGroup",
                        "name": "_cvpGroup",
                        "shape": "PermissionGroup",
                        "locationName": "group",
                        "documentation": "-- | The specific group that is to be added or removed from a volume's list of\n-- create volume permissions.",
                        "typeExposed": "Maybe PermissionGroup",
                        "type": "Maybe PermissionGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpGroup",
                        "name": "_cvpGroup",
                        "shape": "PermissionGroup",
                        "locationName": "group",
                        "documentation": "-- | The specific group that is to be added or removed from a volume's list of\n-- create volume permissions.",
                        "typeExposed": "Maybe PermissionGroup",
                        "type": "Maybe PermissionGroup"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpUserId",
                        "name": "_cvpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "-- | The specific AWS account ID that is to be added or removed from a volume's\n-- list of create volume permissions.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "networkInterfaceAttachmentChanges",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "NetworkInterfaceAttachmentChanges",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niacAttachmentId",
                        "name": "_niacAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "-- | The ID of the network interface attachment.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niacDeleteOnTermination",
                        "name": "_niacDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the network interface is deleted when the instance is\n-- terminated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niacAttachmentId",
                        "name": "_niacAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "-- | The ID of the network interface attachment.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niacDeleteOnTermination",
                        "name": "_niacDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the network interface is deleted when the instance is\n-- terminated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Hourly": "Hourly"
                },
                "valuePad": 7,
                "name": "RecurringChargeFrequency",
                "type": "nullary",
                "branchPad": 6
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "dhcpOptions",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "DhcpOptions",
                "locationPad": 21,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "doDhcpOptionsId",
                        "name": "_doDhcpOptionsId",
                        "shape": "String",
                        "locationName": "dhcpOptionsId",
                        "documentation": "-- | The ID of the set of DHCP options.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "doDhcpConfigurations",
                        "name": "_doDhcpConfigurations",
                        "shape": "DhcpConfigurationList",
                        "locationName": "dhcpConfigurationSet",
                        "documentation": "-- | One or more DHCP options in the set.",
                        "typeExposed": "[DhcpConfiguration]",
                        "type": "List \"item\" DhcpConfiguration"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "doTags",
                        "name": "_doTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the DHCP options set.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "doDhcpConfigurations",
                        "name": "_doDhcpConfigurations",
                        "shape": "DhcpConfigurationList",
                        "locationName": "dhcpConfigurationSet",
                        "documentation": "-- | One or more DHCP options in the set.",
                        "typeExposed": "[DhcpConfiguration]",
                        "type": "List \"item\" DhcpConfiguration"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "doDhcpOptionsId",
                        "name": "_doDhcpOptionsId",
                        "shape": "String",
                        "locationName": "dhcpOptionsId",
                        "documentation": "-- | The ID of the set of DHCP options.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "doTags",
                        "name": "_doTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the DHCP options set.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 35,
                "ctor": "instanceNetworkInterfaceSpecification",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceNetworkInterfaceSpecification",
                "locationPad": 31,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisNetworkInterfaceId",
                        "name": "_inisNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisDeviceIndex",
                        "name": "_inisDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "-- | The index of the device on the instance for the network interface attachment.\n-- If you are specifying a network interface in a 'RunInstances' request, you must\n-- provide the device index.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisSubnetId",
                        "name": "_inisSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet associated with the network string. Applies only if\n-- creating a network interface when launching an instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisDescription",
                        "name": "_inisDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description of the network interface. Applies only if creating a network\n-- interface when launching an instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisPrivateIpAddress",
                        "name": "_inisPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP address of the network interface. Applies only if creating a\n-- network interface when launching an instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "inisGroups",
                        "name": "_inisGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "-- | The IDs of the security groups for the network interface. Applies only if\n-- creating a network interface when launching an instance.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisDeleteOnTermination",
                        "name": "_inisDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | If set to 'true', the interface is deleted when the instance is terminated. You\n-- can specify 'true' only if creating a new network interface when launching an\n-- instance.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "inisPrivateIpAddresses",
                        "name": "_inisPrivateIpAddresses",
                        "shape": "PrivateIpAddressSpecificationList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "-- | One or more private IP addresses to assign to the network interface. Only one\n-- private IP address can be designated as primary.",
                        "typeExposed": "[PrivateIpAddressSpecification]",
                        "type": "List \"item\" PrivateIpAddressSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisSecondaryPrivateIpAddressCount",
                        "name": "_inisSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "-- | The number of secondary private IP addresses. You can't specify this option\n-- and specify more than one private IP address using the private IP addresses\n-- option.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisAssociatePublicIpAddress",
                        "name": "_inisAssociatePublicIpAddress",
                        "shape": "Boolean",
                        "locationName": "associatePublicIpAddress",
                        "documentation": "-- | Indicates whether to assign a public IP address to an instance you launch in\n-- a VPC. The public IP address can only be assigned to a network interface for\n-- eth0, and can only be assigned to a new network interface, not an existing\n-- one. You cannot specify more than one network interface in the request. If\n-- luanching into a default subnet, the default value is 'true'.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisAssociatePublicIpAddress",
                        "name": "_inisAssociatePublicIpAddress",
                        "shape": "Boolean",
                        "locationName": "associatePublicIpAddress",
                        "documentation": "-- | Indicates whether to assign a public IP address to an instance you launch in\n-- a VPC. The public IP address can only be assigned to a network interface for\n-- eth0, and can only be assigned to a new network interface, not an existing\n-- one. You cannot specify more than one network interface in the request. If\n-- luanching into a default subnet, the default value is 'true'.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisDeleteOnTermination",
                        "name": "_inisDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | If set to 'true', the interface is deleted when the instance is terminated. You\n-- can specify 'true' only if creating a new network interface when launching an\n-- instance.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisDescription",
                        "name": "_inisDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description of the network interface. Applies only if creating a network\n-- interface when launching an instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisDeviceIndex",
                        "name": "_inisDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "-- | The index of the device on the instance for the network interface attachment.\n-- If you are specifying a network interface in a 'RunInstances' request, you must\n-- provide the device index.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "inisGroups",
                        "name": "_inisGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "-- | The IDs of the security groups for the network interface. Applies only if\n-- creating a network interface when launching an instance.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisNetworkInterfaceId",
                        "name": "_inisNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisPrivateIpAddress",
                        "name": "_inisPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP address of the network interface. Applies only if creating a\n-- network interface when launching an instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "inisPrivateIpAddresses",
                        "name": "_inisPrivateIpAddresses",
                        "shape": "PrivateIpAddressSpecificationList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "-- | One or more private IP addresses to assign to the network interface. Only one\n-- private IP address can be designated as primary.",
                        "typeExposed": "[PrivateIpAddressSpecification]",
                        "type": "List \"item\" PrivateIpAddressSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisSecondaryPrivateIpAddressCount",
                        "name": "_inisSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "-- | The number of secondary private IP addresses. You can't specify this option\n-- and specify more than one private IP address using the private IP addresses\n-- option.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "inisSubnetId",
                        "name": "_inisSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet associated with the network string. Applies only if\n-- creating a network interface when launching an instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "VSError": "error",
                    "VSInUse": "in-use",
                    "VSCreating": "creating",
                    "VSAvailable": "available",
                    "VSDeleted": "deleted",
                    "VSDeleting": "deleting"
                },
                "valuePad": 10,
                "name": "VolumeState",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "attributeValue",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "avValue",
                    "name": "_avValue",
                    "shape": "String",
                    "locationName": "value",
                    "documentation": "-- | Valid values are case-sensitive and vary by action.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "AttributeValue",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avValue",
                        "name": "_avValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "-- | Valid values are case-sensitive and vary by action.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avValue",
                        "name": "_avValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "-- | Valid values are case-sensitive and vary by action.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "privateIpAddressSpecification",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "piasPrivateIpAddress",
                        "name": "_piasPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP addresses.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "PrivateIpAddressSpecification",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "piasPrimary",
                        "name": "_piasPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "-- | Indicates whether the private IP address is the primary private IP address.\n-- Only one IP address can be designated as primary.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "piasPrimary",
                        "name": "_piasPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "-- | Indicates whether the private IP address is the primary private IP address.\n-- Only one IP address can be designated as primary.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "piasPrivateIpAddress",
                        "name": "_piasPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP addresses.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "image",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iImageId",
                        "name": "_iImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iImageLocation",
                        "name": "_iImageLocation",
                        "shape": "String",
                        "locationName": "imageLocation",
                        "documentation": "-- | The location of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iState",
                        "name": "_iState",
                        "shape": "ImageState",
                        "locationName": "imageState",
                        "documentation": "-- | The current state of the AMI. If the state is 'available', the image is\n-- successfully registered and can be used to launch an instance.",
                        "typeExposed": "ImageState",
                        "type": "ImageState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iOwnerId",
                        "name": "_iOwnerId",
                        "shape": "String",
                        "locationName": "imageOwnerId",
                        "documentation": "-- | The AWS account ID of the image owner.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iPublic",
                        "name": "_iPublic",
                        "shape": "Boolean",
                        "locationName": "isPublic",
                        "documentation": "-- | Indicates whether the image has public launch permissions. The value is 'true'\n-- if this image has public launch permissions or 'false' if it has only implicit\n-- and explicit launch permissions.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iArchitecture",
                        "name": "_iArchitecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "-- | The architecture of the image.",
                        "typeExposed": "ArchitectureValues",
                        "type": "ArchitectureValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iImageType",
                        "name": "_iImageType",
                        "shape": "ImageTypeValues",
                        "locationName": "imageType",
                        "documentation": "-- | The type of image.",
                        "typeExposed": "ImageTypeValues",
                        "type": "ImageTypeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iRootDeviceType",
                        "name": "_iRootDeviceType",
                        "shape": "DeviceType",
                        "locationName": "rootDeviceType",
                        "documentation": "-- | The type of root device used by the AMI. The AMI can use an Amazon EBS volume\n-- or an instance store volume.",
                        "typeExposed": "DeviceType",
                        "type": "DeviceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iVirtualizationType",
                        "name": "_iVirtualizationType",
                        "shape": "VirtualizationType",
                        "locationName": "virtualizationType",
                        "documentation": "-- | The type of virtualization of the AMI.",
                        "typeExposed": "VirtualizationType",
                        "type": "VirtualizationType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iHypervisor",
                        "name": "_iHypervisor",
                        "shape": "HypervisorType",
                        "locationName": "hypervisor",
                        "documentation": "-- | The hypervisor type of the image.",
                        "typeExposed": "HypervisorType",
                        "type": "HypervisorType"
                    }
                ],
                "contentPad": 0,
                "name": "Image",
                "locationPad": 19,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iProductCodes",
                        "name": "_iProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | Any product codes associated with the AMI.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iKernelId",
                        "name": "_iKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "-- | The kernel associated with the image, if any. Only applicable for machine\n-- images.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iRamdiskId",
                        "name": "_iRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "-- | The RAM disk associated with the image, if any. Only applicable for machine\n-- images.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iPlatform",
                        "name": "_iPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "-- | The value is 'Windows' for Windows AMIs; otherwise blank.",
                        "typeExposed": "Maybe PlatformValues",
                        "type": "Maybe PlatformValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iSriovNetSupport",
                        "name": "_iSriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "-- | Specifies whether enhanced networking is enabled.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iStateReason",
                        "name": "_iStateReason",
                        "shape": "StateReason",
                        "locationName": "stateReason",
                        "documentation": "-- | The reason for the state change.",
                        "typeExposed": "Maybe StateReason",
                        "type": "Maybe StateReason"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iImageOwnerAlias",
                        "name": "_iImageOwnerAlias",
                        "shape": "String",
                        "locationName": "imageOwnerAlias",
                        "documentation": "-- | The AWS account alias (for example, 'amazon', 'self') or the AWS account ID of\n-- the AMI owner.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iName",
                        "name": "_iName",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "-- | The name of the AMI that was provided during image creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iDescription",
                        "name": "_iDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description of the AMI that was provided during image creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iRootDeviceName",
                        "name": "_iRootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "-- | The device name of the root device (for example, /dev/sda1 or xvda).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iBlockDeviceMappings",
                        "name": "_iBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | Any block device mapping entries.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"item\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iTags",
                        "name": "_iTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the image.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iArchitecture",
                        "name": "_iArchitecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "-- | The architecture of the image.",
                        "typeExposed": "ArchitectureValues",
                        "type": "ArchitectureValues"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iBlockDeviceMappings",
                        "name": "_iBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | Any block device mapping entries.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"item\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iDescription",
                        "name": "_iDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description of the AMI that was provided during image creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iHypervisor",
                        "name": "_iHypervisor",
                        "shape": "HypervisorType",
                        "locationName": "hypervisor",
                        "documentation": "-- | The hypervisor type of the image.",
                        "typeExposed": "HypervisorType",
                        "type": "HypervisorType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iImageId",
                        "name": "_iImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iImageLocation",
                        "name": "_iImageLocation",
                        "shape": "String",
                        "locationName": "imageLocation",
                        "documentation": "-- | The location of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iImageOwnerAlias",
                        "name": "_iImageOwnerAlias",
                        "shape": "String",
                        "locationName": "imageOwnerAlias",
                        "documentation": "-- | The AWS account alias (for example, 'amazon', 'self') or the AWS account ID of\n-- the AMI owner.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iImageType",
                        "name": "_iImageType",
                        "shape": "ImageTypeValues",
                        "locationName": "imageType",
                        "documentation": "-- | The type of image.",
                        "typeExposed": "ImageTypeValues",
                        "type": "ImageTypeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iKernelId",
                        "name": "_iKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "-- | The kernel associated with the image, if any. Only applicable for machine\n-- images.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iName",
                        "name": "_iName",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "-- | The name of the AMI that was provided during image creation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iOwnerId",
                        "name": "_iOwnerId",
                        "shape": "String",
                        "locationName": "imageOwnerId",
                        "documentation": "-- | The AWS account ID of the image owner.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iPlatform",
                        "name": "_iPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "-- | The value is 'Windows' for Windows AMIs; otherwise blank.",
                        "typeExposed": "Maybe PlatformValues",
                        "type": "Maybe PlatformValues"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iProductCodes",
                        "name": "_iProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | Any product codes associated with the AMI.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iPublic",
                        "name": "_iPublic",
                        "shape": "Boolean",
                        "locationName": "isPublic",
                        "documentation": "-- | Indicates whether the image has public launch permissions. The value is 'true'\n-- if this image has public launch permissions or 'false' if it has only implicit\n-- and explicit launch permissions.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iRamdiskId",
                        "name": "_iRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "-- | The RAM disk associated with the image, if any. Only applicable for machine\n-- images.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iRootDeviceName",
                        "name": "_iRootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "-- | The device name of the root device (for example, /dev/sda1 or xvda).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iRootDeviceType",
                        "name": "_iRootDeviceType",
                        "shape": "DeviceType",
                        "locationName": "rootDeviceType",
                        "documentation": "-- | The type of root device used by the AMI. The AMI can use an Amazon EBS volume\n-- or an instance store volume.",
                        "typeExposed": "DeviceType",
                        "type": "DeviceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iSriovNetSupport",
                        "name": "_iSriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "-- | Specifies whether enhanced networking is enabled.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iState",
                        "name": "_iState",
                        "shape": "ImageState",
                        "locationName": "imageState",
                        "documentation": "-- | The current state of the AMI. If the state is 'available', the image is\n-- successfully registered and can be used to launch an instance.",
                        "typeExposed": "ImageState",
                        "type": "ImageState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iStateReason",
                        "name": "_iStateReason",
                        "shape": "StateReason",
                        "locationName": "stateReason",
                        "documentation": "-- | The reason for the state change.",
                        "typeExposed": "Maybe StateReason",
                        "type": "Maybe StateReason"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iTags",
                        "name": "_iTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the image.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iVirtualizationType",
                        "name": "_iVirtualizationType",
                        "shape": "VirtualizationType",
                        "locationName": "virtualizationType",
                        "documentation": "-- | The type of virtualization of the AMI.",
                        "typeExposed": "VirtualizationType",
                        "type": "VirtualizationType"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "dhcpConfiguration",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "DhcpConfiguration",
                "locationPad": 9,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dcKey",
                        "name": "_dcKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "-- | The name of a DHCP option.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dcValues",
                        "name": "_dcValues",
                        "shape": "DhcpConfigurationValueList",
                        "locationName": "valueSet",
                        "documentation": "-- | One or more values for the DHCP option.",
                        "typeExposed": "[AttributeValue]",
                        "type": "List \"item\" AttributeValue"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dcKey",
                        "name": "_dcKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "-- | The name of a DHCP option.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dcValues",
                        "name": "_dcValues",
                        "shape": "DhcpConfigurationValueList",
                        "locationName": "valueSet",
                        "documentation": "-- | One or more values for the DHCP option.",
                        "typeExposed": "[AttributeValue]",
                        "type": "List \"item\" AttributeValue"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "tag",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "-- | The key of the tag.\n--\n-- Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode\n-- characters. May not begin with 'aws:'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "-- | The value of the tag.\n--\n-- Constraints: Tag values are case-sensitive and accept a maximum of 255\n-- Unicode characters.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "Tag",
                "locationPad": 6,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tagKey",
                        "name": "_tagKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "-- | The key of the tag.\n--\n-- Constraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode\n-- characters. May not begin with 'aws:'",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "tagValue",
                        "name": "_tagValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "-- | The value of the tag.\n--\n-- Constraints: Tag values are case-sensitive and accept a maximum of 255\n-- Unicode characters.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "SupportedPlatforms": "supported-platforms",
                    "DefaultVpc": "default-vpc"
                },
                "valuePad": 20,
                "name": "AccountAttributeName",
                "type": "nullary",
                "branchPad": 18
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 23,
                "ctor": "networkInterfaceAttachment",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "NetworkInterfaceAttachment",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaAttachmentId",
                        "name": "_niaAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "-- | The ID of the network interface attachment.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaInstanceId",
                        "name": "_niaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaInstanceOwnerId",
                        "name": "_niaInstanceOwnerId",
                        "shape": "String",
                        "locationName": "instanceOwnerId",
                        "documentation": "-- | The AWS account ID of the owner of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaDeviceIndex",
                        "name": "_niaDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "-- | The device index of the network interface attachment on the instance.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaStatus",
                        "name": "_niaStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "-- | The attachment state.",
                        "typeExposed": "Maybe AttachmentStatus",
                        "type": "Maybe AttachmentStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaAttachTime",
                        "name": "_niaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The timestamp indicating when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaDeleteOnTermination",
                        "name": "_niaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the network interface is deleted when the instance is\n-- terminated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaAttachTime",
                        "name": "_niaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The timestamp indicating when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaAttachmentId",
                        "name": "_niaAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "-- | The ID of the network interface attachment.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaDeleteOnTermination",
                        "name": "_niaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the network interface is deleted when the instance is\n-- terminated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaDeviceIndex",
                        "name": "_niaDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "-- | The device index of the network interface attachment on the instance.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaInstanceId",
                        "name": "_niaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaInstanceOwnerId",
                        "name": "_niaInstanceOwnerId",
                        "shape": "String",
                        "locationName": "instanceOwnerId",
                        "documentation": "-- | The AWS account ID of the owner of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaStatus",
                        "name": "_niaStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "-- | The attachment state.",
                        "typeExposed": "Maybe AttachmentStatus",
                        "type": "Maybe AttachmentStatus"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Enum"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "runInstancesMonitoringEnabled",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": true,
                    "lens": "rimeEnabled",
                    "name": "_rimeEnabled",
                    "shape": "Boolean",
                    "locationName": "enabled",
                    "documentation": "-- | Indicates whether monitoring is enabled for the instance.",
                    "typeExposed": "Bool",
                    "type": "Bool"
                },
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rimeEnabled",
                        "name": "_rimeEnabled",
                        "shape": "Boolean",
                        "locationName": "enabled",
                        "documentation": "-- | Indicates whether monitoring is enabled for the instance.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "contentPad": 0,
                "name": "RunInstancesMonitoringEnabled",
                "locationPad": 0,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rimeEnabled",
                        "name": "_rimeEnabled",
                        "shape": "Boolean",
                        "locationName": "enabled",
                        "documentation": "-- | Indicates whether monitoring is enabled for the instance.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 11,
                "ctor": "volumeStatusInfo",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VolumeStatusInfo",
                "locationPad": 8,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsiStatus",
                        "name": "_vsiStatus",
                        "shape": "VolumeStatusInfoStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of the volume.",
                        "typeExposed": "Maybe VolumeStatusInfoStatus",
                        "type": "Maybe VolumeStatusInfoStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vsiDetails",
                        "name": "_vsiDetails",
                        "shape": "VolumeStatusDetailsList",
                        "locationName": "details",
                        "documentation": "-- | The details of the volume status.",
                        "typeExposed": "[VolumeStatusDetails]",
                        "type": "List \"item\" VolumeStatusDetails"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vsiDetails",
                        "name": "_vsiDetails",
                        "shape": "VolumeStatusDetailsList",
                        "locationName": "details",
                        "documentation": "-- | The details of the volume status.",
                        "typeExposed": "[VolumeStatusDetails]",
                        "type": "List \"item\" VolumeStatusDetails"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsiStatus",
                        "name": "_vsiStatus",
                        "shape": "VolumeStatusInfoStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of the volume.",
                        "typeExposed": "Maybe VolumeStatusInfoStatus",
                        "type": "Maybe VolumeStatusInfoStatus"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "networkInterfaceAssociation",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "NetworkInterfaceAssociation",
                "locationPad": 14,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaPublicIp",
                        "name": "_niaPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "-- | The address of the Elastic IP address bound to the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaPublicDnsName",
                        "name": "_niaPublicDnsName",
                        "shape": "String",
                        "locationName": "publicDnsName",
                        "documentation": "-- | The public DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaIpOwnerId",
                        "name": "_niaIpOwnerId",
                        "shape": "String",
                        "locationName": "ipOwnerId",
                        "documentation": "-- | The ID of the Elastic IP address owner.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaAllocationId",
                        "name": "_niaAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "-- | The allocation ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaAssociationId",
                        "name": "_niaAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The association ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaAllocationId",
                        "name": "_niaAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "-- | The allocation ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaAssociationId",
                        "name": "_niaAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The association ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaIpOwnerId",
                        "name": "_niaIpOwnerId",
                        "shape": "String",
                        "locationName": "ipOwnerId",
                        "documentation": "-- | The ID of the Elastic IP address owner.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaPublicDnsName",
                        "name": "_niaPublicDnsName",
                        "shape": "String",
                        "locationName": "publicDnsName",
                        "documentation": "-- | The public DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niaPublicIp",
                        "name": "_niaPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "-- | The address of the Elastic IP address bound to the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 11,
                "ctor": "createVolumePermissionModifications",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "CreateVolumePermissionModifications",
                "locationPad": 7,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cvpmAdd",
                        "name": "_cvpmAdd",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "Add",
                        "documentation": "-- | Adds a specific AWS account ID or group to a volume's list of create volume\n-- permissions.",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "List \"item\" CreateVolumePermission"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cvpmRemove",
                        "name": "_cvpmRemove",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "Remove",
                        "documentation": "-- | Removes a specific AWS account ID or group from a volume's list of create\n-- volume permissions.",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "List \"item\" CreateVolumePermission"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cvpmAdd",
                        "name": "_cvpmAdd",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "Add",
                        "documentation": "-- | Adds a specific AWS account ID or group to a volume's list of create volume\n-- permissions.",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "List \"item\" CreateVolumePermission"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cvpmRemove",
                        "name": "_cvpmRemove",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "Remove",
                        "documentation": "-- | Removes a specific AWS account ID or group from a volume's list of create\n-- volume permissions.",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "List \"item\" CreateVolumePermission"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "VpcStatePending": "pending",
                    "VpcStateAvailable": "available"
                },
                "valuePad": 10,
                "name": "VpcState",
                "type": "nullary",
                "branchPad": 17
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "RTSecurityGroup": "security-group",
                    "RTSnapshot": "snapshot",
                    "RTSubnet": "subnet",
                    "RTNetworkInterface": "network-interface",
                    "RTReservedInstances": "reserved-instances",
                    "RTInstance'": "instance",
                    "RTVpnConnection": "vpn-connection",
                    "RTNetworkAcl": "network-acl",
                    "RTVpnGateway": "vpn-gateway",
                    "RTDhcpOptions": "dhcp-options",
                    "RTImage": "image",
                    "RTCustomerGateway": "customer-gateway",
                    "RTInternetGateway": "internet-gateway",
                    "RTSpotInstancesRequest": "spot-instances-request",
                    "RTVpc": "vpc",
                    "RTVolume": "volume",
                    "RTRouteTable": "route-table"
                },
                "valuePad": 23,
                "name": "ResourceType",
                "type": "nullary",
                "branchPad": 22
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Ok": "ok",
                    "Impaired": "impaired"
                },
                "valuePad": 9,
                "name": "ReportStatusType",
                "type": "nullary",
                "branchPad": 8
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Usd": "USD"
                },
                "valuePad": 4,
                "name": "CurrencyCodeValues",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 8,
                "ctor": "icmpTypeCode",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "IcmpTypeCode",
                "locationPad": 5,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "itcType",
                        "name": "_itcType",
                        "shape": "Integer",
                        "locationName": "type",
                        "documentation": "-- | The ICMP code. A value of -1 means all codes for the specified ICMP type.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "itcCode",
                        "name": "_itcCode",
                        "shape": "Integer",
                        "locationName": "code",
                        "documentation": "-- | The ICMP type. A value of -1 means all types.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "itcCode",
                        "name": "_itcCode",
                        "shape": "Integer",
                        "locationName": "code",
                        "documentation": "-- | The ICMP type. A value of -1 means all types.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "itcType",
                        "name": "_itcType",
                        "shape": "Integer",
                        "locationName": "type",
                        "documentation": "-- | The ICMP code. A value of -1 means all codes for the specified ICMP type.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 16,
                "ctor": "instanceCount",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceCount",
                "locationPad": 14,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "icState",
                        "name": "_icState",
                        "shape": "ListingState",
                        "locationName": "state",
                        "documentation": "-- | The states of the listed Reserved Instances.",
                        "typeExposed": "Maybe ListingState",
                        "type": "Maybe ListingState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "icInstanceCount",
                        "name": "_icInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "-- | he number of listed Reserved Instances in the state specified by the 'state'.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "icInstanceCount",
                        "name": "_icInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "-- | he number of listed Reserved Instances in the state specified by the 'state'.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "icState",
                        "name": "_icState",
                        "shape": "ListingState",
                        "locationName": "state",
                        "documentation": "-- | The states of the listed Reserved Instances.",
                        "typeExposed": "Maybe ListingState",
                        "type": "Maybe ListingState"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "exportToS3Task",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ExportToS3Task",
                "locationPad": 16,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstDiskImageFormat",
                        "name": "_etstDiskImageFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "diskImageFormat",
                        "documentation": "-- | The format for the exported image.",
                        "typeExposed": "Maybe DiskImageFormat",
                        "type": "Maybe DiskImageFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstContainerFormat",
                        "name": "_etstContainerFormat",
                        "shape": "ContainerFormat",
                        "locationName": "containerFormat",
                        "documentation": "-- | The container format used to combine disk images with metadata (such as OVF).\n-- If absent, only the disk image is exported.",
                        "typeExposed": "Maybe ContainerFormat",
                        "type": "Maybe ContainerFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstS3Bucket",
                        "name": "_etstS3Bucket",
                        "shape": "String",
                        "locationName": "s3Bucket",
                        "documentation": "-- | The Amazon S3 bucket for the destination image. The destination bucket must\n-- exist and grant WRITE and READ_ACL permissions to the AWS account 'vm-import-export@amazon.com'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstS3Key",
                        "name": "_etstS3Key",
                        "shape": "String",
                        "locationName": "s3Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstContainerFormat",
                        "name": "_etstContainerFormat",
                        "shape": "ContainerFormat",
                        "locationName": "containerFormat",
                        "documentation": "-- | The container format used to combine disk images with metadata (such as OVF).\n-- If absent, only the disk image is exported.",
                        "typeExposed": "Maybe ContainerFormat",
                        "type": "Maybe ContainerFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstDiskImageFormat",
                        "name": "_etstDiskImageFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "diskImageFormat",
                        "documentation": "-- | The format for the exported image.",
                        "typeExposed": "Maybe DiskImageFormat",
                        "type": "Maybe DiskImageFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstS3Bucket",
                        "name": "_etstS3Bucket",
                        "shape": "String",
                        "locationName": "s3Bucket",
                        "documentation": "-- | The Amazon S3 bucket for the destination image. The destination bucket must\n-- exist and grant WRITE and READ_ACL permissions to the AWS account 'vm-import-export@amazon.com'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstS3Key",
                        "name": "_etstS3Key",
                        "shape": "String",
                        "locationName": "s3Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "blockDeviceMapping",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "bdmDeviceName",
                        "name": "_bdmDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "-- | The device name exposed to the instance (for example, '/dev/sdh').",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "BlockDeviceMapping",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bdmVirtualName",
                        "name": "_bdmVirtualName",
                        "shape": "String",
                        "locationName": "virtualName",
                        "documentation": "-- | The virtual device name (ephemeral[0..3]). The number of available instance\n-- store volumes depends on the instance type. After you connect to the\n-- instance, you must mount the volume.\n--\n-- Constraints: For M3 instances, you must specify instance store volumes in\n-- the block device mapping for the instance. When you launch an M3 instance, we\n-- ignore any instance store volumes specified in the block device mapping for\n-- the AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bdmEbs",
                        "name": "_bdmEbs",
                        "shape": "EbsBlockDevice",
                        "locationName": "ebs",
                        "documentation": "-- | Parameters used to automatically set up Amazon EBS volumes when the instance\n-- is launched.",
                        "typeExposed": "Maybe EbsBlockDevice",
                        "type": "Maybe EbsBlockDevice"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bdmNoDevice",
                        "name": "_bdmNoDevice",
                        "shape": "String",
                        "locationName": "noDevice",
                        "documentation": "-- | Suppresses the specified device included in the block device mapping of the\n-- AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "bdmDeviceName",
                        "name": "_bdmDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "-- | The device name exposed to the instance (for example, '/dev/sdh').",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bdmEbs",
                        "name": "_bdmEbs",
                        "shape": "EbsBlockDevice",
                        "locationName": "ebs",
                        "documentation": "-- | Parameters used to automatically set up Amazon EBS volumes when the instance\n-- is launched.",
                        "typeExposed": "Maybe EbsBlockDevice",
                        "type": "Maybe EbsBlockDevice"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bdmNoDevice",
                        "name": "_bdmNoDevice",
                        "shape": "String",
                        "locationName": "noDevice",
                        "documentation": "-- | Suppresses the specified device included in the block device mapping of the\n-- AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bdmVirtualName",
                        "name": "_bdmVirtualName",
                        "shape": "String",
                        "locationName": "virtualName",
                        "documentation": "-- | The virtual device name (ephemeral[0..3]). The number of available instance\n-- store volumes depends on the instance type. After you connect to the\n-- instance, you must mount the volume.\n--\n-- Constraints: For M3 instances, you must specify instance store volumes in\n-- the block device mapping for the instance. When you launch an M3 instance, we\n-- ignore any instance store volumes specified in the block device mapping for\n-- the AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "conversionTask",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ctConversionTaskId",
                        "name": "_ctConversionTaskId",
                        "shape": "String",
                        "locationName": "conversionTaskId",
                        "documentation": "-- | The ID of the conversion task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ctState",
                        "name": "_ctState",
                        "shape": "ConversionTaskState",
                        "locationName": "state",
                        "documentation": "-- | The state of the conversion task.",
                        "typeExposed": "ConversionTaskState",
                        "type": "ConversionTaskState"
                    }
                ],
                "contentPad": 0,
                "name": "ConversionTask",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ctExpirationTime",
                        "name": "_ctExpirationTime",
                        "shape": "String",
                        "locationName": "expirationTime",
                        "documentation": "-- | The time when the task expires. If the upload isn't complete before the\n-- expiration time, we automatically cancel the task.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ctImportInstance",
                        "name": "_ctImportInstance",
                        "shape": "ImportInstanceTaskDetails",
                        "locationName": "importInstance",
                        "documentation": "-- | If the task is for importing an instance, this contains information about the\n-- import instance task.",
                        "typeExposed": "Maybe ImportInstanceTaskDetails",
                        "type": "Maybe ImportInstanceTaskDetails"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ctImportVolume",
                        "name": "_ctImportVolume",
                        "shape": "ImportVolumeTaskDetails",
                        "locationName": "importVolume",
                        "documentation": "-- | If the task is for importing a volume, this contains information about the\n-- import volume task.",
                        "typeExposed": "Maybe ImportVolumeTaskDetails",
                        "type": "Maybe ImportVolumeTaskDetails"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ctStatusMessage",
                        "name": "_ctStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | The status message related to the conversion task.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ctTags",
                        "name": "_ctTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ctConversionTaskId",
                        "name": "_ctConversionTaskId",
                        "shape": "String",
                        "locationName": "conversionTaskId",
                        "documentation": "-- | The ID of the conversion task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ctExpirationTime",
                        "name": "_ctExpirationTime",
                        "shape": "String",
                        "locationName": "expirationTime",
                        "documentation": "-- | The time when the task expires. If the upload isn't complete before the\n-- expiration time, we automatically cancel the task.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ctImportInstance",
                        "name": "_ctImportInstance",
                        "shape": "ImportInstanceTaskDetails",
                        "locationName": "importInstance",
                        "documentation": "-- | If the task is for importing an instance, this contains information about the\n-- import instance task.",
                        "typeExposed": "Maybe ImportInstanceTaskDetails",
                        "type": "Maybe ImportInstanceTaskDetails"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ctImportVolume",
                        "name": "_ctImportVolume",
                        "shape": "ImportVolumeTaskDetails",
                        "locationName": "importVolume",
                        "documentation": "-- | If the task is for importing a volume, this contains information about the\n-- import volume task.",
                        "typeExposed": "Maybe ImportVolumeTaskDetails",
                        "type": "Maybe ImportVolumeTaskDetails"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ctState",
                        "name": "_ctState",
                        "shape": "ConversionTaskState",
                        "locationName": "state",
                        "documentation": "-- | The state of the conversion task.",
                        "typeExposed": "ConversionTaskState",
                        "type": "ConversionTaskState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ctStatusMessage",
                        "name": "_ctStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | The status message related to the conversion task.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ctTags",
                        "name": "_ctTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "ASDetached": "detached",
                    "ASDetaching": "detaching",
                    "ASAttached": "attached",
                    "ASAttaching": "attaching"
                },
                "valuePad": 10,
                "name": "AttachmentStatus",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "OriginCreateRouteTable": "CreateRouteTable",
                    "OriginEnableVgwRoutePropagation": "EnableVgwRoutePropagation",
                    "OriginCreateRoute": "CreateRoute"
                },
                "valuePad": 26,
                "name": "RouteOrigin",
                "type": "nullary",
                "branchPad": 31
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "LSPending": "pending",
                    "LSAvailable": "available",
                    "LSCancelled": "cancelled",
                    "LSSold": "sold"
                },
                "valuePad": 10,
                "name": "ListingState",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "spotPrice",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "SpotPrice",
                "locationPad": 19,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "spInstanceType",
                        "name": "_spInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type.",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "spProductDescription",
                        "name": "_spProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "-- | A general description of the AMI.",
                        "typeExposed": "Maybe RIProductDescription",
                        "type": "Maybe RIProductDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "spSpotPrice",
                        "name": "_spSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "-- | The maximum price you will pay to launch one or more Spot Instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "spTimestamp",
                        "name": "_spTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "-- | The date and time the request was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "spAvailabilityZone",
                        "name": "_spAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "spAvailabilityZone",
                        "name": "_spAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "spInstanceType",
                        "name": "_spInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type.",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "spProductDescription",
                        "name": "_spProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "-- | A general description of the AMI.",
                        "typeExposed": "Maybe RIProductDescription",
                        "type": "Maybe RIProductDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "spSpotPrice",
                        "name": "_spSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "-- | The maximum price you will pay to launch one or more Spot Instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "spTimestamp",
                        "name": "_spTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "-- | The date and time the request was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 13,
                "ctor": "instanceMonitoring",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceMonitoring",
                "locationPad": 11,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "imInstanceId",
                        "name": "_imInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "imMonitoring",
                        "name": "_imMonitoring",
                        "shape": "Monitoring",
                        "locationName": "monitoring",
                        "documentation": "-- | The monitoring information.",
                        "typeExposed": "Maybe Monitoring",
                        "type": "Maybe Monitoring"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "imInstanceId",
                        "name": "_imInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "imMonitoring",
                        "name": "_imMonitoring",
                        "shape": "Monitoring",
                        "locationName": "monitoring",
                        "documentation": "-- | The monitoring information.",
                        "typeExposed": "Maybe Monitoring",
                        "type": "Maybe Monitoring"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 16,
                "ctor": "priceScheduleSpecification",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PriceScheduleSpecification",
                "locationPad": 13,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pssTerm",
                        "name": "_pssTerm",
                        "shape": "Long",
                        "locationName": "term",
                        "documentation": "-- | The number of months remaining in the reservation. For example, 2 is the\n-- second to the last month before the capacity reservation expires.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pssPrice",
                        "name": "_pssPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "-- | The fixed price for the term.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pssCurrencyCode",
                        "name": "_pssCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "-- | The currency for transacting the Reserved Instance resale. At this time, the\n-- only supported currency is 'USD'.",
                        "typeExposed": "Maybe CurrencyCodeValues",
                        "type": "Maybe CurrencyCodeValues"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pssCurrencyCode",
                        "name": "_pssCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "-- | The currency for transacting the Reserved Instance resale. At this time, the\n-- only supported currency is 'USD'.",
                        "typeExposed": "Maybe CurrencyCodeValues",
                        "type": "Maybe CurrencyCodeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pssPrice",
                        "name": "_pssPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "-- | The fixed price for the term.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pssTerm",
                        "name": "_pssTerm",
                        "shape": "Long",
                        "locationName": "term",
                        "documentation": "-- | The number of months remaining in the reservation. For example, 2 is the\n-- second to the last month before the capacity reservation expires.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 14,
                "ctor": "spotInstanceStatus",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "SpotInstanceStatus",
                "locationPad": 11,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sisCode",
                        "name": "_sisCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The status code of the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sisUpdateTime",
                        "name": "_sisUpdateTime",
                        "shape": "DateTime",
                        "locationName": "updateTime",
                        "documentation": "-- | The time of the most recent status update.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sisMessage",
                        "name": "_sisMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The description for the status code for the Spot request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sisCode",
                        "name": "_sisCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The status code of the request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sisMessage",
                        "name": "_sisMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The description for the status code for the Spot request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sisUpdateTime",
                        "name": "_sisUpdateTime",
                        "shape": "DateTime",
                        "locationName": "updateTime",
                        "documentation": "-- | The time of the most recent status update.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "AZSAvailable": "available"
                },
                "valuePad": 10,
                "name": "AvailabilityZoneState",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 27,
                "ctor": "spotInstanceRequest",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "SpotInstanceRequest",
                "locationPad": 25,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siSpotInstanceRequestId",
                        "name": "_siSpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "-- | The ID of the Spot Instance request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siSpotPrice",
                        "name": "_siSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "-- | The maximum hourly price for any Spot Instance launched to fulfill the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siType",
                        "name": "_siType",
                        "shape": "SpotInstanceType",
                        "locationName": "type",
                        "documentation": "-- | The Spot Instance request type.",
                        "typeExposed": "Maybe SpotInstanceType",
                        "type": "Maybe SpotInstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siState",
                        "name": "_siState",
                        "shape": "SpotInstanceState",
                        "locationName": "state",
                        "documentation": "-- | The state of the Spot Instance request. Spot bid status information can help\n-- you track your Spot Instance requests. For information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-bid-status.html Tracking SpotRequests with Bid Status Codes\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
                        "typeExposed": "Maybe SpotInstanceState",
                        "type": "Maybe SpotInstanceState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siFault",
                        "name": "_siFault",
                        "shape": "SpotInstanceStateFault",
                        "locationName": "fault",
                        "documentation": "-- | The fault codes for the Spot Instance request, if any.",
                        "typeExposed": "Maybe SpotInstanceStateFault",
                        "type": "Maybe SpotInstanceStateFault"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siStatus",
                        "name": "_siStatus",
                        "shape": "SpotInstanceStatus",
                        "locationName": "status",
                        "documentation": "-- | The status code and status message describing the Spot Instance request.",
                        "typeExposed": "Maybe SpotInstanceStatus",
                        "type": "Maybe SpotInstanceStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siValidFrom",
                        "name": "_siValidFrom",
                        "shape": "DateTime",
                        "locationName": "validFrom",
                        "documentation": "-- | The start date of the request. If this is a one-time request, the request\n-- becomes active at this date and time and remains active until all instances\n-- launch, the request expires, or the request is canceled. If the request is\n-- persistent, the request becomes active at this date and time and remains\n-- active until it expires or is canceled.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siValidUntil",
                        "name": "_siValidUntil",
                        "shape": "DateTime",
                        "locationName": "validUntil",
                        "documentation": "-- | The end date of the request. If this is a one-time request, the request\n-- remains active until all instances launch, the request is canceled, or this\n-- date is reached. If the request is persistent, it remains active until it is\n-- canceled or this date is reached.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siLaunchGroup",
                        "name": "_siLaunchGroup",
                        "shape": "String",
                        "locationName": "launchGroup",
                        "documentation": "-- | The instance launch group. Launch groups are Spot Instances that launch\n-- together and terminate together.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siAvailabilityZoneGroup",
                        "name": "_siAvailabilityZoneGroup",
                        "shape": "String",
                        "locationName": "availabilityZoneGroup",
                        "documentation": "-- | The Availability Zone group. If you specify the same Availability Zone group\n-- for all Spot Instance requests, all Spot Instances are launched in the same\n-- Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siLaunchSpecification",
                        "name": "_siLaunchSpecification",
                        "shape": "LaunchSpecification",
                        "locationName": "launchSpecification",
                        "documentation": "-- | Additional information for launching instances.",
                        "typeExposed": "Maybe LaunchSpecification",
                        "type": "Maybe LaunchSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siInstanceId",
                        "name": "_siInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The instance ID, if an instance has been launched to fulfill the Spot\n-- Instance request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siCreateTime",
                        "name": "_siCreateTime",
                        "shape": "DateTime",
                        "locationName": "createTime",
                        "documentation": "-- | The time stamp when the Spot Instance request was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siProductDescription",
                        "name": "_siProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "-- | The product description associated with the Spot Instance.",
                        "typeExposed": "Maybe RIProductDescription",
                        "type": "Maybe RIProductDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "siTags",
                        "name": "_siTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the resource.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siLaunchedAvailabilityZone",
                        "name": "_siLaunchedAvailabilityZone",
                        "shape": "String",
                        "locationName": "launchedAvailabilityZone",
                        "documentation": "-- | The Availability Zone in which the bid is launched.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siAvailabilityZoneGroup",
                        "name": "_siAvailabilityZoneGroup",
                        "shape": "String",
                        "locationName": "availabilityZoneGroup",
                        "documentation": "-- | The Availability Zone group. If you specify the same Availability Zone group\n-- for all Spot Instance requests, all Spot Instances are launched in the same\n-- Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siCreateTime",
                        "name": "_siCreateTime",
                        "shape": "DateTime",
                        "locationName": "createTime",
                        "documentation": "-- | The time stamp when the Spot Instance request was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siFault",
                        "name": "_siFault",
                        "shape": "SpotInstanceStateFault",
                        "locationName": "fault",
                        "documentation": "-- | The fault codes for the Spot Instance request, if any.",
                        "typeExposed": "Maybe SpotInstanceStateFault",
                        "type": "Maybe SpotInstanceStateFault"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siInstanceId",
                        "name": "_siInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The instance ID, if an instance has been launched to fulfill the Spot\n-- Instance request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siLaunchGroup",
                        "name": "_siLaunchGroup",
                        "shape": "String",
                        "locationName": "launchGroup",
                        "documentation": "-- | The instance launch group. Launch groups are Spot Instances that launch\n-- together and terminate together.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siLaunchSpecification",
                        "name": "_siLaunchSpecification",
                        "shape": "LaunchSpecification",
                        "locationName": "launchSpecification",
                        "documentation": "-- | Additional information for launching instances.",
                        "typeExposed": "Maybe LaunchSpecification",
                        "type": "Maybe LaunchSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siLaunchedAvailabilityZone",
                        "name": "_siLaunchedAvailabilityZone",
                        "shape": "String",
                        "locationName": "launchedAvailabilityZone",
                        "documentation": "-- | The Availability Zone in which the bid is launched.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siProductDescription",
                        "name": "_siProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "-- | The product description associated with the Spot Instance.",
                        "typeExposed": "Maybe RIProductDescription",
                        "type": "Maybe RIProductDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siSpotInstanceRequestId",
                        "name": "_siSpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "-- | The ID of the Spot Instance request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siSpotPrice",
                        "name": "_siSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "-- | The maximum hourly price for any Spot Instance launched to fulfill the\n-- request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siState",
                        "name": "_siState",
                        "shape": "SpotInstanceState",
                        "locationName": "state",
                        "documentation": "-- | The state of the Spot Instance request. Spot bid status information can help\n-- you track your Spot Instance requests. For information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-bid-status.html Tracking SpotRequests with Bid Status Codes\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
                        "typeExposed": "Maybe SpotInstanceState",
                        "type": "Maybe SpotInstanceState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siStatus",
                        "name": "_siStatus",
                        "shape": "SpotInstanceStatus",
                        "locationName": "status",
                        "documentation": "-- | The status code and status message describing the Spot Instance request.",
                        "typeExposed": "Maybe SpotInstanceStatus",
                        "type": "Maybe SpotInstanceStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "siTags",
                        "name": "_siTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the resource.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siType",
                        "name": "_siType",
                        "shape": "SpotInstanceType",
                        "locationName": "type",
                        "documentation": "-- | The Spot Instance request type.",
                        "typeExposed": "Maybe SpotInstanceType",
                        "type": "Maybe SpotInstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siValidFrom",
                        "name": "_siValidFrom",
                        "shape": "DateTime",
                        "locationName": "validFrom",
                        "documentation": "-- | The start date of the request. If this is a one-time request, the request\n-- becomes active at this date and time and remains active until all instances\n-- launch, the request expires, or the request is canceled. If the request is\n-- persistent, the request becomes active at this date and time and remains\n-- active until it expires or is canceled.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siValidUntil",
                        "name": "_siValidUntil",
                        "shape": "DateTime",
                        "locationName": "validUntil",
                        "documentation": "-- | The end date of the request. If this is a one-time request, the request\n-- remains active until all instances launch, the request is canceled, or this\n-- date is reached. If the request is persistent, it remains active until it is\n-- canceled or this date is reached.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "launchSpecification",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "LaunchSpecification",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsImageId",
                        "name": "_lsImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsKeyName",
                        "name": "_lsKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The name of the key pair.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "lsSecurityGroups",
                        "name": "_lsSecurityGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | One or more security groups. If requesting a Spot Instance in a nondefault\n-- VPC, you must specify the security group ID. If requesting a Spot Instance in\n-- EC2-Classic or a default VPC, you can specify either the security group name\n-- or ID.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsUserData",
                        "name": "_lsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "-- | The Base64-encoded MIME user data to make available to the instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsAddressingType",
                        "name": "_lsAddressingType",
                        "shape": "String",
                        "locationName": "addressingType",
                        "documentation": "-- | Deprecated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsInstanceType",
                        "name": "_lsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type.\n--\n-- Default: 'm1.small'",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsPlacement",
                        "name": "_lsPlacement",
                        "shape": "SpotPlacement",
                        "locationName": "placement",
                        "documentation": "-- | The placement information for the instance.",
                        "typeExposed": "Maybe SpotPlacement",
                        "type": "Maybe SpotPlacement"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsKernelId",
                        "name": "_lsKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "-- | The ID of the kernel.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsRamdiskId",
                        "name": "_lsRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "-- | The ID of the RAM disk.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "lsBlockDeviceMappings",
                        "name": "_lsBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | One or more block device mapping entries.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"item\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsSubnetId",
                        "name": "_lsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet in which to launch the Spot Instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "lsNetworkInterfaces",
                        "name": "_lsNetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "-- | One or more network interfaces.",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "List \"item\" InstanceNetworkInterfaceSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsIamInstanceProfile",
                        "name": "_lsIamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "-- | The IAM instance profile.",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsEbsOptimized",
                        "name": "_lsEbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Indicates whether the instance is optimized for EBS I/O. This optimization\n-- provides dedicated throughput to Amazon EBS and an optimized configuration\n-- stack to provide optimal EBS I/O performance. This optimization isn't\n-- available with all instance types. Additional usage charges apply when using\n-- an EBS Optimized instance.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsMonitoring",
                        "name": "_lsMonitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsAddressingType",
                        "name": "_lsAddressingType",
                        "shape": "String",
                        "locationName": "addressingType",
                        "documentation": "-- | Deprecated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "lsBlockDeviceMappings",
                        "name": "_lsBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | One or more block device mapping entries.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"item\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsEbsOptimized",
                        "name": "_lsEbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Indicates whether the instance is optimized for EBS I/O. This optimization\n-- provides dedicated throughput to Amazon EBS and an optimized configuration\n-- stack to provide optimal EBS I/O performance. This optimization isn't\n-- available with all instance types. Additional usage charges apply when using\n-- an EBS Optimized instance.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsIamInstanceProfile",
                        "name": "_lsIamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "-- | The IAM instance profile.",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsImageId",
                        "name": "_lsImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsInstanceType",
                        "name": "_lsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type.\n--\n-- Default: 'm1.small'",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsKernelId",
                        "name": "_lsKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "-- | The ID of the kernel.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsKeyName",
                        "name": "_lsKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The name of the key pair.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsMonitoring",
                        "name": "_lsMonitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "lsNetworkInterfaces",
                        "name": "_lsNetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "-- | One or more network interfaces.",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "List \"item\" InstanceNetworkInterfaceSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsPlacement",
                        "name": "_lsPlacement",
                        "shape": "SpotPlacement",
                        "locationName": "placement",
                        "documentation": "-- | The placement information for the instance.",
                        "typeExposed": "Maybe SpotPlacement",
                        "type": "Maybe SpotPlacement"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsRamdiskId",
                        "name": "_lsRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "-- | The ID of the RAM disk.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "lsSecurityGroups",
                        "name": "_lsSecurityGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | One or more security groups. If requesting a Spot Instance in a nondefault\n-- VPC, you must specify the security group ID. If requesting a Spot Instance in\n-- EC2-Classic or a default VPC, you can specify either the security group name\n-- or ID.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsSubnetId",
                        "name": "_lsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet in which to launch the Spot Instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lsUserData",
                        "name": "_lsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "-- | The Base64-encoded MIME user data to make available to the instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "volumeStatusEvent",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VolumeStatusEvent",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vseEventType",
                        "name": "_vseEventType",
                        "shape": "String",
                        "locationName": "eventType",
                        "documentation": "-- | The type of this event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vseDescription",
                        "name": "_vseDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description of the event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vseNotBefore",
                        "name": "_vseNotBefore",
                        "shape": "DateTime",
                        "locationName": "notBefore",
                        "documentation": "-- | The earliest start time of the event.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vseNotAfter",
                        "name": "_vseNotAfter",
                        "shape": "DateTime",
                        "locationName": "notAfter",
                        "documentation": "-- | The latest end time of the event.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vseEventId",
                        "name": "_vseEventId",
                        "shape": "String",
                        "locationName": "eventId",
                        "documentation": "-- | The ID of this event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vseDescription",
                        "name": "_vseDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description of the event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vseEventId",
                        "name": "_vseEventId",
                        "shape": "String",
                        "locationName": "eventId",
                        "documentation": "-- | The ID of this event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vseEventType",
                        "name": "_vseEventType",
                        "shape": "String",
                        "locationName": "eventType",
                        "documentation": "-- | The type of this event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vseNotAfter",
                        "name": "_vseNotAfter",
                        "shape": "DateTime",
                        "locationName": "notAfter",
                        "documentation": "-- | The latest end time of the event.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vseNotBefore",
                        "name": "_vseNotBefore",
                        "shape": "DateTime",
                        "locationName": "notBefore",
                        "documentation": "-- | The earliest start time of the event.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "volume",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vVolumeId",
                        "name": "_vVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vSize",
                        "name": "_vSize",
                        "shape": "Integer",
                        "locationName": "size",
                        "documentation": "-- | The size of the volume, in GiBs.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vSnapshotId",
                        "name": "_vSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The snapshot from which the volume was created, if applicable.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vAvailabilityZone",
                        "name": "_vAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone for the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vState",
                        "name": "_vState",
                        "shape": "VolumeState",
                        "locationName": "status",
                        "documentation": "-- | The volume state.",
                        "typeExposed": "VolumeState",
                        "type": "VolumeState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vCreateTime",
                        "name": "_vCreateTime",
                        "shape": "DateTime",
                        "locationName": "createTime",
                        "documentation": "-- | The time stamp when volume creation was initiated.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vVolumeType",
                        "name": "_vVolumeType",
                        "shape": "VolumeType",
                        "locationName": "volumeType",
                        "documentation": "-- | The volume type. This can be 'gp2' for General Purpose (SSD) volumes, 'io1' for\n-- Provisioned IOPS (SSD) volumes, or 'standard' for Magnetic volumes.",
                        "typeExposed": "VolumeType",
                        "type": "VolumeType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vEncrypted",
                        "name": "_vEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Indicates whether the volume is encrypted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "contentPad": 0,
                "name": "Volume",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vAttachments",
                        "name": "_vAttachments",
                        "shape": "VolumeAttachmentList",
                        "locationName": "attachmentSet",
                        "documentation": null,
                        "typeExposed": "[VolumeAttachment]",
                        "type": "List \"item\" VolumeAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vTags",
                        "name": "_vTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the volume.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vIops",
                        "name": "_vIops",
                        "shape": "Integer",
                        "locationName": "iops",
                        "documentation": "-- | The number of I/O operations per second (IOPS) that the volume supports. For\n-- Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are\n-- provisioned for the volume. For General Purpose (SSD) volumes, this\n-- represents the baseline performance of the volume and the rate at which the\n-- volume accumulates I/O credits for bursting. For more information on General\n-- Purpose (SSD) baseline performance, I/O credits, and bursting, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html Amazon EBSVolume Types\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- Constraint: Range is 100 to 4000 for Provisioned IOPS (SSD) volumes and 3 to\n-- 3072 for General Purpose (SSD) volumes.\n--\n-- Condition: This parameter is required for requests to create 'io1' volumes; it\n-- is not used in requests to create 'standard' or 'gp2' volumes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vKmsKeyId",
                        "name": "_vKmsKeyId",
                        "shape": "String",
                        "locationName": "kmsKeyId",
                        "documentation": "-- | The full ARN of the AWS Key Management Service (KMS) Customer Master Key\n-- (CMK) that was used to protect the volume encryption key for the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vAttachments",
                        "name": "_vAttachments",
                        "shape": "VolumeAttachmentList",
                        "locationName": "attachmentSet",
                        "documentation": null,
                        "typeExposed": "[VolumeAttachment]",
                        "type": "List \"item\" VolumeAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vAvailabilityZone",
                        "name": "_vAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone for the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vCreateTime",
                        "name": "_vCreateTime",
                        "shape": "DateTime",
                        "locationName": "createTime",
                        "documentation": "-- | The time stamp when volume creation was initiated.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vEncrypted",
                        "name": "_vEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Indicates whether the volume is encrypted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vIops",
                        "name": "_vIops",
                        "shape": "Integer",
                        "locationName": "iops",
                        "documentation": "-- | The number of I/O operations per second (IOPS) that the volume supports. For\n-- Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are\n-- provisioned for the volume. For General Purpose (SSD) volumes, this\n-- represents the baseline performance of the volume and the rate at which the\n-- volume accumulates I/O credits for bursting. For more information on General\n-- Purpose (SSD) baseline performance, I/O credits, and bursting, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html Amazon EBSVolume Types\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- Constraint: Range is 100 to 4000 for Provisioned IOPS (SSD) volumes and 3 to\n-- 3072 for General Purpose (SSD) volumes.\n--\n-- Condition: This parameter is required for requests to create 'io1' volumes; it\n-- is not used in requests to create 'standard' or 'gp2' volumes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vKmsKeyId",
                        "name": "_vKmsKeyId",
                        "shape": "String",
                        "locationName": "kmsKeyId",
                        "documentation": "-- | The full ARN of the AWS Key Management Service (KMS) Customer Master Key\n-- (CMK) that was used to protect the volume encryption key for the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vSize",
                        "name": "_vSize",
                        "shape": "Integer",
                        "locationName": "size",
                        "documentation": "-- | The size of the volume, in GiBs.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vSnapshotId",
                        "name": "_vSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The snapshot from which the volume was created, if applicable.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vState",
                        "name": "_vState",
                        "shape": "VolumeState",
                        "locationName": "status",
                        "documentation": "-- | The volume state.",
                        "typeExposed": "VolumeState",
                        "type": "VolumeState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vTags",
                        "name": "_vTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the volume.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vVolumeId",
                        "name": "_vVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vVolumeType",
                        "name": "_vVolumeType",
                        "shape": "VolumeType",
                        "locationName": "volumeType",
                        "documentation": "-- | The volume type. This can be 'gp2' for General Purpose (SSD) volumes, 'io1' for\n-- Provisioned IOPS (SSD) volumes, or 'standard' for Magnetic volumes.",
                        "typeExposed": "VolumeType",
                        "type": "VolumeType"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "reservation",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rReservationId",
                        "name": "_rReservationId",
                        "shape": "String",
                        "locationName": "reservationId",
                        "documentation": "-- | The ID of the reservation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rOwnerId",
                        "name": "_rOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The ID of the AWS account that owns the reservation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "Reservation",
                "locationPad": 14,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rRequesterId",
                        "name": "_rRequesterId",
                        "shape": "String",
                        "locationName": "requesterId",
                        "documentation": "-- | The ID of the requester that launched the instances on your behalf (for\n-- example, AWS Management Console or Auto Scaling).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rGroups",
                        "name": "_rGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | One or more security groups.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rInstances",
                        "name": "_rInstances",
                        "shape": "InstanceList",
                        "locationName": "instancesSet",
                        "documentation": "-- | One or more instances.",
                        "typeExposed": "[Instance]",
                        "type": "List \"item\" Instance"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rGroups",
                        "name": "_rGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | One or more security groups.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rInstances",
                        "name": "_rInstances",
                        "shape": "InstanceList",
                        "locationName": "instancesSet",
                        "documentation": "-- | One or more instances.",
                        "typeExposed": "[Instance]",
                        "type": "List \"item\" Instance"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rOwnerId",
                        "name": "_rOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The ID of the AWS account that owns the reservation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rRequesterId",
                        "name": "_rRequesterId",
                        "shape": "String",
                        "locationName": "requesterId",
                        "documentation": "-- | The ID of the requester that launched the instances on your behalf (for\n-- example, AWS Management Console or Auto Scaling).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rReservationId",
                        "name": "_rReservationId",
                        "shape": "String",
                        "locationName": "reservationId",
                        "documentation": "-- | The ID of the reservation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "importInstanceVolumeDetailItem",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iivdiBytesConverted",
                        "name": "_iivdiBytesConverted",
                        "shape": "Long",
                        "locationName": "bytesConverted",
                        "documentation": "-- | The number of bytes converted so far.",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iivdiAvailabilityZone",
                        "name": "_iivdiAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone where the resulting instance will reside.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iivdiImage",
                        "name": "_iivdiImage",
                        "shape": "DiskImageDescription",
                        "locationName": "image",
                        "documentation": "-- | The image.",
                        "typeExposed": "DiskImageDescription",
                        "type": "DiskImageDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iivdiVolume",
                        "name": "_iivdiVolume",
                        "shape": "DiskImageVolumeDescription",
                        "locationName": "volume",
                        "documentation": "-- | The volume.",
                        "typeExposed": "DiskImageVolumeDescription",
                        "type": "DiskImageVolumeDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iivdiStatus",
                        "name": "_iivdiStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "-- | The status of the import of this particular disk image.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "ImportInstanceVolumeDetailItem",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iivdiStatusMessage",
                        "name": "_iivdiStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | The status information or errors related to the disk image.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iivdiDescription",
                        "name": "_iivdiDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iivdiAvailabilityZone",
                        "name": "_iivdiAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone where the resulting instance will reside.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iivdiBytesConverted",
                        "name": "_iivdiBytesConverted",
                        "shape": "Long",
                        "locationName": "bytesConverted",
                        "documentation": "-- | The number of bytes converted so far.",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iivdiDescription",
                        "name": "_iivdiDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iivdiImage",
                        "name": "_iivdiImage",
                        "shape": "DiskImageDescription",
                        "locationName": "image",
                        "documentation": "-- | The image.",
                        "typeExposed": "DiskImageDescription",
                        "type": "DiskImageDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iivdiStatus",
                        "name": "_iivdiStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "-- | The status of the import of this particular disk image.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iivdiStatusMessage",
                        "name": "_iivdiStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | The status information or errors related to the disk image.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iivdiVolume",
                        "name": "_iivdiVolume",
                        "shape": "DiskImageVolumeDescription",
                        "locationName": "volume",
                        "documentation": "-- | The volume.",
                        "typeExposed": "DiskImageVolumeDescription",
                        "type": "DiskImageVolumeDescription"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "SSNotApplicable": "not-applicable",
                    "SSOk": "ok",
                    "SSImpaired": "impaired",
                    "SSInsufficientData": "insufficient-data"
                },
                "valuePad": 18,
                "name": "SummaryStatus",
                "type": "nullary",
                "branchPad": 18
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 35,
                "ctor": "reservedInstancesModification",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ReservedInstancesModification",
                "locationPad": 32,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimReservedInstancesModificationId",
                        "name": "_rimReservedInstancesModificationId",
                        "shape": "String",
                        "locationName": "reservedInstancesModificationId",
                        "documentation": "-- | A unique ID for the Reserved Instance modification.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rimReservedInstancesIds",
                        "name": "_rimReservedInstancesIds",
                        "shape": "ReservedIntancesIds",
                        "locationName": "reservedInstancesSet",
                        "documentation": "-- | The IDs of one or more Reserved Instances.",
                        "typeExposed": "[ReservedInstancesId]",
                        "type": "List \"item\" ReservedInstancesId"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rimModificationResults",
                        "name": "_rimModificationResults",
                        "shape": "ReservedInstancesModificationResultList",
                        "locationName": "modificationResultSet",
                        "documentation": "-- | Contains target configurations along with their corresponding new Reserved\n-- Instance IDs.",
                        "typeExposed": "[ReservedInstancesModificationResult]",
                        "type": "List \"item\" ReservedInstancesModificationResult"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimCreateDate",
                        "name": "_rimCreateDate",
                        "shape": "DateTime",
                        "locationName": "createDate",
                        "documentation": "-- | The time when the modification request was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimUpdateDate",
                        "name": "_rimUpdateDate",
                        "shape": "DateTime",
                        "locationName": "updateDate",
                        "documentation": "-- | The time when the modification request was last updated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimEffectiveDate",
                        "name": "_rimEffectiveDate",
                        "shape": "DateTime",
                        "locationName": "effectiveDate",
                        "documentation": "-- | The time for the modification to become effective.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimStatus",
                        "name": "_rimStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "-- | The status of the Reserved Instances modification request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimStatusMessage",
                        "name": "_rimStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | The reason for the status.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimClientToken",
                        "name": "_rimClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | A unique, case-sensitive key supplied by the client to ensure that the\n-- modification request is idempotent.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimClientToken",
                        "name": "_rimClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | A unique, case-sensitive key supplied by the client to ensure that the\n-- modification request is idempotent.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimCreateDate",
                        "name": "_rimCreateDate",
                        "shape": "DateTime",
                        "locationName": "createDate",
                        "documentation": "-- | The time when the modification request was created.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimEffectiveDate",
                        "name": "_rimEffectiveDate",
                        "shape": "DateTime",
                        "locationName": "effectiveDate",
                        "documentation": "-- | The time for the modification to become effective.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rimModificationResults",
                        "name": "_rimModificationResults",
                        "shape": "ReservedInstancesModificationResultList",
                        "locationName": "modificationResultSet",
                        "documentation": "-- | Contains target configurations along with their corresponding new Reserved\n-- Instance IDs.",
                        "typeExposed": "[ReservedInstancesModificationResult]",
                        "type": "List \"item\" ReservedInstancesModificationResult"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rimReservedInstancesIds",
                        "name": "_rimReservedInstancesIds",
                        "shape": "ReservedIntancesIds",
                        "locationName": "reservedInstancesSet",
                        "documentation": "-- | The IDs of one or more Reserved Instances.",
                        "typeExposed": "[ReservedInstancesId]",
                        "type": "List \"item\" ReservedInstancesId"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimReservedInstancesModificationId",
                        "name": "_rimReservedInstancesModificationId",
                        "shape": "String",
                        "locationName": "reservedInstancesModificationId",
                        "documentation": "-- | A unique ID for the Reserved Instance modification.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimStatus",
                        "name": "_rimStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "-- | The status of the Reserved Instances modification request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimStatusMessage",
                        "name": "_rimStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | The reason for the status.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimUpdateDate",
                        "name": "_rimUpdateDate",
                        "shape": "DateTime",
                        "locationName": "updateDate",
                        "documentation": "-- | The time when the modification request was last updated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Allow": "allow",
                    "Deny": "deny"
                },
                "valuePad": 6,
                "name": "RuleAction",
                "type": "nullary",
                "branchPad": 5
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "networkInterface",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "NetworkInterface",
                "locationPad": 22,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niNetworkInterfaceId",
                        "name": "_niNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niSubnetId",
                        "name": "_niSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niVpcId",
                        "name": "_niVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niAvailabilityZone",
                        "name": "_niAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niDescription",
                        "name": "_niDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niOwnerId",
                        "name": "_niOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the owner of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niRequesterId",
                        "name": "_niRequesterId",
                        "shape": "String",
                        "locationName": "requesterId",
                        "documentation": "-- | The ID of the entity that launched the instance on your behalf (for example,\n-- AWS Management Console or Auto Scaling).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niRequesterManaged",
                        "name": "_niRequesterManaged",
                        "shape": "Boolean",
                        "locationName": "requesterManaged",
                        "documentation": "-- | Indicates whether the network interface is being managed by AWS.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niStatus",
                        "name": "_niStatus",
                        "shape": "NetworkInterfaceStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of the network interface.",
                        "typeExposed": "Maybe NetworkInterfaceStatus",
                        "type": "Maybe NetworkInterfaceStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niMacAddress",
                        "name": "_niMacAddress",
                        "shape": "String",
                        "locationName": "macAddress",
                        "documentation": "-- | The MAC address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niPrivateIpAddress",
                        "name": "_niPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The IP address of the network interface within the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niPrivateDnsName",
                        "name": "_niPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "-- | The private DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niSourceDestCheck",
                        "name": "_niSourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Indicates whether traffic to or from the instance is validated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "niGroups",
                        "name": "_niGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | Any security groups for the network interface.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niAttachment",
                        "name": "_niAttachment",
                        "shape": "NetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "-- | The network interface attachment.",
                        "typeExposed": "Maybe NetworkInterfaceAttachment",
                        "type": "Maybe NetworkInterfaceAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niAssociation",
                        "name": "_niAssociation",
                        "shape": "NetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "-- | The association information for an Elastic IP associated with the network\n-- interface.",
                        "typeExposed": "Maybe NetworkInterfaceAssociation",
                        "type": "Maybe NetworkInterfaceAssociation"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "niTagSet",
                        "name": "_niTagSet",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the network interface.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "niPrivateIpAddresses",
                        "name": "_niPrivateIpAddresses",
                        "shape": "NetworkInterfacePrivateIpAddressList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "-- | The private IP addresses associated with the network interface.",
                        "typeExposed": "[NetworkInterfacePrivateIpAddress]",
                        "type": "List \"item\" NetworkInterfacePrivateIpAddress"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niAssociation",
                        "name": "_niAssociation",
                        "shape": "NetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "-- | The association information for an Elastic IP associated with the network\n-- interface.",
                        "typeExposed": "Maybe NetworkInterfaceAssociation",
                        "type": "Maybe NetworkInterfaceAssociation"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niAttachment",
                        "name": "_niAttachment",
                        "shape": "NetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "-- | The network interface attachment.",
                        "typeExposed": "Maybe NetworkInterfaceAttachment",
                        "type": "Maybe NetworkInterfaceAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niAvailabilityZone",
                        "name": "_niAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niDescription",
                        "name": "_niDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "niGroups",
                        "name": "_niGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | Any security groups for the network interface.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niMacAddress",
                        "name": "_niMacAddress",
                        "shape": "String",
                        "locationName": "macAddress",
                        "documentation": "-- | The MAC address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niNetworkInterfaceId",
                        "name": "_niNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niOwnerId",
                        "name": "_niOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the owner of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niPrivateDnsName",
                        "name": "_niPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "-- | The private DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niPrivateIpAddress",
                        "name": "_niPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The IP address of the network interface within the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "niPrivateIpAddresses",
                        "name": "_niPrivateIpAddresses",
                        "shape": "NetworkInterfacePrivateIpAddressList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "-- | The private IP addresses associated with the network interface.",
                        "typeExposed": "[NetworkInterfacePrivateIpAddress]",
                        "type": "List \"item\" NetworkInterfacePrivateIpAddress"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niRequesterId",
                        "name": "_niRequesterId",
                        "shape": "String",
                        "locationName": "requesterId",
                        "documentation": "-- | The ID of the entity that launched the instance on your behalf (for example,\n-- AWS Management Console or Auto Scaling).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niRequesterManaged",
                        "name": "_niRequesterManaged",
                        "shape": "Boolean",
                        "locationName": "requesterManaged",
                        "documentation": "-- | Indicates whether the network interface is being managed by AWS.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niSourceDestCheck",
                        "name": "_niSourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Indicates whether traffic to or from the instance is validated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niStatus",
                        "name": "_niStatus",
                        "shape": "NetworkInterfaceStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of the network interface.",
                        "typeExposed": "Maybe NetworkInterfaceStatus",
                        "type": "Maybe NetworkInterfaceStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niSubnetId",
                        "name": "_niSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "niTagSet",
                        "name": "_niTagSet",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the network interface.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "niVpcId",
                        "name": "_niVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Down": "DOWN",
                    "Up": "UP"
                },
                "valuePad": 5,
                "name": "TelemetryStatus",
                "type": "nullary",
                "branchPad": 4
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 26,
                "ctor": "subnet",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1SubnetId",
                        "name": "_s1SubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1State",
                        "name": "_s1State",
                        "shape": "SubnetState",
                        "locationName": "state",
                        "documentation": "-- | The current state of the subnet.",
                        "typeExposed": "SubnetState",
                        "type": "SubnetState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1VpcId",
                        "name": "_s1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC the subnet is in.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1CidrBlock",
                        "name": "_s1CidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The CIDR block assigned to the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1AvailableIpAddressCount",
                        "name": "_s1AvailableIpAddressCount",
                        "shape": "Integer",
                        "locationName": "availableIpAddressCount",
                        "documentation": "-- | The number of unused IP addresses in the subnet. Note that the IP addresses\n-- for any stopped instances are considered unavailable.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1AvailabilityZone",
                        "name": "_s1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone of the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1DefaultForAz",
                        "name": "_s1DefaultForAz",
                        "shape": "Boolean",
                        "locationName": "defaultForAz",
                        "documentation": "-- | Indicates whether this is the default subnet for the Availability Zone.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1MapPublicIpOnLaunch",
                        "name": "_s1MapPublicIpOnLaunch",
                        "shape": "Boolean",
                        "locationName": "mapPublicIpOnLaunch",
                        "documentation": "-- | Indicates whether instances launched in this subnet receive a public IP\n-- address.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "contentPad": 0,
                "name": "Subnet",
                "locationPad": 24,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "s1Tags",
                        "name": "_s1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the subnet.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1AvailabilityZone",
                        "name": "_s1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone of the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1AvailableIpAddressCount",
                        "name": "_s1AvailableIpAddressCount",
                        "shape": "Integer",
                        "locationName": "availableIpAddressCount",
                        "documentation": "-- | The number of unused IP addresses in the subnet. Note that the IP addresses\n-- for any stopped instances are considered unavailable.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1CidrBlock",
                        "name": "_s1CidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The CIDR block assigned to the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1DefaultForAz",
                        "name": "_s1DefaultForAz",
                        "shape": "Boolean",
                        "locationName": "defaultForAz",
                        "documentation": "-- | Indicates whether this is the default subnet for the Availability Zone.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1MapPublicIpOnLaunch",
                        "name": "_s1MapPublicIpOnLaunch",
                        "shape": "Boolean",
                        "locationName": "mapPublicIpOnLaunch",
                        "documentation": "-- | Indicates whether instances launched in this subnet receive a public IP\n-- address.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1State",
                        "name": "_s1State",
                        "shape": "SubnetState",
                        "locationName": "state",
                        "documentation": "-- | The current state of the subnet.",
                        "typeExposed": "SubnetState",
                        "type": "SubnetState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1SubnetId",
                        "name": "_s1SubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "s1Tags",
                        "name": "_s1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the subnet.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "s1VpcId",
                        "name": "_s1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC the subnet is in.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "keyPairInfo",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "KeyPairInfo",
                "locationPad": 15,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "kpiKeyName",
                        "name": "_kpiKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The name of the key pair.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "kpiKeyFingerprint",
                        "name": "_kpiKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "-- | If you used 'CreateKeyPair' to create the key pair, this is the SHA-1 digest of\n-- the DER encoded private key. If you used 'ImportKeyPair' to provide AWS the\n-- public key, this is the MD5 public key fingerprint as specified in section 4\n-- of RFC4716.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "kpiKeyFingerprint",
                        "name": "_kpiKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "-- | If you used 'CreateKeyPair' to create the key pair, this is the SHA-1 digest of\n-- the DER encoded private key. If you used 'ImportKeyPair' to provide AWS the\n-- public key, this is the MD5 public key fingerprint as specified in section 4\n-- of RFC4716.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "kpiKeyName",
                        "name": "_kpiKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The name of the key pair.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "launchPermissionModifications",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "LaunchPermissionModifications",
                "locationPad": 7,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "lpmAdd",
                        "name": "_lpmAdd",
                        "shape": "LaunchPermissionList",
                        "locationName": "Add",
                        "documentation": "-- | The AWS account ID to add to the list of launch permissions for the AMI.",
                        "typeExposed": "[LaunchPermission]",
                        "type": "List \"item\" LaunchPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "lpmRemove",
                        "name": "_lpmRemove",
                        "shape": "LaunchPermissionList",
                        "locationName": "Remove",
                        "documentation": "-- | The AWS account ID to remove from the list of launch permissions for the AMI.",
                        "typeExposed": "[LaunchPermission]",
                        "type": "List \"item\" LaunchPermission"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "lpmAdd",
                        "name": "_lpmAdd",
                        "shape": "LaunchPermissionList",
                        "locationName": "Add",
                        "documentation": "-- | The AWS account ID to add to the list of launch permissions for the AMI.",
                        "typeExposed": "[LaunchPermission]",
                        "type": "List \"item\" LaunchPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "lpmRemove",
                        "name": "_lpmRemove",
                        "shape": "LaunchPermissionList",
                        "locationName": "Remove",
                        "documentation": "-- | The AWS account ID to remove from the list of launch permissions for the AMI.",
                        "typeExposed": "[LaunchPermission]",
                        "type": "List \"item\" LaunchPermission"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Pending": "pending",
                    "Error": "error",
                    "Completed": "completed"
                },
                "valuePad": 10,
                "name": "SnapshotState",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "instanceNetworkInterfaceAssociation",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceNetworkInterfaceAssociation",
                "locationPad": 14,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaPublicIp",
                        "name": "_iniaPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "-- | The public IP address or Elastic IP address bound to the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaPublicDnsName",
                        "name": "_iniaPublicDnsName",
                        "shape": "String",
                        "locationName": "publicDnsName",
                        "documentation": "-- | The public DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaIpOwnerId",
                        "name": "_iniaIpOwnerId",
                        "shape": "String",
                        "locationName": "ipOwnerId",
                        "documentation": "-- | The ID of the owner of the Elastic IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaIpOwnerId",
                        "name": "_iniaIpOwnerId",
                        "shape": "String",
                        "locationName": "ipOwnerId",
                        "documentation": "-- | The ID of the owner of the Elastic IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaPublicDnsName",
                        "name": "_iniaPublicDnsName",
                        "shape": "String",
                        "locationName": "publicDnsName",
                        "documentation": "-- | The public DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaPublicIp",
                        "name": "_iniaPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "-- | The public IP address or Elastic IP address bound to the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "diskImageDetail",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "didFormat",
                        "name": "_didFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "format",
                        "documentation": "-- | The disk image format.",
                        "typeExposed": "DiskImageFormat",
                        "type": "DiskImageFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "didBytes",
                        "name": "_didBytes",
                        "shape": "Long",
                        "locationName": "bytes",
                        "documentation": null,
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "didImportManifestUrl",
                        "name": "_didImportManifestUrl",
                        "shape": "String",
                        "locationName": "importManifestUrl",
                        "documentation": "-- | A presigned URL for the import manifest stored in Amazon S3. For information\n-- about creating a presigned URL for an Amazon S3 object, read the \"Query\n-- String Request Authentication Alternative\" section of the \u003chttp://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html Authenticating RESTRequests\u003e topic in the /Amazon Simple Storage Service Developer Guide/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "DiskImageDetail",
                "locationPad": 18,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "didBytes",
                        "name": "_didBytes",
                        "shape": "Long",
                        "locationName": "bytes",
                        "documentation": null,
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "didFormat",
                        "name": "_didFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "format",
                        "documentation": "-- | The disk image format.",
                        "typeExposed": "DiskImageFormat",
                        "type": "DiskImageFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "didImportManifestUrl",
                        "name": "_didImportManifestUrl",
                        "shape": "String",
                        "locationName": "importManifestUrl",
                        "documentation": "-- | A presigned URL for the import manifest stored in Amazon S3. For information\n-- about creating a presigned URL for an Amazon S3 object, read the \"Query\n-- String Request Authentication Alternative\" section of the \u003chttp://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html Authenticating RESTRequests\u003e topic in the /Amazon Simple Storage Service Developer Guide/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "instancePrivateIpAddress",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstancePrivateIpAddress",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ipiaPrivateIpAddress",
                        "name": "_ipiaPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP address of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ipiaPrivateDnsName",
                        "name": "_ipiaPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "-- | The private DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ipiaPrimary",
                        "name": "_ipiaPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "-- | Indicates whether this IP address is the primary private IP address of the\n-- network interface.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ipiaAssociation",
                        "name": "_ipiaAssociation",
                        "shape": "InstanceNetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "-- | The association information for an Elastic IP address for the network\n-- interface.",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAssociation",
                        "type": "Maybe InstanceNetworkInterfaceAssociation"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ipiaAssociation",
                        "name": "_ipiaAssociation",
                        "shape": "InstanceNetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "-- | The association information for an Elastic IP address for the network\n-- interface.",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAssociation",
                        "type": "Maybe InstanceNetworkInterfaceAssociation"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ipiaPrimary",
                        "name": "_ipiaPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "-- | Indicates whether this IP address is the primary private IP address of the\n-- network interface.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ipiaPrivateDnsName",
                        "name": "_ipiaPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "-- | The private DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ipiaPrivateIpAddress",
                        "name": "_ipiaPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP address of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 25,
                "ctor": "cancelledSpotInstanceRequest",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "CancelledSpotInstanceRequest",
                "locationPad": 22,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csiSpotInstanceRequestId",
                        "name": "_csiSpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "-- | The ID of the Spot Instance request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csiState",
                        "name": "_csiState",
                        "shape": "CancelSpotInstanceRequestState",
                        "locationName": "state",
                        "documentation": "-- | The state of the Spot Instance request.",
                        "typeExposed": "Maybe CancelSpotInstanceRequestState",
                        "type": "Maybe CancelSpotInstanceRequestState"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csiSpotInstanceRequestId",
                        "name": "_csiSpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "-- | The ID of the Spot Instance request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csiState",
                        "name": "_csiState",
                        "shape": "CancelSpotInstanceRequestState",
                        "locationName": "state",
                        "documentation": "-- | The state of the Spot Instance request.",
                        "typeExposed": "Maybe CancelSpotInstanceRequestState",
                        "type": "Maybe CancelSpotInstanceRequestState"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "vpnConnectionOptionsSpecification",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "vcosStaticRoutesOnly",
                    "name": "_vcosStaticRoutesOnly",
                    "shape": "Boolean",
                    "locationName": "staticRoutesOnly",
                    "documentation": "-- | Indicates whether the VPN connection uses static routes only. Static routes\n-- must be used for devices that don't support BGP.",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VpnConnectionOptionsSpecification",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vcosStaticRoutesOnly",
                        "name": "_vcosStaticRoutesOnly",
                        "shape": "Boolean",
                        "locationName": "staticRoutesOnly",
                        "documentation": "-- | Indicates whether the VPN connection uses static routes only. Static routes\n-- must be used for devices that don't support BGP.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vcosStaticRoutesOnly",
                        "name": "_vcosStaticRoutesOnly",
                        "shape": "Boolean",
                        "locationName": "staticRoutesOnly",
                        "documentation": "-- | Indicates whether the VPN connection uses static routes only. Static routes\n-- must be used for devices that don't support BGP.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 25,
                "ctor": "address",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Address",
                "locationPad": 24,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aInstanceId",
                        "name": "_aInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance the address is associated with (if any).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aPublicIp",
                        "name": "_aPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "-- | The Elastic IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aAllocationId",
                        "name": "_aAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "-- | The ID representing the allocation of the address for use with EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aAssociationId",
                        "name": "_aAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The ID representing the association of the address with an instance in a VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aDomain",
                        "name": "_aDomain",
                        "shape": "DomainType",
                        "locationName": "domain",
                        "documentation": "-- | Indicates whether this Elastic IP address is for use with instances in\n-- EC2-Classic ('standard') or instances in a VPC ('vpc').",
                        "typeExposed": "Maybe DomainType",
                        "type": "Maybe DomainType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aNetworkInterfaceId",
                        "name": "_aNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aNetworkInterfaceOwnerId",
                        "name": "_aNetworkInterfaceOwnerId",
                        "shape": "String",
                        "locationName": "networkInterfaceOwnerId",
                        "documentation": "-- | The ID of the AWS account that owns the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aPrivateIpAddress",
                        "name": "_aPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP address associated with the Elastic IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aAllocationId",
                        "name": "_aAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "-- | The ID representing the allocation of the address for use with EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aAssociationId",
                        "name": "_aAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The ID representing the association of the address with an instance in a VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aDomain",
                        "name": "_aDomain",
                        "shape": "DomainType",
                        "locationName": "domain",
                        "documentation": "-- | Indicates whether this Elastic IP address is for use with instances in\n-- EC2-Classic ('standard') or instances in a VPC ('vpc').",
                        "typeExposed": "Maybe DomainType",
                        "type": "Maybe DomainType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aInstanceId",
                        "name": "_aInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance the address is associated with (if any).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aNetworkInterfaceId",
                        "name": "_aNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aNetworkInterfaceOwnerId",
                        "name": "_aNetworkInterfaceOwnerId",
                        "shape": "String",
                        "locationName": "networkInterfaceOwnerId",
                        "documentation": "-- | The ID of the AWS account that owns the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aPrivateIpAddress",
                        "name": "_aPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP address associated with the Elastic IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aPublicIp",
                        "name": "_aPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "-- | The Elastic IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "VASAttached": "attached",
                    "VASAttaching": "attaching",
                    "VASDetached": "detached",
                    "VASDetaching": "detaching"
                },
                "valuePad": 10,
                "name": "VolumeAttachmentState",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "launchPermission",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "LaunchPermission",
                "locationPad": 7,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lpUserId",
                        "name": "_lpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "-- | The AWS account ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lpGroup",
                        "name": "_lpGroup",
                        "shape": "PermissionGroup",
                        "locationName": "group",
                        "documentation": "-- | The name of the group.",
                        "typeExposed": "Maybe PermissionGroup",
                        "type": "Maybe PermissionGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lpGroup",
                        "name": "_lpGroup",
                        "shape": "PermissionGroup",
                        "locationName": "group",
                        "documentation": "-- | The name of the group.",
                        "typeExposed": "Maybe PermissionGroup",
                        "type": "Maybe PermissionGroup"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "lpUserId",
                        "name": "_lpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "-- | The AWS account ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Blackhole": "blackhole",
                    "Active": "active"
                },
                "valuePad": 10,
                "name": "RouteState",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 27,
                "ctor": "routeTableAssociation",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "RouteTableAssociation",
                "locationPad": 24,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtaRouteTableAssociationId",
                        "name": "_rtaRouteTableAssociationId",
                        "shape": "String",
                        "locationName": "routeTableAssociationId",
                        "documentation": "-- | The ID of the association between a route table and a subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtaRouteTableId",
                        "name": "_rtaRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtaSubnetId",
                        "name": "_rtaSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtaMain",
                        "name": "_rtaMain",
                        "shape": "Boolean",
                        "locationName": "main",
                        "documentation": "-- | Indicates whether this is the main route table.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtaMain",
                        "name": "_rtaMain",
                        "shape": "Boolean",
                        "locationName": "main",
                        "documentation": "-- | Indicates whether this is the main route table.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtaRouteTableAssociationId",
                        "name": "_rtaRouteTableAssociationId",
                        "shape": "String",
                        "locationName": "routeTableAssociationId",
                        "documentation": "-- | The ID of the association between a route table and a subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtaRouteTableId",
                        "name": "_rtaRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtaSubnetId",
                        "name": "_rtaSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "BTSComplete": "complete",
                    "BTSStoring": "storing",
                    "BTSPending": "pending",
                    "BTSWaitingForShutdown": "waiting-for-shutdown",
                    "BTSBundling": "bundling",
                    "BTSCancelling": "cancelling",
                    "BTSFailed": "failed"
                },
                "valuePad": 21,
                "name": "BundleTaskState",
                "type": "nullary",
                "branchPad": 21
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 7,
                "ctor": "portRange",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PortRange",
                "locationPad": 5,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "prFrom",
                        "name": "_prFrom",
                        "shape": "Integer",
                        "locationName": "from",
                        "documentation": "-- | The first port in the range.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "prTo",
                        "name": "_prTo",
                        "shape": "Integer",
                        "locationName": "to",
                        "documentation": "-- | The last port in the range.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "prFrom",
                        "name": "_prFrom",
                        "shape": "Integer",
                        "locationName": "from",
                        "documentation": "-- | The first port in the range.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "prTo",
                        "name": "_prTo",
                        "shape": "Integer",
                        "locationName": "to",
                        "documentation": "-- | The last port in the range.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "EnableDnsHostnames": "enableDnsHostnames",
                    "EnableDnsSupport": "enableDnsSupport"
                },
                "valuePad": 19,
                "name": "VpcAttributeName",
                "type": "nullary",
                "branchPad": 18
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "reservedInstancesConfiguration",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ReservedInstancesConfiguration",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ricAvailabilityZone",
                        "name": "_ricAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone for the modified Reserved Instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ricPlatform",
                        "name": "_ricPlatform",
                        "shape": "String",
                        "locationName": "platform",
                        "documentation": "-- | The network platform of the modified Reserved Instances, which is either\n-- EC2-Classic or EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ricInstanceCount",
                        "name": "_ricInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "-- | The number of modified Reserved Instances.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ricInstanceType",
                        "name": "_ricInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type for the modified Reserved Instances.",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ricAvailabilityZone",
                        "name": "_ricAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone for the modified Reserved Instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ricInstanceCount",
                        "name": "_ricInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "-- | The number of modified Reserved Instances.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ricInstanceType",
                        "name": "_ricInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type for the modified Reserved Instances.",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ricPlatform",
                        "name": "_ricPlatform",
                        "shape": "String",
                        "locationName": "platform",
                        "documentation": "-- | The network platform of the modified Reserved Instances, which is either\n-- EC2-Classic or EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "volumeStatusDetails",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VolumeStatusDetails",
                "locationPad": 7,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsdName",
                        "name": "_vsdName",
                        "shape": "VolumeStatusName",
                        "locationName": "name",
                        "documentation": "-- | The name of the volume status.",
                        "typeExposed": "Maybe VolumeStatusName",
                        "type": "Maybe VolumeStatusName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsdStatus",
                        "name": "_vsdStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "-- | The intended status of the volume status.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsdName",
                        "name": "_vsdName",
                        "shape": "VolumeStatusName",
                        "locationName": "name",
                        "documentation": "-- | The name of the volume status.",
                        "typeExposed": "Maybe VolumeStatusName",
                        "type": "Maybe VolumeStatusName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsdStatus",
                        "name": "_vsdStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "-- | The intended status of the volume status.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "SISCancelled": "cancelled",
                    "SISClosed": "closed",
                    "SISFailed": "failed",
                    "SISActive": "active",
                    "SISOpen": "open"
                },
                "valuePad": 10,
                "name": "SpotInstanceState",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "vpnConnectionOptions",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "vcoStaticRoutesOnly",
                    "name": "_vcoStaticRoutesOnly",
                    "shape": "Boolean",
                    "locationName": "staticRoutesOnly",
                    "documentation": "-- | Indicates whether the VPN connection uses static routes only. Static routes\n-- must be used for devices that don't support BGP.",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VpnConnectionOptions",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vcoStaticRoutesOnly",
                        "name": "_vcoStaticRoutesOnly",
                        "shape": "Boolean",
                        "locationName": "staticRoutesOnly",
                        "documentation": "-- | Indicates whether the VPN connection uses static routes only. Static routes\n-- must be used for devices that don't support BGP.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vcoStaticRoutesOnly",
                        "name": "_vcoStaticRoutesOnly",
                        "shape": "Boolean",
                        "locationName": "staticRoutesOnly",
                        "documentation": "-- | Indicates whether the VPN connection uses static routes only. Static routes\n-- must be used for devices that don't support BGP.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 14,
                "ctor": "userIdGroupPair",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "UserIdGroupPair",
                "locationPad": 10,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "uigpUserId",
                        "name": "_uigpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "-- | The ID of an AWS account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "uigpGroupName",
                        "name": "_uigpGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The ID of the security group owned by the specified AWS account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "uigpGroupId",
                        "name": "_uigpGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The name of the security group in the specified AWS account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "uigpGroupId",
                        "name": "_uigpGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The name of the security group in the specified AWS account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "uigpGroupName",
                        "name": "_uigpGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The ID of the security group owned by the specified AWS account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "uigpUserId",
                        "name": "_uigpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "-- | The ID of an AWS account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 11,
                "ctor": "instanceStatusSummary",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceStatusSummary",
                "locationPad": 8,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "issStatus",
                        "name": "_issStatus",
                        "shape": "SummaryStatus",
                        "locationName": "status",
                        "documentation": "-- | The status.",
                        "typeExposed": "Maybe SummaryStatus",
                        "type": "Maybe SummaryStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "issDetails",
                        "name": "_issDetails",
                        "shape": "InstanceStatusDetailsList",
                        "locationName": "details",
                        "documentation": "-- | The system instance health or application instance health.",
                        "typeExposed": "[InstanceStatusDetails]",
                        "type": "List \"item\" InstanceStatusDetails"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "issDetails",
                        "name": "_issDetails",
                        "shape": "InstanceStatusDetailsList",
                        "locationName": "details",
                        "documentation": "-- | The system instance health or application instance health.",
                        "typeExposed": "[InstanceStatusDetails]",
                        "type": "List \"item\" InstanceStatusDetails"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "issStatus",
                        "name": "_issStatus",
                        "shape": "SummaryStatus",
                        "locationName": "status",
                        "documentation": "-- | The status.",
                        "typeExposed": "Maybe SummaryStatus",
                        "type": "Maybe SummaryStatus"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "spotPlacement",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "SpotPlacement",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sp1AvailabilityZone",
                        "name": "_sp1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sp1GroupName",
                        "name": "_sp1GroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the placement group (for cluster instances).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sp1AvailabilityZone",
                        "name": "_sp1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sp1GroupName",
                        "name": "_sp1GroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the placement group (for cluster instances).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 25,
                "ctor": "ebsInstanceBlockDeviceSpecification",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "EbsInstanceBlockDeviceSpecification",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdsVolumeId",
                        "name": "_eibdsVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the Amazon EBS volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdsDeleteOnTermination",
                        "name": "_eibdsDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdsDeleteOnTermination",
                        "name": "_eibdsDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdsVolumeId",
                        "name": "_eibdsVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the Amazon EBS volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 27,
                "ctor": "networkAclAssociation",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "NetworkAclAssociation",
                "locationPad": 24,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naaNetworkAclAssociationId",
                        "name": "_naaNetworkAclAssociationId",
                        "shape": "String",
                        "locationName": "networkAclAssociationId",
                        "documentation": "-- | The ID of the association between a network ACL and a subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naaNetworkAclId",
                        "name": "_naaNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the network ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naaSubnetId",
                        "name": "_naaSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naaNetworkAclAssociationId",
                        "name": "_naaNetworkAclAssociationId",
                        "shape": "String",
                        "locationName": "networkAclAssociationId",
                        "documentation": "-- | The ID of the association between a network ACL and a subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naaNetworkAclId",
                        "name": "_naaNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the network ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naaSubnetId",
                        "name": "_naaSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "bundleTask",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btInstanceId",
                        "name": "_btInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance associated with this bundle task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btBundleId",
                        "name": "_btBundleId",
                        "shape": "String",
                        "locationName": "bundleId",
                        "documentation": "-- | The ID for this bundle task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btState",
                        "name": "_btState",
                        "shape": "BundleTaskState",
                        "locationName": "state",
                        "documentation": "-- | The state of the task.",
                        "typeExposed": "BundleTaskState",
                        "type": "BundleTaskState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btStartTime",
                        "name": "_btStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "-- | The time this task started.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btUpdateTime",
                        "name": "_btUpdateTime",
                        "shape": "DateTime",
                        "locationName": "updateTime",
                        "documentation": "-- | The time of the most recent update for the task.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btStorage",
                        "name": "_btStorage",
                        "shape": "Storage",
                        "locationName": "storage",
                        "documentation": "-- | The Amazon S3 storage locations.",
                        "typeExposed": "Storage",
                        "type": "Storage"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btProgress",
                        "name": "_btProgress",
                        "shape": "String",
                        "locationName": "progress",
                        "documentation": "-- | The level of task completion, as a percent (for example, 20%).",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "BundleTask",
                "locationPad": 11,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "btBundleTaskError",
                        "name": "_btBundleTaskError",
                        "shape": "BundleTaskError",
                        "locationName": "error",
                        "documentation": "-- | If the task fails, a description of the error.",
                        "typeExposed": "Maybe BundleTaskError",
                        "type": "Maybe BundleTaskError"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btBundleId",
                        "name": "_btBundleId",
                        "shape": "String",
                        "locationName": "bundleId",
                        "documentation": "-- | The ID for this bundle task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "btBundleTaskError",
                        "name": "_btBundleTaskError",
                        "shape": "BundleTaskError",
                        "locationName": "error",
                        "documentation": "-- | If the task fails, a description of the error.",
                        "typeExposed": "Maybe BundleTaskError",
                        "type": "Maybe BundleTaskError"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btInstanceId",
                        "name": "_btInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance associated with this bundle task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btProgress",
                        "name": "_btProgress",
                        "shape": "String",
                        "locationName": "progress",
                        "documentation": "-- | The level of task completion, as a percent (for example, 20%).",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btStartTime",
                        "name": "_btStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "-- | The time this task started.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btState",
                        "name": "_btState",
                        "shape": "BundleTaskState",
                        "locationName": "state",
                        "documentation": "-- | The state of the task.",
                        "typeExposed": "BundleTaskState",
                        "type": "BundleTaskState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btStorage",
                        "name": "_btStorage",
                        "shape": "Storage",
                        "locationName": "storage",
                        "documentation": "-- | The Amazon S3 storage locations.",
                        "typeExposed": "Storage",
                        "type": "Storage"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "btUpdateTime",
                        "name": "_btUpdateTime",
                        "shape": "DateTime",
                        "locationName": "updateTime",
                        "documentation": "-- | The time of the most recent update for the task.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "instanceStatusEvent",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceStatusEvent",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iseCode",
                        "name": "_iseCode",
                        "shape": "EventCode",
                        "locationName": "code",
                        "documentation": "-- | The associated code of the event.",
                        "typeExposed": "Maybe EventCode",
                        "type": "Maybe EventCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iseDescription",
                        "name": "_iseDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description of the event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iseNotBefore",
                        "name": "_iseNotBefore",
                        "shape": "DateTime",
                        "locationName": "notBefore",
                        "documentation": "-- | The earliest scheduled start time for the event.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iseNotAfter",
                        "name": "_iseNotAfter",
                        "shape": "DateTime",
                        "locationName": "notAfter",
                        "documentation": "-- | The latest scheduled end time for the event.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iseCode",
                        "name": "_iseCode",
                        "shape": "EventCode",
                        "locationName": "code",
                        "documentation": "-- | The associated code of the event.",
                        "typeExposed": "Maybe EventCode",
                        "type": "Maybe EventCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iseDescription",
                        "name": "_iseDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description of the event.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iseNotAfter",
                        "name": "_iseNotAfter",
                        "shape": "DateTime",
                        "locationName": "notAfter",
                        "documentation": "-- | The latest scheduled end time for the event.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iseNotBefore",
                        "name": "_iseNotBefore",
                        "shape": "DateTime",
                        "locationName": "notBefore",
                        "documentation": "-- | The earliest scheduled start time for the event.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "M3_XLarge": "m3.xlarge",
                    "M3_Large": "m3.large",
                    "R3_4XLarge": "r3.4xlarge",
                    "M2_2XLarge": "m2.2xlarge",
                    "CR1_8XLarge": "cr1.8xlarge",
                    "G2_2XLarge": "g2.2xlarge",
                    "CC2_8XLarge": "cc2.8xlarge",
                    "T1_Micro": "t1.micro",
                    "C1_XLarge": "c1.xlarge",
                    "R3_Large": "r3.large",
                    "R3_8XLarge": "r3.8xlarge",
                    "CG1_4XLarge": "cg1.4xlarge",
                    "HI1_4XLarge": "hi1.4xlarge",
                    "C3_4XLarge": "c3.4xlarge",
                    "M1_XLarge": "m1.xlarge",
                    "M1_Large": "m1.large",
                    "R3_2XLarge": "r3.2xlarge",
                    "I2_XLarge": "i2.xlarge",
                    "M2_4XLarge": "m2.4xlarge",
                    "M3_Medium": "m3.medium",
                    "T2_Medium": "t2.medium",
                    "M1_Small": "m1.small",
                    "CC1_4XLarge": "cc1.4xlarge",
                    "C3_XLarge": "c3.xlarge",
                    "C3_Large": "c3.large",
                    "C3_8XLarge": "c3.8xlarge",
                    "M2_XLarge": "m2.xlarge",
                    "I2_4XLarge": "i2.4xlarge",
                    "C1_Medium": "c1.medium",
                    "HS1_8XLarge": "hs1.8xlarge",
                    "C3_2XLarge": "c3.2xlarge",
                    "I2_2XLarge": "i2.2xlarge",
                    "T2_Micro": "t2.micro",
                    "R3_XLarge": "r3.xlarge",
                    "T2_Small": "t2.small",
                    "M3_2XLarge": "m3.2xlarge",
                    "M1_Medium": "m1.medium",
                    "I2_8XLarge": "i2.8xlarge"
                },
                "valuePad": 12,
                "name": "InstanceType",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "route",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Route",
                "locationPad": 23,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rDestinationCidrBlock",
                        "name": "_rDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "-- | The CIDR block used for the destination match.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rGatewayId",
                        "name": "_rGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "-- | The ID of a gateway attached to your VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rInstanceId",
                        "name": "_rInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of a NAT instance in your VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rInstanceOwnerId",
                        "name": "_rInstanceOwnerId",
                        "shape": "String",
                        "locationName": "instanceOwnerId",
                        "documentation": "-- | The AWS account ID of the owner of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rNetworkInterfaceId",
                        "name": "_rNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rVpcPeeringConnectionId",
                        "name": "_rVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of the VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rState",
                        "name": "_rState",
                        "shape": "RouteState",
                        "locationName": "state",
                        "documentation": "-- | The state of the route. The 'blackhole' state indicates that the route's target\n-- isn't available (for example, the specified gateway isn't attached to the\n-- VPC, or the specified NAT instance has been terminated).",
                        "typeExposed": "Maybe RouteState",
                        "type": "Maybe RouteState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rOrigin",
                        "name": "_rOrigin",
                        "shape": "RouteOrigin",
                        "locationName": "origin",
                        "documentation": "-- | Describes how the route was created.\n--\n-- 'CreateRouteTable' indicates that route was automatically created when the\n-- route table was created.  'CreateRoute' indicates that the route was manually\n-- added to the route table.  'EnableVgwRoutePropagation' indicates that the route\n-- was propagated by route propagation.",
                        "typeExposed": "Maybe RouteOrigin",
                        "type": "Maybe RouteOrigin"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rDestinationCidrBlock",
                        "name": "_rDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "-- | The CIDR block used for the destination match.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rGatewayId",
                        "name": "_rGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "-- | The ID of a gateway attached to your VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rInstanceId",
                        "name": "_rInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of a NAT instance in your VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rInstanceOwnerId",
                        "name": "_rInstanceOwnerId",
                        "shape": "String",
                        "locationName": "instanceOwnerId",
                        "documentation": "-- | The AWS account ID of the owner of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rNetworkInterfaceId",
                        "name": "_rNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rOrigin",
                        "name": "_rOrigin",
                        "shape": "RouteOrigin",
                        "locationName": "origin",
                        "documentation": "-- | Describes how the route was created.\n--\n-- 'CreateRouteTable' indicates that route was automatically created when the\n-- route table was created.  'CreateRoute' indicates that the route was manually\n-- added to the route table.  'EnableVgwRoutePropagation' indicates that the route\n-- was propagated by route propagation.",
                        "typeExposed": "Maybe RouteOrigin",
                        "type": "Maybe RouteOrigin"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rState",
                        "name": "_rState",
                        "shape": "RouteState",
                        "locationName": "state",
                        "documentation": "-- | The state of the route. The 'blackhole' state indicates that the route's target\n-- isn't available (for example, the specified gateway isn't attached to the\n-- VPC, or the specified NAT instance has been terminated).",
                        "typeExposed": "Maybe RouteState",
                        "type": "Maybe RouteState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rVpcPeeringConnectionId",
                        "name": "_rVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of the VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 11,
                "ctor": "spotDatafeedSubscription",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "SpotDatafeedSubscription",
                "locationPad": 8,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sdsOwnerId",
                        "name": "_sdsOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sdsBucket",
                        "name": "_sdsBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "-- | The Amazon S3 bucket where the Spot Instance datafeed is located.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sdsPrefix",
                        "name": "_sdsPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "-- | The prefix that is prepended to datafeed files.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sdsState",
                        "name": "_sdsState",
                        "shape": "DatafeedSubscriptionState",
                        "locationName": "state",
                        "documentation": "-- | The state of the Spot Instance datafeed subscription.",
                        "typeExposed": "Maybe DatafeedSubscriptionState",
                        "type": "Maybe DatafeedSubscriptionState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sdsFault",
                        "name": "_sdsFault",
                        "shape": "SpotInstanceStateFault",
                        "locationName": "fault",
                        "documentation": "-- | The fault codes for the Spot Instance request, if any.",
                        "typeExposed": "Maybe SpotInstanceStateFault",
                        "type": "Maybe SpotInstanceStateFault"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sdsBucket",
                        "name": "_sdsBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "-- | The Amazon S3 bucket where the Spot Instance datafeed is located.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sdsFault",
                        "name": "_sdsFault",
                        "shape": "SpotInstanceStateFault",
                        "locationName": "fault",
                        "documentation": "-- | The fault codes for the Spot Instance request, if any.",
                        "typeExposed": "Maybe SpotInstanceStateFault",
                        "type": "Maybe SpotInstanceStateFault"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sdsOwnerId",
                        "name": "_sdsOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the account.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sdsPrefix",
                        "name": "_sdsPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "-- | The prefix that is prepended to datafeed files.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sdsState",
                        "name": "_sdsState",
                        "shape": "DatafeedSubscriptionState",
                        "locationName": "state",
                        "documentation": "-- | The state of the Spot Instance datafeed subscription.",
                        "typeExposed": "Maybe DatafeedSubscriptionState",
                        "type": "Maybe DatafeedSubscriptionState"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "storage",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "sS3",
                    "name": "_sS3",
                    "shape": "S3Storage",
                    "locationName": "S3",
                    "documentation": "-- | An Amazon S3 storage location.",
                    "typeExposed": "Maybe S3Storage",
                    "type": "Maybe S3Storage"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Storage",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sS3",
                        "name": "_sS3",
                        "shape": "S3Storage",
                        "locationName": "S3",
                        "documentation": "-- | An Amazon S3 storage location.",
                        "typeExposed": "Maybe S3Storage",
                        "type": "Maybe S3Storage"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sS3",
                        "name": "_sS3",
                        "shape": "S3Storage",
                        "locationName": "S3",
                        "documentation": "-- | An Amazon S3 storage location.",
                        "typeExposed": "Maybe S3Storage",
                        "type": "Maybe S3Storage"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "securityGroup",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sgOwnerId",
                        "name": "_sgOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the owner of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sgGroupName",
                        "name": "_sgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sgGroupId",
                        "name": "_sgGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sgDescription",
                        "name": "_sgDescription",
                        "shape": "String",
                        "locationName": "groupDescription",
                        "documentation": "-- | A description of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "SecurityGroup",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sgIpPermissions",
                        "name": "_sgIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "-- | One or more inbound rules associated with the security group.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sgIpPermissionsEgress",
                        "name": "_sgIpPermissionsEgress",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissionsEgress",
                        "documentation": "-- | [EC2-VPC] One or more outbound rules associated with the security group.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sgVpcId",
                        "name": "_sgVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | [EC2-VPC] The ID of the VPC for the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sgTags",
                        "name": "_sgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the security group.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sgDescription",
                        "name": "_sgDescription",
                        "shape": "String",
                        "locationName": "groupDescription",
                        "documentation": "-- | A description of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sgGroupId",
                        "name": "_sgGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sgGroupName",
                        "name": "_sgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sgIpPermissions",
                        "name": "_sgIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "-- | One or more inbound rules associated with the security group.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sgIpPermissionsEgress",
                        "name": "_sgIpPermissionsEgress",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissionsEgress",
                        "documentation": "-- | [EC2-VPC] One or more outbound rules associated with the security group.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "sgOwnerId",
                        "name": "_sgOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the owner of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sgTags",
                        "name": "_sgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the security group.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "sgVpcId",
                        "name": "_sgVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | [EC2-VPC] The ID of the VPC for the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "CSIRSClosed": "closed",
                    "CSIRSActive": "active",
                    "CSIRSOpen": "open",
                    "CSIRSCompleted": "completed",
                    "CSIRSCancelled": "cancelled"
                },
                "valuePad": 10,
                "name": "CancelSpotInstanceRequestState",
                "type": "nullary",
                "branchPad": 14
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "PGSDeleting": "deleting",
                    "PGSPending": "pending",
                    "PGSAvailable": "available",
                    "PGSDeleted": "deleted"
                },
                "valuePad": 10,
                "name": "PlacementGroupState",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "reservedInstancesModificationResult",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ReservedInstancesModificationResult",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimrReservedInstancesId",
                        "name": "_rimrReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The ID for the Reserved Instances that were created as part of the\n-- modification request. This field is only available when the modification is\n-- fulfilled.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimrTargetConfiguration",
                        "name": "_rimrTargetConfiguration",
                        "shape": "ReservedInstancesConfiguration",
                        "locationName": "targetConfiguration",
                        "documentation": "-- | The target Reserved Instances configurations supplied as part of the\n-- modification request.",
                        "typeExposed": "Maybe ReservedInstancesConfiguration",
                        "type": "Maybe ReservedInstancesConfiguration"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimrReservedInstancesId",
                        "name": "_rimrReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The ID for the Reserved Instances that were created as part of the\n-- modification request. This field is only available when the modification is\n-- fulfilled.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rimrTargetConfiguration",
                        "name": "_rimrTargetConfiguration",
                        "shape": "ReservedInstancesConfiguration",
                        "locationName": "targetConfiguration",
                        "documentation": "-- | The target Reserved Instances configurations supplied as part of the\n-- modification request.",
                        "typeExposed": "Maybe ReservedInstancesConfiguration",
                        "type": "Maybe ReservedInstancesConfiguration"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "instanceBlockDeviceMappingSpecification",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceBlockDeviceMappingSpecification",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmsDeviceName",
                        "name": "_ibdmsDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "-- | The device name exposed to the instance (for example, /dev/sdh).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmsEbs",
                        "name": "_ibdmsEbs",
                        "shape": "EbsInstanceBlockDeviceSpecification",
                        "locationName": "ebs",
                        "documentation": "-- | Parameters used to automatically set up Amazon EBS volumes when the instance\n-- is launched.",
                        "typeExposed": "Maybe EbsInstanceBlockDeviceSpecification",
                        "type": "Maybe EbsInstanceBlockDeviceSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmsVirtualName",
                        "name": "_ibdmsVirtualName",
                        "shape": "String",
                        "locationName": "virtualName",
                        "documentation": "-- | The virtual device name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmsNoDevice",
                        "name": "_ibdmsNoDevice",
                        "shape": "String",
                        "locationName": "noDevice",
                        "documentation": "-- | suppress the specified device included in the block device mapping.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmsDeviceName",
                        "name": "_ibdmsDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "-- | The device name exposed to the instance (for example, /dev/sdh).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmsEbs",
                        "name": "_ibdmsEbs",
                        "shape": "EbsInstanceBlockDeviceSpecification",
                        "locationName": "ebs",
                        "documentation": "-- | Parameters used to automatically set up Amazon EBS volumes when the instance\n-- is launched.",
                        "typeExposed": "Maybe EbsInstanceBlockDeviceSpecification",
                        "type": "Maybe EbsInstanceBlockDeviceSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmsNoDevice",
                        "name": "_ibdmsNoDevice",
                        "shape": "String",
                        "locationName": "noDevice",
                        "documentation": "-- | suppress the specified device included in the block device mapping.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmsVirtualName",
                        "name": "_ibdmsVirtualName",
                        "shape": "String",
                        "locationName": "virtualName",
                        "documentation": "-- | The virtual device name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Citrix": "citrix",
                    "Microsoft": "microsoft",
                    "Vmware": "vmware"
                },
                "valuePad": 10,
                "name": "ExportEnvironment",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "volumeAttachment",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VolumeAttachment",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaVolumeId",
                        "name": "_vaVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaInstanceId",
                        "name": "_vaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaDevice",
                        "name": "_vaDevice",
                        "shape": "String",
                        "locationName": "device",
                        "documentation": "-- | The device name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaState",
                        "name": "_vaState",
                        "shape": "VolumeAttachmentState",
                        "locationName": "status",
                        "documentation": "-- | The attachment state of the volume.",
                        "typeExposed": "Maybe VolumeAttachmentState",
                        "type": "Maybe VolumeAttachmentState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaAttachTime",
                        "name": "_vaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The time stamp when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaDeleteOnTermination",
                        "name": "_vaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the Amazon EBS volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaAttachTime",
                        "name": "_vaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The time stamp when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaDeleteOnTermination",
                        "name": "_vaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the Amazon EBS volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaDevice",
                        "name": "_vaDevice",
                        "shape": "String",
                        "locationName": "device",
                        "documentation": "-- | The device name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaInstanceId",
                        "name": "_vaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaState",
                        "name": "_vaState",
                        "shape": "VolumeAttachmentState",
                        "locationName": "status",
                        "documentation": "-- | The attachment state of the volume.",
                        "typeExposed": "Maybe VolumeAttachmentState",
                        "type": "Maybe VolumeAttachmentState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vaVolumeId",
                        "name": "_vaVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "customerGateway",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cgCustomerGatewayId",
                        "name": "_cgCustomerGatewayId",
                        "shape": "String",
                        "locationName": "customerGatewayId",
                        "documentation": "-- | The ID of the customer gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cgState",
                        "name": "_cgState",
                        "shape": "String",
                        "locationName": "state",
                        "documentation": "-- | The current state of the customer gateway ('pending | available | deleting |deleted').",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cgType",
                        "name": "_cgType",
                        "shape": "String",
                        "locationName": "type",
                        "documentation": "-- | The type of VPN connection the customer gateway supports ('ipsec.1').",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cgIpAddress",
                        "name": "_cgIpAddress",
                        "shape": "String",
                        "locationName": "ipAddress",
                        "documentation": "-- | The Internet-routable IP address of the customer gateway's outside interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cgBgpAsn",
                        "name": "_cgBgpAsn",
                        "shape": "String",
                        "locationName": "bgpAsn",
                        "documentation": "-- | The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number\n-- (ASN).",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "CustomerGateway",
                "locationPad": 18,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cgTags",
                        "name": "_cgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the customer gateway.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cgBgpAsn",
                        "name": "_cgBgpAsn",
                        "shape": "String",
                        "locationName": "bgpAsn",
                        "documentation": "-- | The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number\n-- (ASN).",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cgCustomerGatewayId",
                        "name": "_cgCustomerGatewayId",
                        "shape": "String",
                        "locationName": "customerGatewayId",
                        "documentation": "-- | The ID of the customer gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cgIpAddress",
                        "name": "_cgIpAddress",
                        "shape": "String",
                        "locationName": "ipAddress",
                        "documentation": "-- | The Internet-routable IP address of the customer gateway's outside interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cgState",
                        "name": "_cgState",
                        "shape": "String",
                        "locationName": "state",
                        "documentation": "-- | The current state of the customer gateway ('pending | available | deleting |deleted').",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cgTags",
                        "name": "_cgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the customer gateway.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cgType",
                        "name": "_cgType",
                        "shape": "String",
                        "locationName": "type",
                        "documentation": "-- | The type of VPN connection the customer gateway supports ('ipsec.1').",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "ebsInstanceBlockDevice",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "EbsInstanceBlockDevice",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdVolumeId",
                        "name": "_eibdVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the Amazon EBS volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdStatus",
                        "name": "_eibdStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "-- | The attachment state.",
                        "typeExposed": "Maybe AttachmentStatus",
                        "type": "Maybe AttachmentStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdAttachTime",
                        "name": "_eibdAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The time stamp when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdDeleteOnTermination",
                        "name": "_eibdDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdAttachTime",
                        "name": "_eibdAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The time stamp when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdDeleteOnTermination",
                        "name": "_eibdDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdStatus",
                        "name": "_eibdStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "-- | The attachment state.",
                        "typeExposed": "Maybe AttachmentStatus",
                        "type": "Maybe AttachmentStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "eibdVolumeId",
                        "name": "_eibdVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the Amazon EBS volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Stop": "stop",
                    "Terminate": "terminate"
                },
                "valuePad": 10,
                "name": "ShutdownBehavior",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "diskImageDescription",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "did1Format",
                        "name": "_did1Format",
                        "shape": "DiskImageFormat",
                        "locationName": "format",
                        "documentation": "-- | The disk image format.",
                        "typeExposed": "DiskImageFormat",
                        "type": "DiskImageFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "did1Size",
                        "name": "_did1Size",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "-- | The size of the disk image.",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "did1ImportManifestUrl",
                        "name": "_did1ImportManifestUrl",
                        "shape": "String",
                        "locationName": "importManifestUrl",
                        "documentation": "-- | A presigned URL for the import manifest stored in Amazon S3. For information\n-- about creating a presigned URL for an Amazon S3 object, read the \"Query\n-- String Request Authentication Alternative\" section of the \u003chttp://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html Authenticating RESTRequests\u003e topic in the /Amazon Simple Storage Service Developer Guide/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "DiskImageDescription",
                "locationPad": 18,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "did1Checksum",
                        "name": "_did1Checksum",
                        "shape": "String",
                        "locationName": "checksum",
                        "documentation": "-- | The checksum computed for the disk image.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "did1Checksum",
                        "name": "_did1Checksum",
                        "shape": "String",
                        "locationName": "checksum",
                        "documentation": "-- | The checksum computed for the disk image.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "did1Format",
                        "name": "_did1Format",
                        "shape": "DiskImageFormat",
                        "locationName": "format",
                        "documentation": "-- | The disk image format.",
                        "typeExposed": "DiskImageFormat",
                        "type": "DiskImageFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "did1ImportManifestUrl",
                        "name": "_did1ImportManifestUrl",
                        "shape": "String",
                        "locationName": "importManifestUrl",
                        "documentation": "-- | A presigned URL for the import manifest stored in Amazon S3. For information\n-- about creating a presigned URL for an Amazon S3 object, read the \"Query\n-- String Request Authentication Alternative\" section of the \u003chttp://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html Authenticating RESTRequests\u003e topic in the /Amazon Simple Storage Service Developer Guide/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "did1Size",
                        "name": "_did1Size",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "-- | The size of the disk image.",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "diskImageVolumeDescription",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "divdId",
                        "name": "_divdId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "-- | The volume identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "DiskImageVolumeDescription",
                "locationPad": 5,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "divdSize",
                        "name": "_divdSize",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "-- | The size of the volume.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "divdId",
                        "name": "_divdId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "-- | The volume identifier.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "divdSize",
                        "name": "_divdSize",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "-- | The size of the volume.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "monitoring",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "mState",
                    "name": "_mState",
                    "shape": "MonitoringState",
                    "locationName": "state",
                    "documentation": "-- | Indicates whether monitoring is enabled for the instance.",
                    "typeExposed": "Maybe MonitoringState",
                    "type": "Maybe MonitoringState"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Monitoring",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mState",
                        "name": "_mState",
                        "shape": "MonitoringState",
                        "locationName": "state",
                        "documentation": "-- | Indicates whether monitoring is enabled for the instance.",
                        "typeExposed": "Maybe MonitoringState",
                        "type": "Maybe MonitoringState"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mState",
                        "name": "_mState",
                        "shape": "MonitoringState",
                        "locationName": "state",
                        "documentation": "-- | Indicates whether monitoring is enabled for the instance.",
                        "typeExposed": "Maybe MonitoringState",
                        "type": "Maybe MonitoringState"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "SSAvailable": "available",
                    "SSPending": "pending"
                },
                "valuePad": 10,
                "name": "SubnetState",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Ova": "ova"
                },
                "valuePad": 4,
                "name": "ContainerFormat",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "availabilityZoneMessage",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "azmMessage",
                    "name": "_azmMessage",
                    "shape": "String",
                    "locationName": "message",
                    "documentation": "-- | The message about the Availability Zone.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "AvailabilityZoneMessage",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "azmMessage",
                        "name": "_azmMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The message about the Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "azmMessage",
                        "name": "_azmMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The message about the Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "vpcAttachment",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VpcAttachment",
                "locationPad": 6,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "va1VpcId",
                        "name": "_va1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "va1State",
                        "name": "_va1State",
                        "shape": "AttachmentStatus",
                        "locationName": "state",
                        "documentation": "-- | The current state of the attachment.",
                        "typeExposed": "Maybe AttachmentStatus",
                        "type": "Maybe AttachmentStatus"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "va1State",
                        "name": "_va1State",
                        "shape": "AttachmentStatus",
                        "locationName": "state",
                        "documentation": "-- | The current state of the attachment.",
                        "typeExposed": "Maybe AttachmentStatus",
                        "type": "Maybe AttachmentStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "va1VpcId",
                        "name": "_va1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "instanceBlockDeviceMapping",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceBlockDeviceMapping",
                "locationPad": 11,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmDeviceName",
                        "name": "_ibdmDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "-- | The device name exposed to the instance (for example, /dev/sdh).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmEbs",
                        "name": "_ibdmEbs",
                        "shape": "EbsInstanceBlockDevice",
                        "locationName": "ebs",
                        "documentation": "-- | Parameters used to automatically set up Amazon EBS volumes when the instance\n-- is launched.",
                        "typeExposed": "Maybe EbsInstanceBlockDevice",
                        "type": "Maybe EbsInstanceBlockDevice"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmDeviceName",
                        "name": "_ibdmDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "-- | The device name exposed to the instance (for example, /dev/sdh).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ibdmEbs",
                        "name": "_ibdmEbs",
                        "shape": "EbsInstanceBlockDevice",
                        "locationName": "ebs",
                        "documentation": "-- | Parameters used to automatically set up Amazon EBS volumes when the instance\n-- is launched.",
                        "typeExposed": "Maybe EbsInstanceBlockDevice",
                        "type": "Maybe EbsInstanceBlockDevice"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "InsufficientData": "insufficient-data",
                    "Passed": "passed",
                    "Failed": "failed"
                },
                "valuePad": 18,
                "name": "StatusType",
                "type": "nullary",
                "branchPad": 16
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "exportToS3TaskSpecification",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ExportToS3TaskSpecification",
                "locationPad": 16,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstsDiskImageFormat",
                        "name": "_etstsDiskImageFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "diskImageFormat",
                        "documentation": null,
                        "typeExposed": "Maybe DiskImageFormat",
                        "type": "Maybe DiskImageFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstsContainerFormat",
                        "name": "_etstsContainerFormat",
                        "shape": "ContainerFormat",
                        "locationName": "containerFormat",
                        "documentation": null,
                        "typeExposed": "Maybe ContainerFormat",
                        "type": "Maybe ContainerFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstsS3Bucket",
                        "name": "_etstsS3Bucket",
                        "shape": "String",
                        "locationName": "s3Bucket",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstsS3Prefix",
                        "name": "_etstsS3Prefix",
                        "shape": "String",
                        "locationName": "s3Prefix",
                        "documentation": "-- | The image is written to a single object in the Amazon S3 bucket at the S3 key\n-- s3prefix + exportTaskId + '.' + diskImageFormat.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstsContainerFormat",
                        "name": "_etstsContainerFormat",
                        "shape": "ContainerFormat",
                        "locationName": "containerFormat",
                        "documentation": null,
                        "typeExposed": "Maybe ContainerFormat",
                        "type": "Maybe ContainerFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstsDiskImageFormat",
                        "name": "_etstsDiskImageFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "diskImageFormat",
                        "documentation": null,
                        "typeExposed": "Maybe DiskImageFormat",
                        "type": "Maybe DiskImageFormat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstsS3Bucket",
                        "name": "_etstsS3Bucket",
                        "shape": "String",
                        "locationName": "s3Bucket",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "etstsS3Prefix",
                        "name": "_etstsS3Prefix",
                        "shape": "String",
                        "locationName": "s3Prefix",
                        "documentation": "-- | The image is written to a single object in the Amazon S3 bucket at the S3 key\n-- s3prefix + exportTaskId + '.' + diskImageFormat.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "SourceDestCheck": "sourceDestCheck",
                    "Attachment": "attachment",
                    "GroupSet": "groupSet",
                    "Description": "description"
                },
                "valuePad": 16,
                "name": "NetworkInterfaceAttribute",
                "type": "nullary",
                "branchPad": 15
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Machine": "machine",
                    "Kernel": "kernel",
                    "Ramdisk": "ramdisk"
                },
                "valuePad": 8,
                "name": "ImageTypeValues",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "instanceExportDetails",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceExportDetails",
                "locationPad": 18,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iedInstanceId",
                        "name": "_iedInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the resource being exported.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iedTargetEnvironment",
                        "name": "_iedTargetEnvironment",
                        "shape": "ExportEnvironment",
                        "locationName": "targetEnvironment",
                        "documentation": "-- | The target virtualization environment.",
                        "typeExposed": "Maybe ExportEnvironment",
                        "type": "Maybe ExportEnvironment"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iedInstanceId",
                        "name": "_iedInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the resource being exported.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iedTargetEnvironment",
                        "name": "_iedTargetEnvironment",
                        "shape": "ExportEnvironment",
                        "locationName": "targetEnvironment",
                        "documentation": "-- | The target virtualization environment.",
                        "typeExposed": "Maybe ExportEnvironment",
                        "type": "Maybe ExportEnvironment"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "SANProductCodes": "productCodes",
                    "SANCreateVolumePermission": "createVolumePermission"
                },
                "valuePad": 23,
                "name": "SnapshotAttributeName",
                "type": "nullary",
                "branchPad": 25
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 13,
                "ctor": "availabilityZone",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "AvailabilityZone",
                "locationPad": 11,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "azZoneName",
                        "name": "_azZoneName",
                        "shape": "String",
                        "locationName": "zoneName",
                        "documentation": "-- | The name of the Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "azState",
                        "name": "_azState",
                        "shape": "AvailabilityZoneState",
                        "locationName": "zoneState",
                        "documentation": "-- | The state of the Availability Zone ('available' | 'impaired' | 'unavailable').",
                        "typeExposed": "Maybe AvailabilityZoneState",
                        "type": "Maybe AvailabilityZoneState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "azRegionName",
                        "name": "_azRegionName",
                        "shape": "String",
                        "locationName": "regionName",
                        "documentation": "-- | The name of the region.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "azMessages",
                        "name": "_azMessages",
                        "shape": "AvailabilityZoneMessageList",
                        "locationName": "messageSet",
                        "documentation": "-- | Any messages about the Availability Zone.",
                        "typeExposed": "[AvailabilityZoneMessage]",
                        "type": "List \"item\" AvailabilityZoneMessage"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "azMessages",
                        "name": "_azMessages",
                        "shape": "AvailabilityZoneMessageList",
                        "locationName": "messageSet",
                        "documentation": "-- | Any messages about the Availability Zone.",
                        "typeExposed": "[AvailabilityZoneMessage]",
                        "type": "List \"item\" AvailabilityZoneMessage"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "azRegionName",
                        "name": "_azRegionName",
                        "shape": "String",
                        "locationName": "regionName",
                        "documentation": "-- | The name of the region.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "azState",
                        "name": "_azState",
                        "shape": "AvailabilityZoneState",
                        "locationName": "zoneState",
                        "documentation": "-- | The state of the Availability Zone ('available' | 'impaired' | 'unavailable').",
                        "typeExposed": "Maybe AvailabilityZoneState",
                        "type": "Maybe AvailabilityZoneState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "azZoneName",
                        "name": "_azZoneName",
                        "shape": "String",
                        "locationName": "zoneName",
                        "documentation": "-- | The name of the Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "VpnStatePending": "pending",
                    "VpnStateAvailable": "available",
                    "VpnStateDeleted": "deleted",
                    "VpnStateDeleting": "deleting"
                },
                "valuePad": 10,
                "name": "VpnState",
                "type": "nullary",
                "branchPad": 17
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "routeTable",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "RouteTable",
                "locationPad": 18,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtRouteTableId",
                        "name": "_rtRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtVpcId",
                        "name": "_rtVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rtRoutes",
                        "name": "_rtRoutes",
                        "shape": "RouteList",
                        "locationName": "routeSet",
                        "documentation": "-- | The routes in the route table.",
                        "typeExposed": "[Route]",
                        "type": "List \"item\" Route"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rtAssociations",
                        "name": "_rtAssociations",
                        "shape": "RouteTableAssociationList",
                        "locationName": "associationSet",
                        "documentation": "-- | The associations between the route table and one or more subnets.",
                        "typeExposed": "[RouteTableAssociation]",
                        "type": "List \"item\" RouteTableAssociation"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rtTags",
                        "name": "_rtTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the route table.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rtPropagatingVgws",
                        "name": "_rtPropagatingVgws",
                        "shape": "PropagatingVgwList",
                        "locationName": "propagatingVgwSet",
                        "documentation": "-- | Any virtual private gateway (VGW) propagating routes.",
                        "typeExposed": "[PropagatingVgw]",
                        "type": "List \"item\" PropagatingVgw"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rtAssociations",
                        "name": "_rtAssociations",
                        "shape": "RouteTableAssociationList",
                        "locationName": "associationSet",
                        "documentation": "-- | The associations between the route table and one or more subnets.",
                        "typeExposed": "[RouteTableAssociation]",
                        "type": "List \"item\" RouteTableAssociation"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rtPropagatingVgws",
                        "name": "_rtPropagatingVgws",
                        "shape": "PropagatingVgwList",
                        "locationName": "propagatingVgwSet",
                        "documentation": "-- | Any virtual private gateway (VGW) propagating routes.",
                        "typeExposed": "[PropagatingVgw]",
                        "type": "List \"item\" PropagatingVgw"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtRouteTableId",
                        "name": "_rtRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rtRoutes",
                        "name": "_rtRoutes",
                        "shape": "RouteList",
                        "locationName": "routeSet",
                        "documentation": "-- | The routes in the route table.",
                        "typeExposed": "[Route]",
                        "type": "List \"item\" Route"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rtTags",
                        "name": "_rtTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the route table.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rtVpcId",
                        "name": "_rtVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Xen": "xen",
                    "Ovm": "ovm"
                },
                "valuePad": 4,
                "name": "HypervisorType",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "instanceStatusDetails",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceStatusDetails",
                "locationPad": 14,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isdName",
                        "name": "_isdName",
                        "shape": "StatusName",
                        "locationName": "name",
                        "documentation": "-- | The type of instance status.",
                        "typeExposed": "Maybe StatusName",
                        "type": "Maybe StatusName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isdStatus",
                        "name": "_isdStatus",
                        "shape": "StatusType",
                        "locationName": "status",
                        "documentation": "-- | The status.",
                        "typeExposed": "Maybe StatusType",
                        "type": "Maybe StatusType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isdImpairedSince",
                        "name": "_isdImpairedSince",
                        "shape": "DateTime",
                        "locationName": "impairedSince",
                        "documentation": "-- | The time when a status check failed. For an instance that was launched and\n-- impaired, this is the time when the instance was launched.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isdImpairedSince",
                        "name": "_isdImpairedSince",
                        "shape": "DateTime",
                        "locationName": "impairedSince",
                        "documentation": "-- | The time when a status check failed. For an instance that was launched and\n-- impaired, this is the time when the instance was launched.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isdName",
                        "name": "_isdName",
                        "shape": "StatusName",
                        "locationName": "name",
                        "documentation": "-- | The type of instance status.",
                        "typeExposed": "Maybe StatusName",
                        "type": "Maybe StatusName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isdStatus",
                        "name": "_isdStatus",
                        "shape": "StatusType",
                        "locationName": "status",
                        "documentation": "-- | The status.",
                        "typeExposed": "Maybe StatusType",
                        "type": "Maybe StatusType"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 7,
                "ctor": "iamInstanceProfile",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "IamInstanceProfile",
                "locationPad": 4,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iipArn",
                        "name": "_iipArn",
                        "shape": "String",
                        "locationName": "arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the instance profile.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iipId",
                        "name": "_iipId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "-- | The ID of the instance profile.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iipArn",
                        "name": "_iipArn",
                        "shape": "String",
                        "locationName": "arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the instance profile.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iipId",
                        "name": "_iipId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "-- | The ID of the instance profile.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "internetGatewayAttachment",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "igaVpcId",
                        "name": "_igaVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "igaState",
                        "name": "_igaState",
                        "shape": "AttachmentStatus",
                        "locationName": "state",
                        "documentation": "-- | The current state of the attachment.",
                        "typeExposed": "AttachmentStatus",
                        "type": "AttachmentStatus"
                    }
                ],
                "contentPad": 0,
                "name": "InternetGatewayAttachment",
                "locationPad": 6,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "igaState",
                        "name": "_igaState",
                        "shape": "AttachmentStatus",
                        "locationName": "state",
                        "documentation": "-- | The current state of the attachment.",
                        "typeExposed": "AttachmentStatus",
                        "type": "AttachmentStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "igaVpcId",
                        "name": "_igaVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "RISPaymentPending": "payment-pending",
                    "RISRetired": "retired",
                    "RISActive": "active",
                    "RISPaymentFailed": "payment-failed"
                },
                "valuePad": 16,
                "name": "ReservedInstanceState",
                "type": "nullary",
                "branchPad": 17
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "IANInstanceKernel": "kernel",
                    "IANInstanceBlockDeviceMapping": "blockDeviceMapping",
                    "IANInstanceInstanceInitiatedShutdownBehavior": "instanceInitiatedShutdownBehavior",
                    "IANInstanceSriovNetSupport": "sriovNetSupport",
                    "IANInstanceRamdisk": "ramdisk",
                    "IANInstanceDisableApiTermination": "disableApiTermination",
                    "IANInstanceProductCodes": "productCodes",
                    "IANInstanceGroupSet": "groupSet",
                    "IANInstanceSourceDestCheck": "sourceDestCheck",
                    "IANInstanceEbsOptimized": "ebsOptimized",
                    "IANInstanceInstanceType": "instanceType",
                    "IANInstanceUserData": "userData",
                    "IANInstanceRootDeviceName": "rootDeviceName"
                },
                "valuePad": 34,
                "name": "InstanceAttributeName",
                "type": "nullary",
                "branchPad": 44
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "ipPermission",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ipIpProtocol",
                        "name": "_ipIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "-- | The protocol.\n--\n-- When you call 'DescribeSecurityGroups', the protocol value returned is the\n-- number. Exception: For TCP, UDP, and ICMP, the value returned is the name\n-- (for example, 'tcp', 'udp', or 'icmp'). For a list of protocol numbers, see \u003chttp://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml Protocol Numbers\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ipFromPort",
                        "name": "_ipFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "-- | The start of port range for the TCP and UDP protocols, or an ICMP type\n-- number. A value of '-1' indicates all ICMP types.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ipToPort",
                        "name": "_ipToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "-- | The end of port range for the TCP and UDP protocols, or an ICMP code. A value\n-- of '-1' indicates all ICMP codes for the specified ICMP type.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 0,
                "name": "IpPermission",
                "locationPad": 11,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ipUserIdGroupPairs",
                        "name": "_ipUserIdGroupPairs",
                        "shape": "UserIdGroupPairList",
                        "locationName": "groups",
                        "documentation": "-- | One or more security group and AWS account ID pairs.",
                        "typeExposed": "[UserIdGroupPair]",
                        "type": "List \"item\" UserIdGroupPair"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ipIpRanges",
                        "name": "_ipIpRanges",
                        "shape": "IpRangeList",
                        "locationName": "ipRanges",
                        "documentation": "-- | One or more IP ranges.",
                        "typeExposed": "[IpRange]",
                        "type": "List \"item\" IpRange"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ipFromPort",
                        "name": "_ipFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "-- | The start of port range for the TCP and UDP protocols, or an ICMP type\n-- number. A value of '-1' indicates all ICMP types.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ipIpProtocol",
                        "name": "_ipIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "-- | The protocol.\n--\n-- When you call 'DescribeSecurityGroups', the protocol value returned is the\n-- number. Exception: For TCP, UDP, and ICMP, the value returned is the name\n-- (for example, 'tcp', 'udp', or 'icmp'). For a list of protocol numbers, see \u003chttp://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml Protocol Numbers\u003e.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ipIpRanges",
                        "name": "_ipIpRanges",
                        "shape": "IpRangeList",
                        "locationName": "ipRanges",
                        "documentation": "-- | One or more IP ranges.",
                        "typeExposed": "[IpRange]",
                        "type": "List \"item\" IpRange"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ipToPort",
                        "name": "_ipToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "-- | The end of port range for the TCP and UDP protocols, or an ICMP code. A value\n-- of '-1' indicates all ICMP codes for the specified ICMP type.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ipUserIdGroupPairs",
                        "name": "_ipUserIdGroupPairs",
                        "shape": "UserIdGroupPairList",
                        "locationName": "groups",
                        "documentation": "-- | One or more security group and AWS account ID pairs.",
                        "typeExposed": "[UserIdGroupPair]",
                        "type": "List \"item\" UserIdGroupPair"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "CTSCancelled": "cancelled",
                    "CTSActive": "active",
                    "CTSCancelling": "cancelling",
                    "CTSCompleted": "completed"
                },
                "valuePad": 11,
                "name": "ConversionTaskState",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 14,
                "ctor": "diskImage",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "DiskImage",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diImage",
                        "name": "_diImage",
                        "shape": "DiskImageDetail",
                        "locationName": "Image",
                        "documentation": null,
                        "typeExposed": "Maybe DiskImageDetail",
                        "type": "Maybe DiskImageDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diDescription",
                        "name": "_diDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diVolume",
                        "name": "_diVolume",
                        "shape": "VolumeDetail",
                        "locationName": "Volume",
                        "documentation": null,
                        "typeExposed": "Maybe VolumeDetail",
                        "type": "Maybe VolumeDetail"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diDescription",
                        "name": "_diDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diImage",
                        "name": "_diImage",
                        "shape": "DiskImageDetail",
                        "locationName": "Image",
                        "documentation": null,
                        "typeExposed": "Maybe DiskImageDetail",
                        "type": "Maybe DiskImageDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diVolume",
                        "name": "_diVolume",
                        "shape": "VolumeDetail",
                        "locationName": "Volume",
                        "documentation": null,
                        "typeExposed": "Maybe VolumeDetail",
                        "type": "Maybe VolumeDetail"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Dedicated": "dedicated",
                    "Default'": "default"
                },
                "valuePad": 10,
                "name": "Tenancy",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 13,
                "ctor": "vpcPeeringConnectionStateReason",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VpcPeeringConnectionStateReason",
                "locationPad": 8,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpcsrCode",
                        "name": "_vpcsrCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The status of the VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpcsrMessage",
                        "name": "_vpcsrMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | A message that provides more information about the status, if applicable.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpcsrCode",
                        "name": "_vpcsrCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The status of the VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpcsrMessage",
                        "name": "_vpcsrMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | A message that provides more information about the status, if applicable.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 9,
                "ctor": "iamInstanceProfileSpecification",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "IamInstanceProfileSpecification",
                "locationPad": 5,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iipsArn",
                        "name": "_iipsArn",
                        "shape": "String",
                        "locationName": "arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the instance profile.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iipsName",
                        "name": "_iipsName",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "-- | The name of the instance profile.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iipsArn",
                        "name": "_iipsArn",
                        "shape": "String",
                        "locationName": "arn",
                        "documentation": "-- | The Amazon Resource Name (ARN) of the instance profile.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iipsName",
                        "name": "_iipsName",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "-- | The name of the instance profile.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "importVolumeTaskDetails",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivtdBytesConverted",
                        "name": "_ivtdBytesConverted",
                        "shape": "Long",
                        "locationName": "bytesConverted",
                        "documentation": "-- | The number of bytes converted so far.",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivtdAvailabilityZone",
                        "name": "_ivtdAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone where the resulting volume will reside.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivtdImage",
                        "name": "_ivtdImage",
                        "shape": "DiskImageDescription",
                        "locationName": "image",
                        "documentation": "-- | The image.",
                        "typeExposed": "DiskImageDescription",
                        "type": "DiskImageDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivtdVolume",
                        "name": "_ivtdVolume",
                        "shape": "DiskImageVolumeDescription",
                        "locationName": "volume",
                        "documentation": "-- | The volume.",
                        "typeExposed": "DiskImageVolumeDescription",
                        "type": "DiskImageVolumeDescription"
                    }
                ],
                "contentPad": 0,
                "name": "ImportVolumeTaskDetails",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ivtdDescription",
                        "name": "_ivtdDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description you provided when starting the import volume task.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivtdAvailabilityZone",
                        "name": "_ivtdAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone where the resulting volume will reside.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivtdBytesConverted",
                        "name": "_ivtdBytesConverted",
                        "shape": "Long",
                        "locationName": "bytesConverted",
                        "documentation": "-- | The number of bytes converted so far.",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ivtdDescription",
                        "name": "_ivtdDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description you provided when starting the import volume task.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivtdImage",
                        "name": "_ivtdImage",
                        "shape": "DiskImageDescription",
                        "locationName": "image",
                        "documentation": "-- | The image.",
                        "typeExposed": "DiskImageDescription",
                        "type": "DiskImageDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivtdVolume",
                        "name": "_ivtdVolume",
                        "shape": "DiskImageVolumeDescription",
                        "locationName": "volume",
                        "documentation": "-- | The volume.",
                        "typeExposed": "DiskImageVolumeDescription",
                        "type": "DiskImageVolumeDescription"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Cluster": "cluster"
                },
                "valuePad": 8,
                "name": "PlacementStrategy",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "instanceNetworkInterface",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceNetworkInterface",
                "locationPad": 22,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniNetworkInterfaceId",
                        "name": "_iniNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniSubnetId",
                        "name": "_iniSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniVpcId",
                        "name": "_iniVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniDescription",
                        "name": "_iniDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniOwnerId",
                        "name": "_iniOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The ID of the AWS account that created the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniStatus",
                        "name": "_iniStatus",
                        "shape": "NetworkInterfaceStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of the network interface.",
                        "typeExposed": "Maybe NetworkInterfaceStatus",
                        "type": "Maybe NetworkInterfaceStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniMacAddress",
                        "name": "_iniMacAddress",
                        "shape": "String",
                        "locationName": "macAddress",
                        "documentation": "-- | The MAC address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniPrivateIpAddress",
                        "name": "_iniPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The IP address of the network interface within the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniPrivateDnsName",
                        "name": "_iniPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "-- | The private DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniSourceDestCheck",
                        "name": "_iniSourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Indicates whether to validate network traffic to or from this network\n-- interface.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iniGroups",
                        "name": "_iniGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | One or more security groups.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniAttachment",
                        "name": "_iniAttachment",
                        "shape": "InstanceNetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "-- | The network interface attachment.",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAttachment",
                        "type": "Maybe InstanceNetworkInterfaceAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniAssociation",
                        "name": "_iniAssociation",
                        "shape": "InstanceNetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "-- | The association information for an Elastic IP associated with the network\n-- interface.",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAssociation",
                        "type": "Maybe InstanceNetworkInterfaceAssociation"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iniPrivateIpAddresses",
                        "name": "_iniPrivateIpAddresses",
                        "shape": "InstancePrivateIpAddressList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "-- | The private IP addresses associated with the network interface.",
                        "typeExposed": "[InstancePrivateIpAddress]",
                        "type": "List \"item\" InstancePrivateIpAddress"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniAssociation",
                        "name": "_iniAssociation",
                        "shape": "InstanceNetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "-- | The association information for an Elastic IP associated with the network\n-- interface.",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAssociation",
                        "type": "Maybe InstanceNetworkInterfaceAssociation"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniAttachment",
                        "name": "_iniAttachment",
                        "shape": "InstanceNetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "-- | The network interface attachment.",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAttachment",
                        "type": "Maybe InstanceNetworkInterfaceAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniDescription",
                        "name": "_iniDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iniGroups",
                        "name": "_iniGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | One or more security groups.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniMacAddress",
                        "name": "_iniMacAddress",
                        "shape": "String",
                        "locationName": "macAddress",
                        "documentation": "-- | The MAC address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniNetworkInterfaceId",
                        "name": "_iniNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniOwnerId",
                        "name": "_iniOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The ID of the AWS account that created the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniPrivateDnsName",
                        "name": "_iniPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "-- | The private DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniPrivateIpAddress",
                        "name": "_iniPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The IP address of the network interface within the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iniPrivateIpAddresses",
                        "name": "_iniPrivateIpAddresses",
                        "shape": "InstancePrivateIpAddressList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "-- | The private IP addresses associated with the network interface.",
                        "typeExposed": "[InstancePrivateIpAddress]",
                        "type": "List \"item\" InstancePrivateIpAddress"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniSourceDestCheck",
                        "name": "_iniSourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Indicates whether to validate network traffic to or from this network\n-- interface.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniStatus",
                        "name": "_iniStatus",
                        "shape": "NetworkInterfaceStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of the network interface.",
                        "typeExposed": "Maybe NetworkInterfaceStatus",
                        "type": "Maybe NetworkInterfaceStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniSubnetId",
                        "name": "_iniSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniVpcId",
                        "name": "_iniVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "volumeStatusAction",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VolumeStatusAction",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsaCode",
                        "name": "_vsaCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The code identifying the operation, for example, 'enable-volume-io'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsaDescription",
                        "name": "_vsaDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description of the operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsaEventType",
                        "name": "_vsaEventType",
                        "shape": "String",
                        "locationName": "eventType",
                        "documentation": "-- | The event type associated with this operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsaEventId",
                        "name": "_vsaEventId",
                        "shape": "String",
                        "locationName": "eventId",
                        "documentation": "-- | The ID of the event associated with this operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsaCode",
                        "name": "_vsaCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The code identifying the operation, for example, 'enable-volume-io'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsaDescription",
                        "name": "_vsaDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description of the operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsaEventId",
                        "name": "_vsaEventId",
                        "shape": "String",
                        "locationName": "eventId",
                        "documentation": "-- | The ID of the event associated with this operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsaEventType",
                        "name": "_vsaEventType",
                        "shape": "String",
                        "locationName": "eventType",
                        "documentation": "-- | The event type associated with this operation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "vpcPeeringConnectionVpcInfo",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VpcPeeringConnectionVpcInfo",
                "locationPad": 10,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpcviCidrBlock",
                        "name": "_vpcviCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The CIDR block for the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpcviOwnerId",
                        "name": "_vpcviOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the VPC owner.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpcviVpcId",
                        "name": "_vpcviVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpcviCidrBlock",
                        "name": "_vpcviCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The CIDR block for the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpcviOwnerId",
                        "name": "_vpcviOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the VPC owner.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpcviVpcId",
                        "name": "_vpcviVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "reservedInstanceLimitPrice",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ReservedInstanceLimitPrice",
                "locationPad": 13,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilpAmount",
                        "name": "_rilpAmount",
                        "shape": "Double",
                        "locationName": "amount",
                        "documentation": "-- | Used for Reserved Instance Marketplace offerings. Specifies the limit price\n-- on the total order (instanceCount * price).",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilpCurrencyCode",
                        "name": "_rilpCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "-- | The currency in which the 'limitPrice' amount is specified. At this time, the\n-- only supported currency is 'USD'.",
                        "typeExposed": "Maybe CurrencyCodeValues",
                        "type": "Maybe CurrencyCodeValues"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilpAmount",
                        "name": "_rilpAmount",
                        "shape": "Double",
                        "locationName": "amount",
                        "documentation": "-- | Used for Reserved Instance Marketplace offerings. Specifies the limit price\n-- on the total order (instanceCount * price).",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rilpCurrencyCode",
                        "name": "_rilpCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "-- | The currency in which the 'limitPrice' amount is specified. At this time, the\n-- only supported currency is 'USD'.",
                        "typeExposed": "Maybe CurrencyCodeValues",
                        "type": "Maybe CurrencyCodeValues"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "vpc",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcVpcId",
                        "name": "_vpcVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcState",
                        "name": "_vpcState",
                        "shape": "VpcState",
                        "locationName": "state",
                        "documentation": "-- | The current state of the VPC.",
                        "typeExposed": "VpcState",
                        "type": "VpcState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcCidrBlock",
                        "name": "_vpcCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The CIDR block for the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcDhcpOptionsId",
                        "name": "_vpcDhcpOptionsId",
                        "shape": "String",
                        "locationName": "dhcpOptionsId",
                        "documentation": "-- | The ID of the set of DHCP options you've associated with the VPC (or 'default'\n-- if the default options are associated with the VPC).",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcInstanceTenancy",
                        "name": "_vpcInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "-- | The allowed tenancy of instances launched into the VPC.",
                        "typeExposed": "Tenancy",
                        "type": "Tenancy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcIsDefault",
                        "name": "_vpcIsDefault",
                        "shape": "Boolean",
                        "locationName": "isDefault",
                        "documentation": "-- | Indicates whether the VPC is the default VPC.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "contentPad": 0,
                "name": "Vpc",
                "locationPad": 16,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vpcTags",
                        "name": "_vpcTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the VPC.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcCidrBlock",
                        "name": "_vpcCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The CIDR block for the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcDhcpOptionsId",
                        "name": "_vpcDhcpOptionsId",
                        "shape": "String",
                        "locationName": "dhcpOptionsId",
                        "documentation": "-- | The ID of the set of DHCP options you've associated with the VPC (or 'default'\n-- if the default options are associated with the VPC).",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcInstanceTenancy",
                        "name": "_vpcInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "-- | The allowed tenancy of instances launched into the VPC.",
                        "typeExposed": "Tenancy",
                        "type": "Tenancy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcIsDefault",
                        "name": "_vpcIsDefault",
                        "shape": "Boolean",
                        "locationName": "isDefault",
                        "documentation": "-- | Indicates whether the VPC is the default VPC.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcState",
                        "name": "_vpcState",
                        "shape": "VpcState",
                        "locationName": "state",
                        "documentation": "-- | The current state of the VPC.",
                        "typeExposed": "VpcState",
                        "type": "VpcState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vpcTags",
                        "name": "_vpcTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the VPC.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vpcVpcId",
                        "name": "_vpcVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "instanceStatus",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceStatus",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isInstanceId",
                        "name": "_isInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isAvailabilityZone",
                        "name": "_isAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "isEvents",
                        "name": "_isEvents",
                        "shape": "InstanceStatusEventList",
                        "locationName": "eventsSet",
                        "documentation": "-- | Extra information regarding events associated with the instance.",
                        "typeExposed": "[InstanceStatusEvent]",
                        "type": "List \"item\" InstanceStatusEvent"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isInstanceState",
                        "name": "_isInstanceState",
                        "shape": "InstanceState",
                        "locationName": "instanceState",
                        "documentation": "-- | The intended state of the instance. 'DescribeInstanceStatus' requires that an\n-- instance be in the 'running' state.",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isSystemStatus",
                        "name": "_isSystemStatus",
                        "shape": "InstanceStatusSummary",
                        "locationName": "systemStatus",
                        "documentation": "-- | Reports impaired functionality that stems from issues related to the systems\n-- that support an instance, such as hardware failures and network connectivity\n-- problems.",
                        "typeExposed": "Maybe InstanceStatusSummary",
                        "type": "Maybe InstanceStatusSummary"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isInstanceStatus",
                        "name": "_isInstanceStatus",
                        "shape": "InstanceStatusSummary",
                        "locationName": "instanceStatus",
                        "documentation": "-- | Reports impaired functionality that stems from issues internal to the\n-- instance, such as impaired reachability.",
                        "typeExposed": "Maybe InstanceStatusSummary",
                        "type": "Maybe InstanceStatusSummary"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isAvailabilityZone",
                        "name": "_isAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "isEvents",
                        "name": "_isEvents",
                        "shape": "InstanceStatusEventList",
                        "locationName": "eventsSet",
                        "documentation": "-- | Extra information regarding events associated with the instance.",
                        "typeExposed": "[InstanceStatusEvent]",
                        "type": "List \"item\" InstanceStatusEvent"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isInstanceId",
                        "name": "_isInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isInstanceState",
                        "name": "_isInstanceState",
                        "shape": "InstanceState",
                        "locationName": "instanceState",
                        "documentation": "-- | The intended state of the instance. 'DescribeInstanceStatus' requires that an\n-- instance be in the 'running' state.",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isInstanceStatus",
                        "name": "_isInstanceStatus",
                        "shape": "InstanceStatusSummary",
                        "locationName": "instanceStatus",
                        "documentation": "-- | Reports impaired functionality that stems from issues internal to the\n-- instance, such as impaired reachability.",
                        "typeExposed": "Maybe InstanceStatusSummary",
                        "type": "Maybe InstanceStatusSummary"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "isSystemStatus",
                        "name": "_isSystemStatus",
                        "shape": "InstanceStatusSummary",
                        "locationName": "systemStatus",
                        "documentation": "-- | Reports impaired functionality that stems from issues related to the systems\n-- that support an instance, such as hardware failures and network connectivity\n-- problems.",
                        "typeExposed": "Maybe InstanceStatusSummary",
                        "type": "Maybe InstanceStatusSummary"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "I386": "i386",
                    "X8664": "x86_64"
                },
                "valuePad": 7,
                "name": "ArchitectureValues",
                "type": "nullary",
                "branchPad": 5
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "PerformanceOther": "performance-other",
                    "Other": "other",
                    "Unresponsive": "unresponsive",
                    "NotAcceptingCredentials": "not-accepting-credentials",
                    "InstanceStuckInState": "instance-stuck-in-state",
                    "PerformanceNetwork": "performance-network",
                    "PerformanceInstanceStore": "performance-instance-store",
                    "PerformanceEbsVolume": "performance-ebs-volume",
                    "PasswordNotAvailable": "password-not-available"
                },
                "valuePad": 27,
                "name": "ReportInstanceReasonCodes",
                "type": "nullary",
                "branchPad": 24
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 23,
                "ctor": "ebsBlockDevice",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "EbsBlockDevice",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdSnapshotId",
                        "name": "_ebdSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The ID of the snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdVolumeSize",
                        "name": "_ebdVolumeSize",
                        "shape": "Integer",
                        "locationName": "volumeSize",
                        "documentation": "-- | The size of the volume, in GiB.\n--\n-- Constraints: If the volume type is 'io1', the minimum size of the volume is 10\n-- GiB; otherwise, the minimum size is 1 GiB. The maximum volume size is 1024\n-- GiB. If you specify a snapshot, the volume size must be equal to or larger\n-- than the snapshot size.\n--\n-- Default: If you're creating the volume from a snapshot and don't specify a\n-- volume size, the default is the snapshot size.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdDeleteOnTermination",
                        "name": "_ebdDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the Amazon EBS volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdVolumeType",
                        "name": "_ebdVolumeType",
                        "shape": "VolumeType",
                        "locationName": "volumeType",
                        "documentation": "-- | The volume type. 'gp2' for General Purpose (SSD) volumes, 'io1' for Provisioned\n-- IOPS (SSD) volumes, and 'standard' for Magnetic volumes.\n--\n-- Default: 'standard'",
                        "typeExposed": "Maybe VolumeType",
                        "type": "Maybe VolumeType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdIops",
                        "name": "_ebdIops",
                        "shape": "Integer",
                        "locationName": "iops",
                        "documentation": "-- | The number of I/O operations per second (IOPS) that the volume supports. For\n-- Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are\n-- provisioned for the volume. For General Purpose (SSD) volumes, this\n-- represents the baseline performance of the volume and the rate at which the\n-- volume accumulates I/O credits for bursting. For more information on General\n-- Purpose (SSD) baseline performance, I/O credits, and bursting, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html Amazon EBSVolume Types\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- Constraint: Range is 100 to 4000 for Provisioned IOPS (SSD) volumes and 3 to\n-- 3072 for General Purpose (SSD) volumes.\n--\n-- Condition: This parameter is required for requests to create 'io1' volumes; it\n-- is not used in requests to create 'standard' or 'gp2' volumes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdEncrypted",
                        "name": "_ebdEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Indicates whether the Amazon EBS volume is encrypted. Encrypted Amazon EBS\n-- volumes may only be attached to instances that support Amazon EBS encryption.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdDeleteOnTermination",
                        "name": "_ebdDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the Amazon EBS volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdEncrypted",
                        "name": "_ebdEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Indicates whether the Amazon EBS volume is encrypted. Encrypted Amazon EBS\n-- volumes may only be attached to instances that support Amazon EBS encryption.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdIops",
                        "name": "_ebdIops",
                        "shape": "Integer",
                        "locationName": "iops",
                        "documentation": "-- | The number of I/O operations per second (IOPS) that the volume supports. For\n-- Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are\n-- provisioned for the volume. For General Purpose (SSD) volumes, this\n-- represents the baseline performance of the volume and the rate at which the\n-- volume accumulates I/O credits for bursting. For more information on General\n-- Purpose (SSD) baseline performance, I/O credits, and bursting, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html Amazon EBSVolume Types\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- Constraint: Range is 100 to 4000 for Provisioned IOPS (SSD) volumes and 3 to\n-- 3072 for General Purpose (SSD) volumes.\n--\n-- Condition: This parameter is required for requests to create 'io1' volumes; it\n-- is not used in requests to create 'standard' or 'gp2' volumes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdSnapshotId",
                        "name": "_ebdSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The ID of the snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdVolumeSize",
                        "name": "_ebdVolumeSize",
                        "shape": "Integer",
                        "locationName": "volumeSize",
                        "documentation": "-- | The size of the volume, in GiB.\n--\n-- Constraints: If the volume type is 'io1', the minimum size of the volume is 10\n-- GiB; otherwise, the minimum size is 1 GiB. The maximum volume size is 1024\n-- GiB. If you specify a snapshot, the volume size must be equal to or larger\n-- than the snapshot size.\n--\n-- Default: If you're creating the volume from a snapshot and don't specify a\n-- volume size, the default is the snapshot size.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ebdVolumeType",
                        "name": "_ebdVolumeType",
                        "shape": "VolumeType",
                        "locationName": "volumeType",
                        "documentation": "-- | The volume type. 'gp2' for General Purpose (SSD) volumes, 'io1' for Provisioned\n-- IOPS (SSD) volumes, and 'standard' for Magnetic volumes.\n--\n-- Default: 'standard'",
                        "typeExposed": "Maybe VolumeType",
                        "type": "Maybe VolumeType"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "accountAttribute",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "AccountAttribute",
                "locationPad": 18,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aaAttributeName",
                        "name": "_aaAttributeName",
                        "shape": "String",
                        "locationName": "attributeName",
                        "documentation": "-- | The name of the account attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "aaAttributeValues",
                        "name": "_aaAttributeValues",
                        "shape": "AccountAttributeValueList",
                        "locationName": "attributeValueSet",
                        "documentation": "-- | One or more values for the account attribute.",
                        "typeExposed": "[AccountAttributeValue]",
                        "type": "List \"item\" AccountAttributeValue"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aaAttributeName",
                        "name": "_aaAttributeName",
                        "shape": "String",
                        "locationName": "attributeName",
                        "documentation": "-- | The name of the account attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "aaAttributeValues",
                        "name": "_aaAttributeValues",
                        "shape": "AccountAttributeValueList",
                        "locationName": "attributeValueSet",
                        "documentation": "-- | One or more values for the account attribute.",
                        "typeExposed": "[AccountAttributeValue]",
                        "type": "List \"item\" AccountAttributeValue"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "priceSchedule",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PriceSchedule",
                "locationPad": 13,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "psTerm",
                        "name": "_psTerm",
                        "shape": "Long",
                        "locationName": "term",
                        "documentation": "-- | The number of months remaining in the reservation. For example, 2 is the\n-- second to the last month before the capacity reservation expires.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "psPrice",
                        "name": "_psPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "-- | The fixed price for the term.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "psCurrencyCode",
                        "name": "_psCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "-- | The currency for transacting the Reserved Instance resale. At this time, the\n-- only supported currency is 'USD'.",
                        "typeExposed": "Maybe CurrencyCodeValues",
                        "type": "Maybe CurrencyCodeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "psActive",
                        "name": "_psActive",
                        "shape": "Boolean",
                        "locationName": "active",
                        "documentation": "-- | The current price schedule, as determined by the term remaining for the\n-- Reserved Instance in the listing.\n--\n-- A specific price schedule is always in effect, but only one price schedule\n-- can be active at any time. Take, for example, a Reserved Instance listing\n-- that has five months remaining in its term. When you specify price schedules\n-- for five months and two months, this means that schedule 1, covering the\n-- first three months of the remaining term, will be active during months 5, 4,\n-- and 3. Then schedule 2, covering the last two months of the term, will be\n-- active for months 2 and 1.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "psActive",
                        "name": "_psActive",
                        "shape": "Boolean",
                        "locationName": "active",
                        "documentation": "-- | The current price schedule, as determined by the term remaining for the\n-- Reserved Instance in the listing.\n--\n-- A specific price schedule is always in effect, but only one price schedule\n-- can be active at any time. Take, for example, a Reserved Instance listing\n-- that has five months remaining in its term. When you specify price schedules\n-- for five months and two months, this means that schedule 1, covering the\n-- first three months of the remaining term, will be active during months 5, 4,\n-- and 3. Then schedule 2, covering the last two months of the term, will be\n-- active for months 2 and 1.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "psCurrencyCode",
                        "name": "_psCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "-- | The currency for transacting the Reserved Instance resale. At this time, the\n-- only supported currency is 'USD'.",
                        "typeExposed": "Maybe CurrencyCodeValues",
                        "type": "Maybe CurrencyCodeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "psPrice",
                        "name": "_psPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "-- | The fixed price for the term.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "psTerm",
                        "name": "_psTerm",
                        "shape": "Long",
                        "locationName": "term",
                        "documentation": "-- | The number of months remaining in the reservation. For example, 2 is the\n-- second to the last month before the capacity reservation expires.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "InstanceStore": "instance-store",
                    "Ebs": "ebs"
                },
                "valuePad": 15,
                "name": "DeviceType",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "DTStandard": "standard",
                    "DTVpc": "vpc"
                },
                "valuePad": 9,
                "name": "DomainType",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 12,
                "ctor": "region",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Region",
                "locationPad": 15,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rRegionName",
                        "name": "_rRegionName",
                        "shape": "String",
                        "locationName": "regionName",
                        "documentation": "-- | The name of the region.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rEndpoint",
                        "name": "_rEndpoint",
                        "shape": "String",
                        "locationName": "regionEndpoint",
                        "documentation": "-- | The region service endpoint.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rEndpoint",
                        "name": "_rEndpoint",
                        "shape": "String",
                        "locationName": "regionEndpoint",
                        "documentation": "-- | The region service endpoint.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rRegionName",
                        "name": "_rRegionName",
                        "shape": "String",
                        "locationName": "regionName",
                        "documentation": "-- | The name of the region.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "propagatingVgw",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "pvGatewayId",
                    "name": "_pvGatewayId",
                    "shape": "String",
                    "locationName": "gatewayId",
                    "documentation": "-- | The ID of the virtual private gateway (VGW).",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PropagatingVgw",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pvGatewayId",
                        "name": "_pvGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "-- | The ID of the virtual private gateway (VGW).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pvGatewayId",
                        "name": "_pvGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "-- | The ID of the virtual private gateway (VGW).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "MediumUtilization": "Medium Utilization",
                    "HeavyUtilization": "Heavy Utilization",
                    "LightUtilization": "Light Utilization"
                },
                "valuePad": 19,
                "name": "OfferingTypeValues",
                "type": "nullary",
                "branchPad": 17
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "vpnGateway",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VpnGateway",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vgVpnGatewayId",
                        "name": "_vgVpnGatewayId",
                        "shape": "String",
                        "locationName": "vpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vgState",
                        "name": "_vgState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "-- | The current state of the virtual private gateway.",
                        "typeExposed": "Maybe VpnState",
                        "type": "Maybe VpnState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vgType",
                        "name": "_vgType",
                        "shape": "GatewayType",
                        "locationName": "type",
                        "documentation": "-- | The type of VPN connection the virtual private gateway supports.",
                        "typeExposed": "Maybe GatewayType",
                        "type": "Maybe GatewayType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vgAvailabilityZone",
                        "name": "_vgAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone where the virtual private gateway was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vgVpcAttachments",
                        "name": "_vgVpcAttachments",
                        "shape": "VpcAttachmentList",
                        "locationName": "attachments",
                        "documentation": "-- | Any VPCs attached to the virtual private gateway.",
                        "typeExposed": "[VpcAttachment]",
                        "type": "List \"item\" VpcAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vgTags",
                        "name": "_vgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the virtual private gateway.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vgAvailabilityZone",
                        "name": "_vgAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone where the virtual private gateway was created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vgState",
                        "name": "_vgState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "-- | The current state of the virtual private gateway.",
                        "typeExposed": "Maybe VpnState",
                        "type": "Maybe VpnState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vgTags",
                        "name": "_vgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the virtual private gateway.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vgType",
                        "name": "_vgType",
                        "shape": "GatewayType",
                        "locationName": "type",
                        "documentation": "-- | The type of VPN connection the virtual private gateway supports.",
                        "typeExposed": "Maybe GatewayType",
                        "type": "Maybe GatewayType"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vgVpcAttachments",
                        "name": "_vgVpcAttachments",
                        "shape": "VpcAttachmentList",
                        "locationName": "attachments",
                        "documentation": "-- | Any VPCs attached to the virtual private gateway.",
                        "typeExposed": "[VpcAttachment]",
                        "type": "List \"item\" VpcAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vgVpnGatewayId",
                        "name": "_vgVpnGatewayId",
                        "shape": "String",
                        "locationName": "vpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 8,
                "ctor": "filter'",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "fName",
                        "name": "_fName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "-- | The name of the filter. Filter names are case-sensitive.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "Filter",
                "locationPad": 6,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "fValues",
                        "name": "_fValues",
                        "shape": "ValueStringList",
                        "locationName": "Value",
                        "documentation": "-- | One or more filter values. Filter values are case-sensitive.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "fName",
                        "name": "_fName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "-- | The name of the filter. Filter names are case-sensitive.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "fValues",
                        "name": "_fValues",
                        "shape": "ValueStringList",
                        "locationName": "Value",
                        "documentation": "-- | One or more filter values. Filter values are case-sensitive.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Standard": "standard",
                    "Io1": "io1",
                    "Gp2": "gp2"
                },
                "valuePad": 9,
                "name": "VolumeType",
                "type": "nullary",
                "branchPad": 8
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "instanceStateChange",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceStateChange",
                "locationPad": 14,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iscInstanceId",
                        "name": "_iscInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iscCurrentState",
                        "name": "_iscCurrentState",
                        "shape": "InstanceState",
                        "locationName": "currentState",
                        "documentation": "-- | The current state of the instance.",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iscPreviousState",
                        "name": "_iscPreviousState",
                        "shape": "InstanceState",
                        "locationName": "previousState",
                        "documentation": "-- | The previous state of the instance.",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iscCurrentState",
                        "name": "_iscCurrentState",
                        "shape": "InstanceState",
                        "locationName": "currentState",
                        "documentation": "-- | The current state of the instance.",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iscInstanceId",
                        "name": "_iscInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iscPreviousState",
                        "name": "_iscPreviousState",
                        "shape": "InstanceState",
                        "locationName": "previousState",
                        "documentation": "-- | The previous state of the instance.",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "networkAcl",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "NetworkAcl",
                "locationPad": 15,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naNetworkAclId",
                        "name": "_naNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the network ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naVpcId",
                        "name": "_naVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC for the network ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naIsDefault",
                        "name": "_naIsDefault",
                        "shape": "Boolean",
                        "locationName": "default",
                        "documentation": "-- | Indicates whether this is the default network ACL for the VPC.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "naEntries",
                        "name": "_naEntries",
                        "shape": "NetworkAclEntryList",
                        "locationName": "entrySet",
                        "documentation": "-- | One or more entries (rules) in the network ACL.",
                        "typeExposed": "[NetworkAclEntry]",
                        "type": "List \"item\" NetworkAclEntry"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "naAssociations",
                        "name": "_naAssociations",
                        "shape": "NetworkAclAssociationList",
                        "locationName": "associationSet",
                        "documentation": "-- | Any associations between the network ACL and one or more subnets",
                        "typeExposed": "[NetworkAclAssociation]",
                        "type": "List \"item\" NetworkAclAssociation"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "naTags",
                        "name": "_naTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the network ACL.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "naAssociations",
                        "name": "_naAssociations",
                        "shape": "NetworkAclAssociationList",
                        "locationName": "associationSet",
                        "documentation": "-- | Any associations between the network ACL and one or more subnets",
                        "typeExposed": "[NetworkAclAssociation]",
                        "type": "List \"item\" NetworkAclAssociation"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "naEntries",
                        "name": "_naEntries",
                        "shape": "NetworkAclEntryList",
                        "locationName": "entrySet",
                        "documentation": "-- | One or more entries (rules) in the network ACL.",
                        "typeExposed": "[NetworkAclEntry]",
                        "type": "List \"item\" NetworkAclEntry"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naIsDefault",
                        "name": "_naIsDefault",
                        "shape": "Boolean",
                        "locationName": "default",
                        "documentation": "-- | Indicates whether this is the default network ACL for the VPC.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naNetworkAclId",
                        "name": "_naNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the network ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "naTags",
                        "name": "_naTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the network ACL.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "naVpcId",
                        "name": "_naVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC for the network ACL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "ISAvailable": "available",
                    "ISDeregistered": "deregistered"
                },
                "valuePad": 13,
                "name": "ImageState",
                "type": "nullary",
                "branchPad": 14
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Ipsec1": "ipsec.1"
                },
                "valuePad": 8,
                "name": "GatewayType",
                "type": "nullary",
                "branchPad": 6
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "instanceNetworkInterfaceAttachment",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "InstanceNetworkInterfaceAttachment",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaAttachmentId",
                        "name": "_iniaAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "-- | The ID of the network interface attachment.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaDeviceIndex",
                        "name": "_iniaDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "-- | The index of the device on the instance for the network interface attachment.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaStatus",
                        "name": "_iniaStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "-- | The attachment state.",
                        "typeExposed": "Maybe AttachmentStatus",
                        "type": "Maybe AttachmentStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaAttachTime",
                        "name": "_iniaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The time stamp when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaDeleteOnTermination",
                        "name": "_iniaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the network interface is deleted when the instance is\n-- terminated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaAttachTime",
                        "name": "_iniaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The time stamp when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaAttachmentId",
                        "name": "_iniaAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "-- | The ID of the network interface attachment.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaDeleteOnTermination",
                        "name": "_iniaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the network interface is deleted when the instance is\n-- terminated.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaDeviceIndex",
                        "name": "_iniaDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "-- | The index of the device on the instance for the network interface attachment.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iniaStatus",
                        "name": "_iniaStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "-- | The attachment state.",
                        "typeExposed": "Maybe AttachmentStatus",
                        "type": "Maybe AttachmentStatus"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "attributeBooleanValue",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "abvValue",
                    "name": "_abvValue",
                    "shape": "Boolean",
                    "locationName": "value",
                    "documentation": "-- | Valid values are 'true' or 'false'.",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "AttributeBooleanValue",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "abvValue",
                        "name": "_abvValue",
                        "shape": "Boolean",
                        "locationName": "value",
                        "documentation": "-- | Valid values are 'true' or 'false'.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "abvValue",
                        "name": "_abvValue",
                        "shape": "Boolean",
                        "locationName": "value",
                        "documentation": "-- | Valid values are 'true' or 'false'.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 12,
                "ctor": "recurringCharge",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "RecurringCharge",
                "locationPad": 10,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rcFrequency",
                        "name": "_rcFrequency",
                        "shape": "RecurringChargeFrequency",
                        "locationName": "frequency",
                        "documentation": "-- | The frequency of the recurring charge.",
                        "typeExposed": "Maybe RecurringChargeFrequency",
                        "type": "Maybe RecurringChargeFrequency"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rcAmount",
                        "name": "_rcAmount",
                        "shape": "Double",
                        "locationName": "amount",
                        "documentation": "-- | The amount of the recurring charge.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rcAmount",
                        "name": "_rcAmount",
                        "shape": "Double",
                        "locationName": "amount",
                        "documentation": "-- | The amount of the recurring charge.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rcFrequency",
                        "name": "_rcFrequency",
                        "shape": "RecurringChargeFrequency",
                        "locationName": "frequency",
                        "documentation": "-- | The frequency of the recurring charge.",
                        "typeExposed": "Maybe RecurringChargeFrequency",
                        "type": "Maybe RecurringChargeFrequency"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "newDhcpConfiguration",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "NewDhcpConfiguration",
                "locationPad": 6,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ndcKey",
                        "name": "_ndcKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ndcValues",
                        "name": "_ndcValues",
                        "shape": "ValueStringList",
                        "locationName": "Value",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ndcKey",
                        "name": "_ndcKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ndcValues",
                        "name": "_ndcValues",
                        "shape": "ValueStringList",
                        "locationName": "Value",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "stateReason",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "StateReason",
                "locationPad": 8,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "srCode",
                        "name": "_srCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The reason code for the state change.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "srMessage",
                        "name": "_srMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The message for the state change.\n--\n-- 'Server.SpotInstanceTermination': A Spot Instance was terminated due to an\n-- increase in the market price.\n--\n-- 'Server.InternalError': An internal error occurred during instance launch,\n-- resulting in termination.\n--\n-- 'Server.InsufficientInstanceCapacity': There was insufficient instance\n-- capacity to satisfy the launch request.\n--\n-- 'Client.InternalError': A client error caused the instance to terminate on\n-- launch.\n--\n-- 'Client.InstanceInitiatedShutdown': The instance was shut down using the 'shutdown -h' command from the instance.\n--\n-- 'Client.UserInitiatedShutdown': The instance was shut down using the Amazon\n-- EC2 API.\n--\n-- 'Client.VolumeLimitExceeded': The volume limit was exceeded.\n--\n-- 'Client.InvalidSnapshot.NotFound': The specified snapshot was not found.\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "srCode",
                        "name": "_srCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The reason code for the state change.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "srMessage",
                        "name": "_srMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The message for the state change.\n--\n-- 'Server.SpotInstanceTermination': A Spot Instance was terminated due to an\n-- increase in the market price.\n--\n-- 'Server.InternalError': An internal error occurred during instance launch,\n-- resulting in termination.\n--\n-- 'Server.InsufficientInstanceCapacity': There was insufficient instance\n-- capacity to satisfy the launch request.\n--\n-- 'Client.InternalError': A client error caused the instance to terminate on\n-- launch.\n--\n-- 'Client.InstanceInitiatedShutdown': The instance was shut down using the 'shutdown -h' command from the instance.\n--\n-- 'Client.UserInitiatedShutdown': The instance was shut down using the Amazon\n-- EC2 API.\n--\n-- 'Client.VolumeLimitExceeded': The volume limit was exceeded.\n--\n-- 'Client.InvalidSnapshot.NotFound': The specified snapshot was not found.\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "MSEnabled": "enabled",
                    "MSPending": "pending",
                    "MSDisabled": "disabled"
                },
                "valuePad": 9,
                "name": "MonitoringState",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "reservedInstancesId",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "riiReservedInstancesId",
                    "name": "_riiReservedInstancesId",
                    "shape": "String",
                    "locationName": "reservedInstancesId",
                    "documentation": "-- | The ID of the Reserved Instance.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ReservedInstancesId",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riiReservedInstancesId",
                        "name": "_riiReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The ID of the Reserved Instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riiReservedInstancesId",
                        "name": "_riiReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The ID of the Reserved Instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Reachability": "reachability"
                },
                "valuePad": 13,
                "name": "StatusName",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "internetGateway",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "igInternetGatewayId",
                        "name": "_igInternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "-- | The ID of the Internet gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "InternetGateway",
                "locationPad": 18,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "igAttachments",
                        "name": "_igAttachments",
                        "shape": "InternetGatewayAttachmentList",
                        "locationName": "attachmentSet",
                        "documentation": "-- | Any VPCs attached to the Internet gateway.",
                        "typeExposed": "[InternetGatewayAttachment]",
                        "type": "List \"item\" InternetGatewayAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "igTags",
                        "name": "_igTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the Internet gateway.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "igAttachments",
                        "name": "_igAttachments",
                        "shape": "InternetGatewayAttachmentList",
                        "locationName": "attachmentSet",
                        "documentation": "-- | Any VPCs attached to the Internet gateway.",
                        "typeExposed": "[InternetGatewayAttachment]",
                        "type": "List \"item\" InternetGatewayAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "igInternetGatewayId",
                        "name": "_igInternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "-- | The ID of the Internet gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "igTags",
                        "name": "_igTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the Internet gateway.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "IoPerformance": "io-performance",
                    "IoEnabled": "io-enabled"
                },
                "valuePad": 15,
                "name": "VolumeStatusName",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "ProductCodes": "productCodes",
                    "AutoEnableIO": "autoEnableIO"
                },
                "valuePad": 13,
                "name": "VolumeAttributeName",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 16,
                "ctor": "importInstanceTaskDetails",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ImportInstanceTaskDetails",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iitdVolumes",
                        "name": "_iitdVolumes",
                        "shape": "ImportInstanceVolumeDetailSet",
                        "locationName": "volumes",
                        "documentation": null,
                        "typeExposed": "[ImportInstanceVolumeDetailItem]",
                        "type": "List \"item\" ImportInstanceVolumeDetailItem"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iitdInstanceId",
                        "name": "_iitdInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iitdPlatform",
                        "name": "_iitdPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "-- | The instance operating system.",
                        "typeExposed": "Maybe PlatformValues",
                        "type": "Maybe PlatformValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iitdDescription",
                        "name": "_iitdDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iitdDescription",
                        "name": "_iitdDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iitdInstanceId",
                        "name": "_iitdInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iitdPlatform",
                        "name": "_iitdPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "-- | The instance operating system.",
                        "typeExposed": "Maybe PlatformValues",
                        "type": "Maybe PlatformValues"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iitdVolumes",
                        "name": "_iitdVolumes",
                        "shape": "ImportInstanceVolumeDetailSet",
                        "locationName": "volumes",
                        "documentation": null,
                        "typeExposed": "[ImportInstanceVolumeDetailItem]",
                        "type": "List \"item\" ImportInstanceVolumeDetailItem"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 12,
                "ctor": "placementGroup",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PlacementGroup",
                "locationPad": 10,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pgGroupName",
                        "name": "_pgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the placement group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pgStrategy",
                        "name": "_pgStrategy",
                        "shape": "PlacementStrategy",
                        "locationName": "strategy",
                        "documentation": "-- | The placement strategy.",
                        "typeExposed": "Maybe PlacementStrategy",
                        "type": "Maybe PlacementStrategy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pgState",
                        "name": "_pgState",
                        "shape": "PlacementGroupState",
                        "locationName": "state",
                        "documentation": "-- | The state of the placement group.",
                        "typeExposed": "Maybe PlacementGroupState",
                        "type": "Maybe PlacementGroupState"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pgGroupName",
                        "name": "_pgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the placement group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pgState",
                        "name": "_pgState",
                        "shape": "PlacementGroupState",
                        "locationName": "state",
                        "documentation": "-- | The state of the placement group.",
                        "typeExposed": "Maybe PlacementGroupState",
                        "type": "Maybe PlacementGroupState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pgStrategy",
                        "name": "_pgStrategy",
                        "shape": "PlacementStrategy",
                        "locationName": "strategy",
                        "documentation": "-- | The placement strategy.",
                        "typeExposed": "Maybe PlacementStrategy",
                        "type": "Maybe PlacementStrategy"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "productCode",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ProductCode",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pcProductCodeId",
                        "name": "_pcProductCodeId",
                        "shape": "String",
                        "locationName": "productCode",
                        "documentation": "-- | The product code.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pcProductCodeType",
                        "name": "_pcProductCodeType",
                        "shape": "ProductCodeValues",
                        "locationName": "type",
                        "documentation": "-- | The type of product code.",
                        "typeExposed": "Maybe ProductCodeValues",
                        "type": "Maybe ProductCodeValues"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pcProductCodeId",
                        "name": "_pcProductCodeId",
                        "shape": "String",
                        "locationName": "productCode",
                        "documentation": "-- | The product code.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pcProductCodeType",
                        "name": "_pcProductCodeType",
                        "shape": "ProductCodeValues",
                        "locationName": "type",
                        "documentation": "-- | The type of product code.",
                        "typeExposed": "Maybe ProductCodeValues",
                        "type": "Maybe ProductCodeValues"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "ListingStatusClosed": "closed",
                    "ListingStatusPending": "pending",
                    "ListingStatusActive": "active",
                    "ListingStatusCancelled": "cancelled"
                },
                "valuePad": 10,
                "name": "ListingStatus",
                "type": "nullary",
                "branchPad": 22
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "ipRange",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": true,
                    "lens": "irCidrIp",
                    "name": "_irCidrIp",
                    "shape": "String",
                    "locationName": "cidrIp",
                    "documentation": "-- | The CIDR range. You can either specify a CIDR range or a source security\n-- group, not both.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "irCidrIp",
                        "name": "_irCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "-- | The CIDR range. You can either specify a CIDR range or a source security\n-- group, not both.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "IpRange",
                "locationPad": 0,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "irCidrIp",
                        "name": "_irCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "-- | The CIDR range. You can either specify a CIDR range or a source security\n-- group, not both.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "VSISInsufficientData": "insufficient-data",
                    "VSISImpaired": "impaired",
                    "VSISOk": "ok"
                },
                "valuePad": 18,
                "name": "VolumeStatusInfoStatus",
                "type": "nullary",
                "branchPad": 20
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "accountAttributeValue",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "aavAttributeValue",
                    "name": "_aavAttributeValue",
                    "shape": "String",
                    "locationName": "attributeValue",
                    "documentation": "-- | The value of the attribute.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "AccountAttributeValue",
                "locationPad": 0,
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aavAttributeValue",
                        "name": "_aavAttributeValue",
                        "shape": "String",
                        "locationName": "attributeValue",
                        "documentation": "-- | The value of the attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aavAttributeValue",
                        "name": "_aavAttributeValue",
                        "shape": "String",
                        "locationName": "attributeValue",
                        "documentation": "-- | The value of the attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "RIPDLinuxUNIX": "Linux/UNIX",
                    "RIPDLinuxUNIXAmazonVPC": "Linux/UNIX (Amazon VPC)",
                    "RIPDWindows": "Windows",
                    "RIPDWindowsAmazonVPC": "Windows (Amazon VPC)"
                },
                "valuePad": 24,
                "name": "RIProductDescription",
                "type": "nullary",
                "branchPad": 22
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 31,
                "ctor": "reservedInstancesOffering",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ReservedInstancesOffering",
                "locationPad": 28,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioReservedInstancesOfferingId",
                        "name": "_rioReservedInstancesOfferingId",
                        "shape": "String",
                        "locationName": "reservedInstancesOfferingId",
                        "documentation": "-- | The ID of the Reserved Instance offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioInstanceType",
                        "name": "_rioInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type on which the Reserved Instance can be used.",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioAvailabilityZone",
                        "name": "_rioAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone in which the Reserved Instance can be used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioDuration",
                        "name": "_rioDuration",
                        "shape": "Long",
                        "locationName": "duration",
                        "documentation": "-- | The duration of the Reserved Instance, in seconds.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioUsagePrice",
                        "name": "_rioUsagePrice",
                        "shape": "Float",
                        "locationName": "usagePrice",
                        "documentation": "-- | The usage price of the Reserved Instance, per hour.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioFixedPrice",
                        "name": "_rioFixedPrice",
                        "shape": "Float",
                        "locationName": "fixedPrice",
                        "documentation": "-- | The purchase price of the Reserved Instance.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioProductDescription",
                        "name": "_rioProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "-- | The Reserved Instance description.",
                        "typeExposed": "Maybe RIProductDescription",
                        "type": "Maybe RIProductDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioInstanceTenancy",
                        "name": "_rioInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "-- | The tenancy of the reserved instance.",
                        "typeExposed": "Maybe Tenancy",
                        "type": "Maybe Tenancy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioCurrencyCode",
                        "name": "_rioCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "-- | The currency of the Reserved Instance offering you are purchasing. It's\n-- specified using ISO 4217 standard currency codes. At this time, the only\n-- supported currency is 'USD'.",
                        "typeExposed": "Maybe CurrencyCodeValues",
                        "type": "Maybe CurrencyCodeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioOfferingType",
                        "name": "_rioOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "-- | The Reserved Instance offering type.",
                        "typeExposed": "Maybe OfferingTypeValues",
                        "type": "Maybe OfferingTypeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rioRecurringCharges",
                        "name": "_rioRecurringCharges",
                        "shape": "RecurringChargesList",
                        "locationName": "recurringCharges",
                        "documentation": "-- | The recurring charge tag assigned to the resource.",
                        "typeExposed": "[RecurringCharge]",
                        "type": "List \"item\" RecurringCharge"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioMarketplace",
                        "name": "_rioMarketplace",
                        "shape": "Boolean",
                        "locationName": "marketplace",
                        "documentation": "-- | Indicates whether the offering is available through the Reserved Instance\n-- Marketplace (resale) or AWS. If it's a Reserved Instance Marketplace\n-- offering, this is 'true'.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rioPricingDetails",
                        "name": "_rioPricingDetails",
                        "shape": "PricingDetailsList",
                        "locationName": "pricingDetailsSet",
                        "documentation": "-- | The pricing details of the Reserved Instance offering.",
                        "typeExposed": "[PricingDetail]",
                        "type": "List \"item\" PricingDetail"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioAvailabilityZone",
                        "name": "_rioAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone in which the Reserved Instance can be used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioCurrencyCode",
                        "name": "_rioCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "-- | The currency of the Reserved Instance offering you are purchasing. It's\n-- specified using ISO 4217 standard currency codes. At this time, the only\n-- supported currency is 'USD'.",
                        "typeExposed": "Maybe CurrencyCodeValues",
                        "type": "Maybe CurrencyCodeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioDuration",
                        "name": "_rioDuration",
                        "shape": "Long",
                        "locationName": "duration",
                        "documentation": "-- | The duration of the Reserved Instance, in seconds.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioFixedPrice",
                        "name": "_rioFixedPrice",
                        "shape": "Float",
                        "locationName": "fixedPrice",
                        "documentation": "-- | The purchase price of the Reserved Instance.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioInstanceTenancy",
                        "name": "_rioInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "-- | The tenancy of the reserved instance.",
                        "typeExposed": "Maybe Tenancy",
                        "type": "Maybe Tenancy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioInstanceType",
                        "name": "_rioInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type on which the Reserved Instance can be used.",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioMarketplace",
                        "name": "_rioMarketplace",
                        "shape": "Boolean",
                        "locationName": "marketplace",
                        "documentation": "-- | Indicates whether the offering is available through the Reserved Instance\n-- Marketplace (resale) or AWS. If it's a Reserved Instance Marketplace\n-- offering, this is 'true'.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioOfferingType",
                        "name": "_rioOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "-- | The Reserved Instance offering type.",
                        "typeExposed": "Maybe OfferingTypeValues",
                        "type": "Maybe OfferingTypeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rioPricingDetails",
                        "name": "_rioPricingDetails",
                        "shape": "PricingDetailsList",
                        "locationName": "pricingDetailsSet",
                        "documentation": "-- | The pricing details of the Reserved Instance offering.",
                        "typeExposed": "[PricingDetail]",
                        "type": "List \"item\" PricingDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioProductDescription",
                        "name": "_rioProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "-- | The Reserved Instance description.",
                        "typeExposed": "Maybe RIProductDescription",
                        "type": "Maybe RIProductDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rioRecurringCharges",
                        "name": "_rioRecurringCharges",
                        "shape": "RecurringChargesList",
                        "locationName": "recurringCharges",
                        "documentation": "-- | The recurring charge tag assigned to the resource.",
                        "typeExposed": "[RecurringCharge]",
                        "type": "List \"item\" RecurringCharge"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioReservedInstancesOfferingId",
                        "name": "_rioReservedInstancesOfferingId",
                        "shape": "String",
                        "locationName": "reservedInstancesOfferingId",
                        "documentation": "-- | The ID of the Reserved Instance offering.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rioUsagePrice",
                        "name": "_rioUsagePrice",
                        "shape": "Float",
                        "locationName": "usagePrice",
                        "documentation": "-- | The usage price of the Reserved Instance, per hour.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 23,
                "ctor": "reservedInstances",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "ReservedInstances",
                "locationPad": 20,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1ReservedInstancesId",
                        "name": "_ri1ReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The ID of the Reserved Instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1InstanceType",
                        "name": "_ri1InstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type on which the Reserved Instance can be used.",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1AvailabilityZone",
                        "name": "_ri1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone in which the Reserved Instance can be used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1Start",
                        "name": "_ri1Start",
                        "shape": "DateTime",
                        "locationName": "start",
                        "documentation": "-- | The date and time the Reserved Instance started.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1End",
                        "name": "_ri1End",
                        "shape": "DateTime",
                        "locationName": "end",
                        "documentation": "-- | The time when the Reserved Instance expires.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1Duration",
                        "name": "_ri1Duration",
                        "shape": "Long",
                        "locationName": "duration",
                        "documentation": "-- | The duration of the Reserved Instance, in seconds.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1UsagePrice",
                        "name": "_ri1UsagePrice",
                        "shape": "Float",
                        "locationName": "usagePrice",
                        "documentation": "-- | The usage price of the Reserved Instance, per hour.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1FixedPrice",
                        "name": "_ri1FixedPrice",
                        "shape": "Float",
                        "locationName": "fixedPrice",
                        "documentation": "-- | The purchase price of the Reserved Instance.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1InstanceCount",
                        "name": "_ri1InstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "-- | The number of Reserved Instances purchased.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1ProductDescription",
                        "name": "_ri1ProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "-- | The Reserved Instance description.",
                        "typeExposed": "Maybe RIProductDescription",
                        "type": "Maybe RIProductDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1State",
                        "name": "_ri1State",
                        "shape": "ReservedInstanceState",
                        "locationName": "state",
                        "documentation": "-- | The state of the Reserved Instance purchase.",
                        "typeExposed": "Maybe ReservedInstanceState",
                        "type": "Maybe ReservedInstanceState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ri1Tags",
                        "name": "_ri1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the resource.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1InstanceTenancy",
                        "name": "_ri1InstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "-- | The tenancy of the reserved instance.",
                        "typeExposed": "Maybe Tenancy",
                        "type": "Maybe Tenancy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1CurrencyCode",
                        "name": "_ri1CurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "-- | The currency of the Reserved Instance. It's specified using ISO 4217 standard\n-- currency codes. At this time, the only supported currency is 'USD'.",
                        "typeExposed": "Maybe CurrencyCodeValues",
                        "type": "Maybe CurrencyCodeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1OfferingType",
                        "name": "_ri1OfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "-- | The Reserved Instance offering type.",
                        "typeExposed": "Maybe OfferingTypeValues",
                        "type": "Maybe OfferingTypeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ri1RecurringCharges",
                        "name": "_ri1RecurringCharges",
                        "shape": "RecurringChargesList",
                        "locationName": "recurringCharges",
                        "documentation": "-- | The recurring charge tag assigned to the resource.",
                        "typeExposed": "[RecurringCharge]",
                        "type": "List \"item\" RecurringCharge"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1AvailabilityZone",
                        "name": "_ri1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone in which the Reserved Instance can be used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1CurrencyCode",
                        "name": "_ri1CurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "-- | The currency of the Reserved Instance. It's specified using ISO 4217 standard\n-- currency codes. At this time, the only supported currency is 'USD'.",
                        "typeExposed": "Maybe CurrencyCodeValues",
                        "type": "Maybe CurrencyCodeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1Duration",
                        "name": "_ri1Duration",
                        "shape": "Long",
                        "locationName": "duration",
                        "documentation": "-- | The duration of the Reserved Instance, in seconds.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1End",
                        "name": "_ri1End",
                        "shape": "DateTime",
                        "locationName": "end",
                        "documentation": "-- | The time when the Reserved Instance expires.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1FixedPrice",
                        "name": "_ri1FixedPrice",
                        "shape": "Float",
                        "locationName": "fixedPrice",
                        "documentation": "-- | The purchase price of the Reserved Instance.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1InstanceCount",
                        "name": "_ri1InstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "-- | The number of Reserved Instances purchased.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1InstanceTenancy",
                        "name": "_ri1InstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "-- | The tenancy of the reserved instance.",
                        "typeExposed": "Maybe Tenancy",
                        "type": "Maybe Tenancy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1InstanceType",
                        "name": "_ri1InstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type on which the Reserved Instance can be used.",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1OfferingType",
                        "name": "_ri1OfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "-- | The Reserved Instance offering type.",
                        "typeExposed": "Maybe OfferingTypeValues",
                        "type": "Maybe OfferingTypeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1ProductDescription",
                        "name": "_ri1ProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "-- | The Reserved Instance description.",
                        "typeExposed": "Maybe RIProductDescription",
                        "type": "Maybe RIProductDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ri1RecurringCharges",
                        "name": "_ri1RecurringCharges",
                        "shape": "RecurringChargesList",
                        "locationName": "recurringCharges",
                        "documentation": "-- | The recurring charge tag assigned to the resource.",
                        "typeExposed": "[RecurringCharge]",
                        "type": "List \"item\" RecurringCharge"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1ReservedInstancesId",
                        "name": "_ri1ReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The ID of the Reserved Instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1Start",
                        "name": "_ri1Start",
                        "shape": "DateTime",
                        "locationName": "start",
                        "documentation": "-- | The date and time the Reserved Instance started.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1State",
                        "name": "_ri1State",
                        "shape": "ReservedInstanceState",
                        "locationName": "state",
                        "documentation": "-- | The state of the Reserved Instance purchase.",
                        "typeExposed": "Maybe ReservedInstanceState",
                        "type": "Maybe ReservedInstanceState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ri1Tags",
                        "name": "_ri1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the resource.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1UsagePrice",
                        "name": "_ri1UsagePrice",
                        "shape": "Float",
                        "locationName": "usagePrice",
                        "documentation": "-- | The usage price of the Reserved Instance, per hour.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "DSSInactive": "Inactive",
                    "DSSActive": "Active"
                },
                "valuePad": 9,
                "name": "DatafeedSubscriptionState",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "ETSCompleted": "completed",
                    "ETSCancelled": "cancelled",
                    "ETSCancelling": "cancelling",
                    "ETSActive": "active"
                },
                "valuePad": 11,
                "name": "ExportTaskState",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Marketplace": "marketplace",
                    "Devpay": "devpay"
                },
                "valuePad": 12,
                "name": "ProductCodeValues",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 31,
                "ctor": "vpnConnection",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vcVpnConnectionId",
                        "name": "_vcVpnConnectionId",
                        "shape": "String",
                        "locationName": "vpnConnectionId",
                        "documentation": "-- | The ID of the VPN connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vcState",
                        "name": "_vcState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "-- | The current state of the VPN connection.",
                        "typeExposed": "VpnState",
                        "type": "VpnState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vcCustomerGatewayConfiguration",
                        "name": "_vcCustomerGatewayConfiguration",
                        "shape": "String",
                        "locationName": "customerGatewayConfiguration",
                        "documentation": "-- | The configuration information for the VPN connection's customer gateway (in\n-- the native XML format). This element is always present in the 'CreateVpnConnection' response; however, it's present in the 'DescribeVpnConnections' response only\n-- if the VPN connection is in the 'pending' or 'available' state.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vcType",
                        "name": "_vcType",
                        "shape": "GatewayType",
                        "locationName": "type",
                        "documentation": "-- | The type of VPN connection.",
                        "typeExposed": "GatewayType",
                        "type": "GatewayType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vcCustomerGatewayId",
                        "name": "_vcCustomerGatewayId",
                        "shape": "String",
                        "locationName": "customerGatewayId",
                        "documentation": "-- | The ID of the customer gateway at your end of the VPN connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "VpnConnection",
                "locationPad": 29,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vcVpnGatewayId",
                        "name": "_vcVpnGatewayId",
                        "shape": "String",
                        "locationName": "vpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway at the AWS side of the VPN connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vcTags",
                        "name": "_vcTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the VPN connection.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vcVgwTelemetry",
                        "name": "_vcVgwTelemetry",
                        "shape": "VgwTelemetryList",
                        "locationName": "vgwTelemetry",
                        "documentation": "-- | Information about the VPN tunnel.",
                        "typeExposed": "[VgwTelemetry]",
                        "type": "List \"item\" VgwTelemetry"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vcOptions",
                        "name": "_vcOptions",
                        "shape": "VpnConnectionOptions",
                        "locationName": "options",
                        "documentation": "-- | The VPN connection options.",
                        "typeExposed": "Maybe VpnConnectionOptions",
                        "type": "Maybe VpnConnectionOptions"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vcRoutes",
                        "name": "_vcRoutes",
                        "shape": "VpnStaticRouteList",
                        "locationName": "routes",
                        "documentation": "-- | The static routes associated with the VPN connection.",
                        "typeExposed": "[VpnStaticRoute]",
                        "type": "List \"item\" VpnStaticRoute"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vcCustomerGatewayConfiguration",
                        "name": "_vcCustomerGatewayConfiguration",
                        "shape": "String",
                        "locationName": "customerGatewayConfiguration",
                        "documentation": "-- | The configuration information for the VPN connection's customer gateway (in\n-- the native XML format). This element is always present in the 'CreateVpnConnection' response; however, it's present in the 'DescribeVpnConnections' response only\n-- if the VPN connection is in the 'pending' or 'available' state.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vcCustomerGatewayId",
                        "name": "_vcCustomerGatewayId",
                        "shape": "String",
                        "locationName": "customerGatewayId",
                        "documentation": "-- | The ID of the customer gateway at your end of the VPN connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vcOptions",
                        "name": "_vcOptions",
                        "shape": "VpnConnectionOptions",
                        "locationName": "options",
                        "documentation": "-- | The VPN connection options.",
                        "typeExposed": "Maybe VpnConnectionOptions",
                        "type": "Maybe VpnConnectionOptions"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vcRoutes",
                        "name": "_vcRoutes",
                        "shape": "VpnStaticRouteList",
                        "locationName": "routes",
                        "documentation": "-- | The static routes associated with the VPN connection.",
                        "typeExposed": "[VpnStaticRoute]",
                        "type": "List \"item\" VpnStaticRoute"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vcState",
                        "name": "_vcState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "-- | The current state of the VPN connection.",
                        "typeExposed": "VpnState",
                        "type": "VpnState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vcTags",
                        "name": "_vcTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the VPN connection.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vcType",
                        "name": "_vcType",
                        "shape": "GatewayType",
                        "locationName": "type",
                        "documentation": "-- | The type of VPN connection.",
                        "typeExposed": "GatewayType",
                        "type": "GatewayType"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vcVgwTelemetry",
                        "name": "_vcVgwTelemetry",
                        "shape": "VgwTelemetryList",
                        "locationName": "vgwTelemetry",
                        "documentation": "-- | Information about the VPN tunnel.",
                        "typeExposed": "[VgwTelemetry]",
                        "type": "List \"item\" VgwTelemetry"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vcVpnConnectionId",
                        "name": "_vcVpnConnectionId",
                        "shape": "String",
                        "locationName": "vpnConnectionId",
                        "documentation": "-- | The ID of the VPN connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vcVpnGatewayId",
                        "name": "_vcVpnGatewayId",
                        "shape": "String",
                        "locationName": "vpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway at the AWS side of the VPN connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 7,
                "ctor": "instanceState",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "isCode",
                        "name": "_isCode",
                        "shape": "Integer",
                        "locationName": "code",
                        "documentation": "-- | The low byte represents the state. The high byte is an opaque internal value\n-- and should be ignored.\n--\n-- '0' : 'pending'\n--\n-- '16' : 'running'\n--\n-- '32' : 'shutting-down'\n--\n-- '48' : 'terminated'\n--\n-- '64' : 'stopping'\n--\n-- '80' : 'stopped'\n--\n--",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "isName",
                        "name": "_isName",
                        "shape": "InstanceStateName",
                        "locationName": "name",
                        "documentation": "-- | The current state of the instance.",
                        "typeExposed": "InstanceStateName",
                        "type": "InstanceStateName"
                    }
                ],
                "contentPad": 0,
                "name": "InstanceState",
                "locationPad": 5,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "isCode",
                        "name": "_isCode",
                        "shape": "Integer",
                        "locationName": "code",
                        "documentation": "-- | The low byte represents the state. The high byte is an opaque internal value\n-- and should be ignored.\n--\n-- '0' : 'pending'\n--\n-- '16' : 'running'\n--\n-- '32' : 'shutting-down'\n--\n-- '48' : 'terminated'\n--\n-- '64' : 'stopping'\n--\n-- '80' : 'stopped'\n--\n--",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "isName",
                        "name": "_isName",
                        "shape": "InstanceStateName",
                        "locationName": "name",
                        "documentation": "-- | The current state of the instance.",
                        "typeExposed": "InstanceStateName",
                        "type": "InstanceStateName"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "placement",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "Placement",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pAvailabilityZone",
                        "name": "_pAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pGroupName",
                        "name": "_pGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the placement group the instance is in (for cluster compute\n-- instances).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pTenancy",
                        "name": "_pTenancy",
                        "shape": "Tenancy",
                        "locationName": "tenancy",
                        "documentation": "-- | The tenancy of the instance (if the instance is running in a VPC). An\n-- instance with a tenancy of 'dedicated' runs on single-tenant hardware.",
                        "typeExposed": "Maybe Tenancy",
                        "type": "Maybe Tenancy"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pAvailabilityZone",
                        "name": "_pAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pGroupName",
                        "name": "_pGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the placement group the instance is in (for cluster compute\n-- instances).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pTenancy",
                        "name": "_pTenancy",
                        "shape": "Tenancy",
                        "locationName": "tenancy",
                        "documentation": "-- | The tenancy of the instance (if the instance is running in a VPC). An\n-- instance with a tenancy of 'dedicated' runs on single-tenant hardware.",
                        "typeExposed": "Maybe Tenancy",
                        "type": "Maybe Tenancy"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "InstanceReboot": "instance-reboot",
                    "InstanceRetirement": "instance-retirement",
                    "InstanceStop": "instance-stop",
                    "SystemReboot": "system-reboot",
                    "SystemMaintenance": "system-maintenance"
                },
                "valuePad": 20,
                "name": "EventCode",
                "type": "nullary",
                "branchPad": 18
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Persistent": "persistent",
                    "OneTime": "one-time"
                },
                "valuePad": 11,
                "name": "SpotInstanceType",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 27,
                "ctor": "vpcPeeringConnection",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VpcPeeringConnection",
                "locationPad": 23,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpc1AccepterVpcInfo",
                        "name": "_vpc1AccepterVpcInfo",
                        "shape": "VpcPeeringConnectionVpcInfo",
                        "locationName": "accepterVpcInfo",
                        "documentation": "-- | The information of the peer VPC.",
                        "typeExposed": "Maybe VpcPeeringConnectionVpcInfo",
                        "type": "Maybe VpcPeeringConnectionVpcInfo"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpc1ExpirationTime",
                        "name": "_vpc1ExpirationTime",
                        "shape": "DateTime",
                        "locationName": "expirationTime",
                        "documentation": "-- | The time that an unaccepted VPC peering connection will expire.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpc1RequesterVpcInfo",
                        "name": "_vpc1RequesterVpcInfo",
                        "shape": "VpcPeeringConnectionVpcInfo",
                        "locationName": "requesterVpcInfo",
                        "documentation": "-- | The information of the requester VPC.",
                        "typeExposed": "Maybe VpcPeeringConnectionVpcInfo",
                        "type": "Maybe VpcPeeringConnectionVpcInfo"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpc1Status",
                        "name": "_vpc1Status",
                        "shape": "VpcPeeringConnectionStateReason",
                        "locationName": "status",
                        "documentation": "-- | The status of the VPC peering connection.",
                        "typeExposed": "Maybe VpcPeeringConnectionStateReason",
                        "type": "Maybe VpcPeeringConnectionStateReason"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vpc1Tags",
                        "name": "_vpc1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the resource.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpc1VpcPeeringConnectionId",
                        "name": "_vpc1VpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of the VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpc1AccepterVpcInfo",
                        "name": "_vpc1AccepterVpcInfo",
                        "shape": "VpcPeeringConnectionVpcInfo",
                        "locationName": "accepterVpcInfo",
                        "documentation": "-- | The information of the peer VPC.",
                        "typeExposed": "Maybe VpcPeeringConnectionVpcInfo",
                        "type": "Maybe VpcPeeringConnectionVpcInfo"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpc1ExpirationTime",
                        "name": "_vpc1ExpirationTime",
                        "shape": "DateTime",
                        "locationName": "expirationTime",
                        "documentation": "-- | The time that an unaccepted VPC peering connection will expire.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpc1RequesterVpcInfo",
                        "name": "_vpc1RequesterVpcInfo",
                        "shape": "VpcPeeringConnectionVpcInfo",
                        "locationName": "requesterVpcInfo",
                        "documentation": "-- | The information of the requester VPC.",
                        "typeExposed": "Maybe VpcPeeringConnectionVpcInfo",
                        "type": "Maybe VpcPeeringConnectionVpcInfo"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpc1Status",
                        "name": "_vpc1Status",
                        "shape": "VpcPeeringConnectionStateReason",
                        "locationName": "status",
                        "documentation": "-- | The status of the VPC peering connection.",
                        "typeExposed": "Maybe VpcPeeringConnectionStateReason",
                        "type": "Maybe VpcPeeringConnectionStateReason"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vpc1Tags",
                        "name": "_vpc1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the resource.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vpc1VpcPeeringConnectionId",
                        "name": "_vpc1VpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of the VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "s3Storage",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "S3Storage",
                "locationPad": 22,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ssBucket",
                        "name": "_ssBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "-- | The bucket in which to store the AMI. You can specify a bucket that you\n-- already own or a new bucket that Amazon EC2 creates on your behalf. If you\n-- specify a bucket that belongs to someone else, Amazon EC2 returns an error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ssPrefix",
                        "name": "_ssPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "-- | The beginning of the file name of the AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ssAWSAccessKeyId",
                        "name": "_ssAWSAccessKeyId",
                        "shape": "String",
                        "locationName": "AWSAccessKeyId",
                        "documentation": "-- | The access key ID of the owner of the bucket. Before you specify a value for\n-- your access key ID, review and follow the guidance in \u003chttp://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html Best Practices forManaging AWS Access Keys\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ssUploadPolicy",
                        "name": "_ssUploadPolicy",
                        "shape": "Blob",
                        "locationName": "uploadPolicy",
                        "documentation": "-- | A Base64-encoded Amazon S3 upload policy that gives Amazon EC2 permission to\n-- upload items into Amazon S3 on your behalf.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ssUploadPolicySignature",
                        "name": "_ssUploadPolicySignature",
                        "shape": "String",
                        "locationName": "uploadPolicySignature",
                        "documentation": "-- | The signature of the Base64 encoded JSON document.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ssAWSAccessKeyId",
                        "name": "_ssAWSAccessKeyId",
                        "shape": "String",
                        "locationName": "AWSAccessKeyId",
                        "documentation": "-- | The access key ID of the owner of the bucket. Before you specify a value for\n-- your access key ID, review and follow the guidance in \u003chttp://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html Best Practices forManaging AWS Access Keys\u003e.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ssBucket",
                        "name": "_ssBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "-- | The bucket in which to store the AMI. You can specify a bucket that you\n-- already own or a new bucket that Amazon EC2 creates on your behalf. If you\n-- specify a bucket that belongs to someone else, Amazon EC2 returns an error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ssPrefix",
                        "name": "_ssPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "-- | The beginning of the file name of the AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ssUploadPolicy",
                        "name": "_ssUploadPolicy",
                        "shape": "Blob",
                        "locationName": "uploadPolicy",
                        "documentation": "-- | A Base64-encoded Amazon S3 upload policy that gives Amazon EC2 permission to\n-- upload items into Amazon S3 on your behalf.",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ssUploadPolicySignature",
                        "name": "_ssUploadPolicySignature",
                        "shape": "String",
                        "locationName": "uploadPolicySignature",
                        "documentation": "-- | The signature of the Base64 encoded JSON document.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 21,
                "ctor": "vgwTelemetry",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VgwTelemetry",
                "locationPad": 19,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vtOutsideIpAddress",
                        "name": "_vtOutsideIpAddress",
                        "shape": "String",
                        "locationName": "outsideIpAddress",
                        "documentation": "-- | The Internet-routable IP address of the virtual private gateway's outside\n-- interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vtStatus",
                        "name": "_vtStatus",
                        "shape": "TelemetryStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of the VPN tunnel.",
                        "typeExposed": "Maybe TelemetryStatus",
                        "type": "Maybe TelemetryStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vtLastStatusChange",
                        "name": "_vtLastStatusChange",
                        "shape": "DateTime",
                        "locationName": "lastStatusChange",
                        "documentation": "-- | The date and time of the last change in status.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vtStatusMessage",
                        "name": "_vtStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | If an error occurs, a description of the error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vtAcceptedRouteCount",
                        "name": "_vtAcceptedRouteCount",
                        "shape": "Integer",
                        "locationName": "acceptedRouteCount",
                        "documentation": "-- | The number of accepted routes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vtAcceptedRouteCount",
                        "name": "_vtAcceptedRouteCount",
                        "shape": "Integer",
                        "locationName": "acceptedRouteCount",
                        "documentation": "-- | The number of accepted routes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vtLastStatusChange",
                        "name": "_vtLastStatusChange",
                        "shape": "DateTime",
                        "locationName": "lastStatusChange",
                        "documentation": "-- | The date and time of the last change in status.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vtOutsideIpAddress",
                        "name": "_vtOutsideIpAddress",
                        "shape": "String",
                        "locationName": "outsideIpAddress",
                        "documentation": "-- | The Internet-routable IP address of the virtual private gateway's outside\n-- interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vtStatus",
                        "name": "_vtStatus",
                        "shape": "TelemetryStatus",
                        "locationName": "status",
                        "documentation": "-- | The status of the VPN tunnel.",
                        "typeExposed": "Maybe TelemetryStatus",
                        "type": "Maybe TelemetryStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vtStatusMessage",
                        "name": "_vtStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | If an error occurs, a description of the error.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "vpnStaticRoute",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VpnStaticRoute",
                "locationPad": 21,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsrDestinationCidrBlock",
                        "name": "_vsrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "-- | The CIDR block associated with the local subnet of the customer data center.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsrSource",
                        "name": "_vsrSource",
                        "shape": "VpnStaticRouteSource",
                        "locationName": "source",
                        "documentation": "-- | Indicates how the routes were provided.",
                        "typeExposed": "Maybe VpnStaticRouteSource",
                        "type": "Maybe VpnStaticRouteSource"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsrState",
                        "name": "_vsrState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "-- | The current state of the static route.",
                        "typeExposed": "Maybe VpnState",
                        "type": "Maybe VpnState"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsrDestinationCidrBlock",
                        "name": "_vsrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "-- | The CIDR block associated with the local subnet of the customer data center.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsrSource",
                        "name": "_vsrSource",
                        "shape": "VpnStaticRouteSource",
                        "locationName": "source",
                        "documentation": "-- | Indicates how the routes were provided.",
                        "typeExposed": "Maybe VpnStaticRouteSource",
                        "type": "Maybe VpnStaticRouteSource"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsrState",
                        "name": "_vsrState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "-- | The current state of the static route.",
                        "typeExposed": "Maybe VpnState",
                        "type": "Maybe VpnState"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "ISNStopped": "stopped",
                    "ISNPending": "pending",
                    "ISNStopping": "stopping",
                    "ISNShuttingDown": "shutting-down",
                    "ISNRunning": "running",
                    "ISNTerminated": "terminated"
                },
                "valuePad": 14,
                "name": "InstanceStateName",
                "type": "nullary",
                "branchPad": 15
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "instance'",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1InstanceId",
                        "name": "_i1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1ImageId",
                        "name": "_i1ImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the AMI used to launch the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1State",
                        "name": "_i1State",
                        "shape": "InstanceState",
                        "locationName": "instanceState",
                        "documentation": "-- | The current state of the instance.",
                        "typeExposed": "InstanceState",
                        "type": "InstanceState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1AmiLaunchIndex",
                        "name": "_i1AmiLaunchIndex",
                        "shape": "Integer",
                        "locationName": "amiLaunchIndex",
                        "documentation": "-- | The AMI launch index, which can be used to find this instance in the launch\n-- group.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1InstanceType",
                        "name": "_i1InstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type.",
                        "typeExposed": "InstanceType",
                        "type": "InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1LaunchTime",
                        "name": "_i1LaunchTime",
                        "shape": "DateTime",
                        "locationName": "launchTime",
                        "documentation": "-- | The time the instance was launched.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1Placement",
                        "name": "_i1Placement",
                        "shape": "Placement",
                        "locationName": "placement",
                        "documentation": "-- | The location where the instance launched.",
                        "typeExposed": "Placement",
                        "type": "Placement"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1Monitoring",
                        "name": "_i1Monitoring",
                        "shape": "Monitoring",
                        "locationName": "monitoring",
                        "documentation": "-- | The monitoring information for the instance.",
                        "typeExposed": "Monitoring",
                        "type": "Monitoring"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1Architecture",
                        "name": "_i1Architecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "-- | The architecture of the image.",
                        "typeExposed": "ArchitectureValues",
                        "type": "ArchitectureValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1RootDeviceType",
                        "name": "_i1RootDeviceType",
                        "shape": "DeviceType",
                        "locationName": "rootDeviceType",
                        "documentation": "-- | The root device type used by the AMI. The AMI can use an Amazon EBS volume or\n-- an instance store volume.",
                        "typeExposed": "DeviceType",
                        "type": "DeviceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1VirtualizationType",
                        "name": "_i1VirtualizationType",
                        "shape": "VirtualizationType",
                        "locationName": "virtualizationType",
                        "documentation": "-- | The virtualization type of the instance.",
                        "typeExposed": "VirtualizationType",
                        "type": "VirtualizationType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1Hypervisor",
                        "name": "_i1Hypervisor",
                        "shape": "HypervisorType",
                        "locationName": "hypervisor",
                        "documentation": "-- | The hypervisor type of the instance.",
                        "typeExposed": "HypervisorType",
                        "type": "HypervisorType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1EbsOptimized",
                        "name": "_i1EbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Indicates whether the instance is optimized for EBS I/O. This optimization\n-- provides dedicated throughput to Amazon EBS and an optimized configuration\n-- stack to provide optimal I/O performance. This optimization isn't available\n-- with all instance types. Additional usage charges apply when using an EBS\n-- Optimized instance.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "contentPad": 0,
                "name": "Instance",
                "locationPad": 22,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1PrivateDnsName",
                        "name": "_i1PrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "-- | The private DNS name assigned to the instance. This DNS name can only be used\n-- inside the Amazon EC2 network. This name is not available until the instance\n-- enters the 'running' state.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1PublicDnsName",
                        "name": "_i1PublicDnsName",
                        "shape": "String",
                        "locationName": "dnsName",
                        "documentation": "-- | The public DNS name assigned to the instance. This name is not available\n-- until the instance enters the 'running' state.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1StateTransitionReason",
                        "name": "_i1StateTransitionReason",
                        "shape": "String",
                        "locationName": "reason",
                        "documentation": "-- | The reason for the most recent state transition. This might be an empty\n-- string.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1KeyName",
                        "name": "_i1KeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The name of the key pair, if this instance was launched with an associated\n-- key pair.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "i1ProductCodes",
                        "name": "_i1ProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | The product codes attached to this instance.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1KernelId",
                        "name": "_i1KernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "-- | The kernel associated with this instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1RamdiskId",
                        "name": "_i1RamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "-- | The RAM disk associated with this instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1Platform",
                        "name": "_i1Platform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "-- | The value is 'Windows' for Windows instances; otherwise blank.",
                        "typeExposed": "Maybe PlatformValues",
                        "type": "Maybe PlatformValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1SubnetId",
                        "name": "_i1SubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet in which the instance is running.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1VpcId",
                        "name": "_i1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC in which the instance is running.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1PrivateIpAddress",
                        "name": "_i1PrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP address assigned to the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1PublicIpAddress",
                        "name": "_i1PublicIpAddress",
                        "shape": "String",
                        "locationName": "ipAddress",
                        "documentation": "-- | The public IP address assigned to the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1StateReason",
                        "name": "_i1StateReason",
                        "shape": "StateReason",
                        "locationName": "stateReason",
                        "documentation": "-- | The reason for the most recent state transition.",
                        "typeExposed": "Maybe StateReason",
                        "type": "Maybe StateReason"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1RootDeviceName",
                        "name": "_i1RootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "-- | The root device name (for example, '/dev/sda1').",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "i1BlockDeviceMappings",
                        "name": "_i1BlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | Any block device mapping entries for the instance.",
                        "typeExposed": "[InstanceBlockDeviceMapping]",
                        "type": "List \"item\" InstanceBlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1InstanceLifecycle",
                        "name": "_i1InstanceLifecycle",
                        "shape": "InstanceLifecycleType",
                        "locationName": "instanceLifecycle",
                        "documentation": "-- | Indicates whether this is a Spot Instance.",
                        "typeExposed": "Maybe InstanceLifecycleType",
                        "type": "Maybe InstanceLifecycleType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1SpotInstanceRequestId",
                        "name": "_i1SpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "-- | The ID of the Spot Instance request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1ClientToken",
                        "name": "_i1ClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | The idempotency token you provided when you launched the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "i1Tags",
                        "name": "_i1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the instance.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "i1SecurityGroups",
                        "name": "_i1SecurityGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | One or more security groups for the instance.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1SourceDestCheck",
                        "name": "_i1SourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Specifies whether to enable an instance launched in a VPC to perform NAT.\n-- This controls whether source/destination checking is enabled on the instance.\n-- A value of 'true' means checking is enabled, and 'false' means checking is\n-- disabled. The value must be 'false' for the instance to perform NAT. For more\n-- information, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html NAT Instances\u003e in the /Amazon Virtual Private Cloud User Guide/.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "i1NetworkInterfaces",
                        "name": "_i1NetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "-- | [EC2-VPC] One or more network interfaces for the instance.",
                        "typeExposed": "[InstanceNetworkInterface]",
                        "type": "List \"item\" InstanceNetworkInterface"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1IamInstanceProfile",
                        "name": "_i1IamInstanceProfile",
                        "shape": "IamInstanceProfile",
                        "locationName": "iamInstanceProfile",
                        "documentation": "-- | The IAM instance profile associated with the instance.",
                        "typeExposed": "Maybe IamInstanceProfile",
                        "type": "Maybe IamInstanceProfile"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1SriovNetSupport",
                        "name": "_i1SriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "-- | Specifies whether enhanced networking is enabled.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1AmiLaunchIndex",
                        "name": "_i1AmiLaunchIndex",
                        "shape": "Integer",
                        "locationName": "amiLaunchIndex",
                        "documentation": "-- | The AMI launch index, which can be used to find this instance in the launch\n-- group.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1Architecture",
                        "name": "_i1Architecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "-- | The architecture of the image.",
                        "typeExposed": "ArchitectureValues",
                        "type": "ArchitectureValues"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "i1BlockDeviceMappings",
                        "name": "_i1BlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | Any block device mapping entries for the instance.",
                        "typeExposed": "[InstanceBlockDeviceMapping]",
                        "type": "List \"item\" InstanceBlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1ClientToken",
                        "name": "_i1ClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | The idempotency token you provided when you launched the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1EbsOptimized",
                        "name": "_i1EbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Indicates whether the instance is optimized for EBS I/O. This optimization\n-- provides dedicated throughput to Amazon EBS and an optimized configuration\n-- stack to provide optimal I/O performance. This optimization isn't available\n-- with all instance types. Additional usage charges apply when using an EBS\n-- Optimized instance.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1Hypervisor",
                        "name": "_i1Hypervisor",
                        "shape": "HypervisorType",
                        "locationName": "hypervisor",
                        "documentation": "-- | The hypervisor type of the instance.",
                        "typeExposed": "HypervisorType",
                        "type": "HypervisorType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1IamInstanceProfile",
                        "name": "_i1IamInstanceProfile",
                        "shape": "IamInstanceProfile",
                        "locationName": "iamInstanceProfile",
                        "documentation": "-- | The IAM instance profile associated with the instance.",
                        "typeExposed": "Maybe IamInstanceProfile",
                        "type": "Maybe IamInstanceProfile"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1ImageId",
                        "name": "_i1ImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the AMI used to launch the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1InstanceId",
                        "name": "_i1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1InstanceLifecycle",
                        "name": "_i1InstanceLifecycle",
                        "shape": "InstanceLifecycleType",
                        "locationName": "instanceLifecycle",
                        "documentation": "-- | Indicates whether this is a Spot Instance.",
                        "typeExposed": "Maybe InstanceLifecycleType",
                        "type": "Maybe InstanceLifecycleType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1InstanceType",
                        "name": "_i1InstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type.",
                        "typeExposed": "InstanceType",
                        "type": "InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1KernelId",
                        "name": "_i1KernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "-- | The kernel associated with this instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1KeyName",
                        "name": "_i1KeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The name of the key pair, if this instance was launched with an associated\n-- key pair.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1LaunchTime",
                        "name": "_i1LaunchTime",
                        "shape": "DateTime",
                        "locationName": "launchTime",
                        "documentation": "-- | The time the instance was launched.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1Monitoring",
                        "name": "_i1Monitoring",
                        "shape": "Monitoring",
                        "locationName": "monitoring",
                        "documentation": "-- | The monitoring information for the instance.",
                        "typeExposed": "Monitoring",
                        "type": "Monitoring"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "i1NetworkInterfaces",
                        "name": "_i1NetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "-- | [EC2-VPC] One or more network interfaces for the instance.",
                        "typeExposed": "[InstanceNetworkInterface]",
                        "type": "List \"item\" InstanceNetworkInterface"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1Placement",
                        "name": "_i1Placement",
                        "shape": "Placement",
                        "locationName": "placement",
                        "documentation": "-- | The location where the instance launched.",
                        "typeExposed": "Placement",
                        "type": "Placement"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1Platform",
                        "name": "_i1Platform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "-- | The value is 'Windows' for Windows instances; otherwise blank.",
                        "typeExposed": "Maybe PlatformValues",
                        "type": "Maybe PlatformValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1PrivateDnsName",
                        "name": "_i1PrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "-- | The private DNS name assigned to the instance. This DNS name can only be used\n-- inside the Amazon EC2 network. This name is not available until the instance\n-- enters the 'running' state.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1PrivateIpAddress",
                        "name": "_i1PrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP address assigned to the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "i1ProductCodes",
                        "name": "_i1ProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | The product codes attached to this instance.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1PublicDnsName",
                        "name": "_i1PublicDnsName",
                        "shape": "String",
                        "locationName": "dnsName",
                        "documentation": "-- | The public DNS name assigned to the instance. This name is not available\n-- until the instance enters the 'running' state.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1PublicIpAddress",
                        "name": "_i1PublicIpAddress",
                        "shape": "String",
                        "locationName": "ipAddress",
                        "documentation": "-- | The public IP address assigned to the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1RamdiskId",
                        "name": "_i1RamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "-- | The RAM disk associated with this instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1RootDeviceName",
                        "name": "_i1RootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "-- | The root device name (for example, '/dev/sda1').",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1RootDeviceType",
                        "name": "_i1RootDeviceType",
                        "shape": "DeviceType",
                        "locationName": "rootDeviceType",
                        "documentation": "-- | The root device type used by the AMI. The AMI can use an Amazon EBS volume or\n-- an instance store volume.",
                        "typeExposed": "DeviceType",
                        "type": "DeviceType"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "i1SecurityGroups",
                        "name": "_i1SecurityGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | One or more security groups for the instance.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1SourceDestCheck",
                        "name": "_i1SourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Specifies whether to enable an instance launched in a VPC to perform NAT.\n-- This controls whether source/destination checking is enabled on the instance.\n-- A value of 'true' means checking is enabled, and 'false' means checking is\n-- disabled. The value must be 'false' for the instance to perform NAT. For more\n-- information, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html NAT Instances\u003e in the /Amazon Virtual Private Cloud User Guide/.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1SpotInstanceRequestId",
                        "name": "_i1SpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "-- | The ID of the Spot Instance request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1SriovNetSupport",
                        "name": "_i1SriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "-- | Specifies whether enhanced networking is enabled.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1State",
                        "name": "_i1State",
                        "shape": "InstanceState",
                        "locationName": "instanceState",
                        "documentation": "-- | The current state of the instance.",
                        "typeExposed": "InstanceState",
                        "type": "InstanceState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1StateReason",
                        "name": "_i1StateReason",
                        "shape": "StateReason",
                        "locationName": "stateReason",
                        "documentation": "-- | The reason for the most recent state transition.",
                        "typeExposed": "Maybe StateReason",
                        "type": "Maybe StateReason"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1StateTransitionReason",
                        "name": "_i1StateTransitionReason",
                        "shape": "String",
                        "locationName": "reason",
                        "documentation": "-- | The reason for the most recent state transition. This might be an empty\n-- string.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1SubnetId",
                        "name": "_i1SubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet in which the instance is running.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "i1Tags",
                        "name": "_i1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the instance.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "i1VirtualizationType",
                        "name": "_i1VirtualizationType",
                        "shape": "VirtualizationType",
                        "locationName": "virtualizationType",
                        "documentation": "-- | The virtualization type of the instance.",
                        "typeExposed": "VirtualizationType",
                        "type": "VirtualizationType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "i1VpcId",
                        "name": "_i1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC in which the instance is running.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "exportTask",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etExportTaskId",
                        "name": "_etExportTaskId",
                        "shape": "String",
                        "locationName": "exportTaskId",
                        "documentation": "-- | The ID of the export task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etDescription",
                        "name": "_etDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description of the resource being exported.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etState",
                        "name": "_etState",
                        "shape": "ExportTaskState",
                        "locationName": "state",
                        "documentation": "-- | The state of the conversion task.",
                        "typeExposed": "ExportTaskState",
                        "type": "ExportTaskState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etStatusMessage",
                        "name": "_etStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | The status message related to the export task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etInstanceExportDetails",
                        "name": "_etInstanceExportDetails",
                        "shape": "InstanceExportDetails",
                        "locationName": "instanceExport",
                        "documentation": "-- | The instance being exported.",
                        "typeExposed": "InstanceExportDetails",
                        "type": "InstanceExportDetails"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etExportToS3Task",
                        "name": "_etExportToS3Task",
                        "shape": "ExportToS3Task",
                        "locationName": "exportToS3",
                        "documentation": null,
                        "typeExposed": "ExportToS3Task",
                        "type": "ExportToS3Task"
                    }
                ],
                "contentPad": 0,
                "name": "ExportTask",
                "locationPad": 15,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etDescription",
                        "name": "_etDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description of the resource being exported.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etExportTaskId",
                        "name": "_etExportTaskId",
                        "shape": "String",
                        "locationName": "exportTaskId",
                        "documentation": "-- | The ID of the export task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etExportToS3Task",
                        "name": "_etExportToS3Task",
                        "shape": "ExportToS3Task",
                        "locationName": "exportToS3",
                        "documentation": null,
                        "typeExposed": "ExportToS3Task",
                        "type": "ExportToS3Task"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etInstanceExportDetails",
                        "name": "_etInstanceExportDetails",
                        "shape": "InstanceExportDetails",
                        "locationName": "instanceExport",
                        "documentation": "-- | The instance being exported.",
                        "typeExposed": "InstanceExportDetails",
                        "type": "InstanceExportDetails"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etState",
                        "name": "_etState",
                        "shape": "ExportTaskState",
                        "locationName": "state",
                        "documentation": "-- | The state of the conversion task.",
                        "typeExposed": "ExportTaskState",
                        "type": "ExportTaskState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "etStatusMessage",
                        "name": "_etStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "-- | The status message related to the export task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "RIANLaunchPermission": "launchPermission"
                },
                "valuePad": 17,
                "name": "ResetImageAttributeName",
                "type": "nullary",
                "branchPad": 20
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "requestSpotLaunchSpecification",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "RequestSpotLaunchSpecification",
                "locationPad": 19,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsImageId",
                        "name": "_rslsImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsKeyName",
                        "name": "_rslsKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The name of the key pair.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rslsSecurityGroups",
                        "name": "_rslsSecurityGroups",
                        "shape": "ValueStringList",
                        "locationName": "SecurityGroup",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsUserData",
                        "name": "_rslsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "-- | The Base64-encoded MIME user data to make available to the instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsAddressingType",
                        "name": "_rslsAddressingType",
                        "shape": "String",
                        "locationName": "addressingType",
                        "documentation": "-- | Deprecated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsInstanceType",
                        "name": "_rslsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type.\n--\n-- Default: 'm1.small'",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsPlacement",
                        "name": "_rslsPlacement",
                        "shape": "SpotPlacement",
                        "locationName": "placement",
                        "documentation": "-- | The placement information for the instance.",
                        "typeExposed": "Maybe SpotPlacement",
                        "type": "Maybe SpotPlacement"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsKernelId",
                        "name": "_rslsKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "-- | The ID of the kernel.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsRamdiskId",
                        "name": "_rslsRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "-- | The ID of the RAM disk.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rslsBlockDeviceMappings",
                        "name": "_rslsBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | One or more block device mapping entries.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"item\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsSubnetId",
                        "name": "_rslsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet in which to launch the Spot Instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rslsNetworkInterfaces",
                        "name": "_rslsNetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "NetworkInterface",
                        "documentation": "-- | One or more network interfaces.",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "List \"item\" InstanceNetworkInterfaceSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsIamInstanceProfile",
                        "name": "_rslsIamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "-- | The IAM instance profile.",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsEbsOptimized",
                        "name": "_rslsEbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Indicates whether the instance is optimized for EBS I/O. This optimization\n-- provides dedicated throughput to Amazon EBS and an optimized configuration\n-- stack to provide optimal EBS I/O performance. This optimization isn't\n-- available with all instance types. Additional usage charges apply when using\n-- an EBS Optimized instance.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsMonitoring",
                        "name": "_rslsMonitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rslsSecurityGroupIds",
                        "name": "_rslsSecurityGroupIds",
                        "shape": "ValueStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsAddressingType",
                        "name": "_rslsAddressingType",
                        "shape": "String",
                        "locationName": "addressingType",
                        "documentation": "-- | Deprecated.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rslsBlockDeviceMappings",
                        "name": "_rslsBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | One or more block device mapping entries.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"item\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsEbsOptimized",
                        "name": "_rslsEbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Indicates whether the instance is optimized for EBS I/O. This optimization\n-- provides dedicated throughput to Amazon EBS and an optimized configuration\n-- stack to provide optimal EBS I/O performance. This optimization isn't\n-- available with all instance types. Additional usage charges apply when using\n-- an EBS Optimized instance.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsIamInstanceProfile",
                        "name": "_rslsIamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "-- | The IAM instance profile.",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsImageId",
                        "name": "_rslsImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsInstanceType",
                        "name": "_rslsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type.\n--\n-- Default: 'm1.small'",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsKernelId",
                        "name": "_rslsKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "-- | The ID of the kernel.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsKeyName",
                        "name": "_rslsKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The name of the key pair.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsMonitoring",
                        "name": "_rslsMonitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rslsNetworkInterfaces",
                        "name": "_rslsNetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "NetworkInterface",
                        "documentation": "-- | One or more network interfaces.",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "List \"item\" InstanceNetworkInterfaceSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsPlacement",
                        "name": "_rslsPlacement",
                        "shape": "SpotPlacement",
                        "locationName": "placement",
                        "documentation": "-- | The placement information for the instance.",
                        "typeExposed": "Maybe SpotPlacement",
                        "type": "Maybe SpotPlacement"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsRamdiskId",
                        "name": "_rslsRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "-- | The ID of the RAM disk.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rslsSecurityGroupIds",
                        "name": "_rslsSecurityGroupIds",
                        "shape": "ValueStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rslsSecurityGroups",
                        "name": "_rslsSecurityGroups",
                        "shape": "ValueStringList",
                        "locationName": "SecurityGroup",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsSubnetId",
                        "name": "_rslsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet in which to launch the Spot Instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rslsUserData",
                        "name": "_rslsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "-- | The Base64-encoded MIME user data to make available to the instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Enum",
                    "Num",
                    "Integral",
                    "Real"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "volumeDetail",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": true,
                    "lens": "vdSize",
                    "name": "_vdSize",
                    "shape": "Long",
                    "locationName": "size",
                    "documentation": "-- | The size of the volume, in GiB.",
                    "typeExposed": "Integer",
                    "type": "Integer"
                },
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vdSize",
                        "name": "_vdSize",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "-- | The size of the volume, in GiB.",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    }
                ],
                "contentPad": 0,
                "name": "VolumeDetail",
                "locationPad": 0,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "vdSize",
                        "name": "_vdSize",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "-- | The size of the volume, in GiB.",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 8,
                "ctor": "pricingDetail",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PricingDetail",
                "locationPad": 6,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pdPrice",
                        "name": "_pdPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "-- | The price per instance.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pdCount",
                        "name": "_pdCount",
                        "shape": "Integer",
                        "locationName": "count",
                        "documentation": "-- | The number of instances available for the price.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pdCount",
                        "name": "_pdCount",
                        "shape": "Integer",
                        "locationName": "count",
                        "documentation": "-- | The number of instances available for the price.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "pdPrice",
                        "name": "_pdPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "-- | The price per instance.",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "networkInterfacePrivateIpAddress",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "NetworkInterfacePrivateIpAddress",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "nipiaPrivateIpAddress",
                        "name": "_nipiaPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "nipiaPrivateDnsName",
                        "name": "_nipiaPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "-- | The private DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "nipiaPrimary",
                        "name": "_nipiaPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "-- | Indicates whether this IP address is the primary private IP address of the\n-- network interface.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "nipiaAssociation",
                        "name": "_nipiaAssociation",
                        "shape": "NetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "-- | The association information for an Elastic IP address associated with the\n-- network interface.",
                        "typeExposed": "Maybe NetworkInterfaceAssociation",
                        "type": "Maybe NetworkInterfaceAssociation"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "nipiaAssociation",
                        "name": "_nipiaAssociation",
                        "shape": "NetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "-- | The association information for an Elastic IP address associated with the\n-- network interface.",
                        "typeExposed": "Maybe NetworkInterfaceAssociation",
                        "type": "Maybe NetworkInterfaceAssociation"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "nipiaPrimary",
                        "name": "_nipiaPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "-- | Indicates whether this IP address is the primary private IP address of the\n-- network interface.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "nipiaPrivateDnsName",
                        "name": "_nipiaPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "-- | The private DNS name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "nipiaPrivateIpAddress",
                        "name": "_nipiaPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The private IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Raw": "RAW",
                    "Vhd": "VHD",
                    "Vmdk": "VMDK"
                },
                "valuePad": 5,
                "name": "DiskImageFormat",
                "type": "nullary",
                "branchPad": 4
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 11,
                "ctor": "bundleTaskError",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "BundleTaskError",
                "locationPad": 8,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bteCode",
                        "name": "_bteCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The error code.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bteMessage",
                        "name": "_bteMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The error message.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bteCode",
                        "name": "_bteCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "-- | The error code.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "bteMessage",
                        "name": "_bteMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "-- | The error message.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "volumeStatusItem",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "VolumeStatusItem",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsiVolumeId",
                        "name": "_vsiVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The volume ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsiAvailabilityZone",
                        "name": "_vsiAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone of the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsiVolumeStatus",
                        "name": "_vsiVolumeStatus",
                        "shape": "VolumeStatusInfo",
                        "locationName": "volumeStatus",
                        "documentation": "-- | The volume status.",
                        "typeExposed": "Maybe VolumeStatusInfo",
                        "type": "Maybe VolumeStatusInfo"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vsiEvents",
                        "name": "_vsiEvents",
                        "shape": "VolumeStatusEventsList",
                        "locationName": "eventsSet",
                        "documentation": "-- | A list of events associated with the volume.",
                        "typeExposed": "[VolumeStatusEvent]",
                        "type": "List \"item\" VolumeStatusEvent"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vsiActions",
                        "name": "_vsiActions",
                        "shape": "VolumeStatusActionsList",
                        "locationName": "actionsSet",
                        "documentation": "-- | The details of the operation.",
                        "typeExposed": "[VolumeStatusAction]",
                        "type": "List \"item\" VolumeStatusAction"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vsiActions",
                        "name": "_vsiActions",
                        "shape": "VolumeStatusActionsList",
                        "locationName": "actionsSet",
                        "documentation": "-- | The details of the operation.",
                        "typeExposed": "[VolumeStatusAction]",
                        "type": "List \"item\" VolumeStatusAction"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsiAvailabilityZone",
                        "name": "_vsiAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone of the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "vsiEvents",
                        "name": "_vsiEvents",
                        "shape": "VolumeStatusEventsList",
                        "locationName": "eventsSet",
                        "documentation": "-- | A list of events associated with the volume.",
                        "typeExposed": "[VolumeStatusEvent]",
                        "type": "List \"item\" VolumeStatusEvent"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsiVolumeId",
                        "name": "_vsiVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The volume ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "vsiVolumeStatus",
                        "name": "_vsiVolumeStatus",
                        "shape": "VolumeStatusInfo",
                        "locationName": "volumeStatus",
                        "documentation": "-- | The volume status.",
                        "typeExposed": "Maybe VolumeStatusInfo",
                        "type": "Maybe VolumeStatusInfo"
                    }
                ]
            }
        ],
        "imports": [
            "Network.AWS.EC2.Internal"
        ],
        "shared": [
            "Snapshot",
            "GroupIdentifier",
            "ReservedInstancesListing",
            "DhcpOptions",
            "AttributeValue",
            "Tag",
            "IcmpTypeCode",
            "BlockDeviceMapping",
            "ConversionTask",
            "InstanceMonitoring",
            "SpotInstanceRequest",
            "Volume",
            "Reservation",
            "RuleAction",
            "NetworkInterface",
            "Subnet",
            "VolumeAttachmentState",
            "PortRange",
            "BundleTask",
            "InstanceType",
            "SpotDatafeedSubscription",
            "VolumeAttachment",
            "CustomerGateway",
            "SnapshotAttributeName",
            "RouteTable",
            "InstanceAttributeName",
            "IpPermission",
            "Tenancy",
            "Vpc",
            "DomainType",
            "OfferingTypeValues",
            "VpnGateway",
            "Filter",
            "VolumeType",
            "InstanceStateChange",
            "NetworkAcl",
            "GatewayType",
            "AttributeBooleanValue",
            "InternetGateway",
            "ProductCode",
            "VpnConnection",
            "VpcPeeringConnection",
            "ExportTask"
        ]
    },
    "operations": [
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "acceptVpcPeeringConnectionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "avpcrVpcPeeringConnection",
                    "name": "_avpcrVpcPeeringConnection",
                    "shape": "VpcPeeringConnection",
                    "locationName": "vpcPeeringConnection",
                    "documentation": "-- | Information about the VPC peering connection.",
                    "typeExposed": "Maybe VpcPeeringConnection",
                    "type": "Maybe VpcPeeringConnection"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AcceptVpcPeeringConnectionResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avpcrVpcPeeringConnection",
                        "name": "_avpcrVpcPeeringConnection",
                        "shape": "VpcPeeringConnection",
                        "locationName": "vpcPeeringConnection",
                        "documentation": "-- | Information about the VPC peering connection.",
                        "typeExposed": "Maybe VpcPeeringConnection",
                        "type": "Maybe VpcPeeringConnection"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avpcrVpcPeeringConnection",
                        "name": "_avpcrVpcPeeringConnection",
                        "shape": "VpcPeeringConnection",
                        "locationName": "vpcPeeringConnection",
                        "documentation": "-- | Information about the VPC peering connection.",
                        "typeExposed": "Maybe VpcPeeringConnection",
                        "type": "Maybe VpcPeeringConnection"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AcceptVpcPeeringConnection.html",
            "namespace": "Network.AWS.EC2.AcceptVpcPeeringConnection",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AcceptVpcPeeringConnection",
            "method": "post",
            "documentation": "-- | Accept a VPC peering connection request. To accept a request, the VPC peering\n-- connection must be in the 'pending-acceptance' state, and you must be the owner\n-- of the peer VPC. Use the 'DescribeVpcPeeringConnections' request to view your\n-- outstanding VPC peering connection requests.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "acceptVpcPeeringConnection",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "AcceptVpcPeeringConnection",
                "query": [
                    {
                        "field": "_avpcDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_avpcVpcPeeringConnectionId",
                        "locationName": "vpcPeeringConnectionId",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avpcDryRun",
                        "name": "_avpcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avpcVpcPeeringConnectionId",
                        "name": "_avpcVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of the VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avpcDryRun",
                        "name": "_avpcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avpcVpcPeeringConnectionId",
                        "name": "_avpcVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of the VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "allocateAddressResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AllocateAddressResponse",
                "resultWrapper": null,
                "locationPad": 13,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aarPublicIp",
                        "name": "_aarPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "-- | The Elastic IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aarDomain",
                        "name": "_aarDomain",
                        "shape": "DomainType",
                        "locationName": "domain",
                        "documentation": "-- | Indicates whether this Elastic IP address is for use with instances in\n-- EC2-Classic ('standard') or instances in a VPC ('vpc').",
                        "typeExposed": "Maybe DomainType",
                        "type": "Maybe DomainType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aarAllocationId",
                        "name": "_aarAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "-- | [EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic\n-- IP address for use with instances in a VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aarAllocationId",
                        "name": "_aarAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "-- | [EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic\n-- IP address for use with instances in a VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aarDomain",
                        "name": "_aarDomain",
                        "shape": "DomainType",
                        "locationName": "domain",
                        "documentation": "-- | Indicates whether this Elastic IP address is for use with instances in\n-- EC2-Classic ('standard') or instances in a VPC ('vpc').",
                        "typeExposed": "Maybe DomainType",
                        "type": "Maybe DomainType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aarPublicIp",
                        "name": "_aarPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "-- | The Elastic IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AllocateAddress.html",
            "namespace": "Network.AWS.EC2.AllocateAddress",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AllocateAddress",
            "method": "post",
            "documentation": "-- | Acquires an Elastic IP address.\n--\n-- An Elastic IP address is for use either in the EC2-Classic platform or in a\n-- VPC. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html Elastic IP Addresses\u003e in the /Amazon ElasticCompute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 9,
                "ctor": "allocateAddress",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 7,
                "name": "AllocateAddress",
                "query": [
                    {
                        "field": "_aaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_aaDomain",
                        "locationName": "Domain",
                        "type": "field"
                    }
                ],
                "locationPad": 7,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aaDryRun",
                        "name": "_aaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aaDomain",
                        "name": "_aaDomain",
                        "shape": "DomainType",
                        "locationName": "Domain",
                        "documentation": "-- | Set to 'vpc' to allocate the address for use with instances in a VPC.\n--\n-- Default: The address is for use with instances in EC2-Classic.",
                        "typeExposed": "Maybe DomainType",
                        "type": "Maybe DomainType"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aaDomain",
                        "name": "_aaDomain",
                        "shape": "DomainType",
                        "locationName": "Domain",
                        "documentation": "-- | Set to 'vpc' to allocate the address for use with instances in a VPC.\n--\n-- Default: The address is for use with instances in EC2-Classic.",
                        "typeExposed": "Maybe DomainType",
                        "type": "Maybe DomainType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aaDryRun",
                        "name": "_aaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "assignPrivateIpAddressesResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AssignPrivateIpAddressesResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AssignPrivateIpAddresses.html",
            "namespace": "Network.AWS.EC2.AssignPrivateIpAddresses",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AssignPrivateIpAddresses",
            "method": "post",
            "documentation": "-- | Assigns one or more secondary private IP addresses to the specified network\n-- interface. You can specify one or more specific secondary IP addresses, or\n-- you can specify the number of secondary IP addresses to be automatically\n-- assigned within the subnet's CIDR block range. The number of secondary IP\n-- addresses that you can assign to an instance varies by instance type. For\n-- information about instance types, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html Instance Types\u003e in the /Amazon ElasticCompute Cloud User Guide/. For more information about Elastic IP addresses,\n-- see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html Elastic IP Addresses\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- AssignPrivateIpAddresses is available only in EC2-VPC.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 35,
                "ctor": "assignPrivateIpAddresses",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "apiaNetworkInterfaceId",
                        "name": "_apiaNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 31,
                "name": "AssignPrivateIpAddresses",
                "query": [
                    {
                        "field": "_apiaNetworkInterfaceId",
                        "locationName": "networkInterfaceId",
                        "type": "field"
                    },
                    {
                        "field": "_apiaPrivateIpAddresses",
                        "locationName": "privateIpAddress",
                        "type": "field"
                    },
                    {
                        "field": "_apiaSecondaryPrivateIpAddressCount",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "type": "field"
                    },
                    {
                        "field": "_apiaAllowReassignment",
                        "locationName": "allowReassignment",
                        "type": "field"
                    }
                ],
                "locationPad": 31,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "apiaPrivateIpAddresses",
                        "name": "_apiaPrivateIpAddresses",
                        "shape": "PrivateIpAddressStringList",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | One or more IP addresses to be assigned as a secondary private IP address to\n-- the network interface. You can't specify this parameter when also specifying\n-- a number of secondary IP addresses.\n--\n-- If you don't specify an IP address, Amazon EC2 automatically selects an IP\n-- address within the subnet range.",
                        "typeExposed": "[Text]",
                        "type": "List \"PrivateIpAddress\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "apiaSecondaryPrivateIpAddressCount",
                        "name": "_apiaSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "-- | The number of secondary IP addresses to assign to the network interface. You\n-- can't specify this parameter when also specifying private IP addresses.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "apiaAllowReassignment",
                        "name": "_apiaAllowReassignment",
                        "shape": "Boolean",
                        "locationName": "allowReassignment",
                        "documentation": "-- | Indicates whether to allow an IP address that is already assigned to another\n-- network interface or instance to be reassigned to the specified network\n-- interface.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "apiaAllowReassignment",
                        "name": "_apiaAllowReassignment",
                        "shape": "Boolean",
                        "locationName": "allowReassignment",
                        "documentation": "-- | Indicates whether to allow an IP address that is already assigned to another\n-- network interface or instance to be reassigned to the specified network\n-- interface.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "apiaNetworkInterfaceId",
                        "name": "_apiaNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "apiaPrivateIpAddresses",
                        "name": "_apiaPrivateIpAddresses",
                        "shape": "PrivateIpAddressStringList",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | One or more IP addresses to be assigned as a secondary private IP address to\n-- the network interface. You can't specify this parameter when also specifying\n-- a number of secondary IP addresses.\n--\n-- If you don't specify an IP address, Amazon EC2 automatically selects an IP\n-- address within the subnet range.",
                        "typeExposed": "[Text]",
                        "type": "List \"PrivateIpAddress\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "apiaSecondaryPrivateIpAddressCount",
                        "name": "_apiaSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "-- | The number of secondary IP addresses to assign to the network interface. You\n-- can't specify this parameter when also specifying private IP addresses.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "associateAddressResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "aarAssociationId",
                    "name": "_aarAssociationId",
                    "shape": "String",
                    "locationName": "associationId",
                    "documentation": "-- | [EC2-VPC] The ID that represents the association of the Elastic IP address\n-- with an instance.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AssociateAddressResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aarAssociationId",
                        "name": "_aarAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | [EC2-VPC] The ID that represents the association of the Elastic IP address\n-- with an instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aarAssociationId",
                        "name": "_aarAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | [EC2-VPC] The ID that represents the association of the Elastic IP address\n-- with an instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AssociateAddress.html",
            "namespace": "Network.AWS.EC2.AssociateAddress",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AssociateAddress",
            "method": "post",
            "documentation": "-- | Associates an Elastic IP address with an instance or a network interface.\n--\n-- An Elastic IP address is for use in either the EC2-Classic platform or in a\n-- VPC. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html Elastic IP Addresses\u003e in the /Amazon ElasticCompute Cloud User Guide/.\n--\n-- [EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is\n-- already associated with a different instance, it is disassociated from that\n-- instance and associated with the specified instance.\n--\n-- [VPC in an EC2-Classic account] If you don't specify a private IP address,\n-- the Elastic IP address is associated with the primary IP address. If the\n-- Elastic IP address is already associated with a different instance or a\n-- network interface, you get an error unless you allow reassociation.\n--\n-- This is an idempotent operation. If you perform the operation more than\n-- once, Amazon EC2 doesn't return an error.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "associateAddress",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "AssociateAddress",
                "query": [
                    {
                        "field": "_aa1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_aa1InstanceId",
                        "locationName": "InstanceId",
                        "type": "field"
                    },
                    {
                        "field": "_aa1PublicIp",
                        "locationName": "PublicIp",
                        "type": "field"
                    },
                    {
                        "field": "_aa1AllocationId",
                        "locationName": "AllocationId",
                        "type": "field"
                    },
                    {
                        "field": "_aa1NetworkInterfaceId",
                        "locationName": "networkInterfaceId",
                        "type": "field"
                    },
                    {
                        "field": "_aa1PrivateIpAddress",
                        "locationName": "privateIpAddress",
                        "type": "field"
                    },
                    {
                        "field": "_aa1AllowReassociation",
                        "locationName": "allowReassociation",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1DryRun",
                        "name": "_aa1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1InstanceId",
                        "name": "_aa1InstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance. This is required for EC2-Classic. For EC2-VPC, you\n-- can specify either the instance ID or the network interface ID, but not both.\n-- The operation fails if you specify an instance ID unless exactly one network\n-- interface is attached.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1PublicIp",
                        "name": "_aa1PublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "-- | The Elastic IP address. This is required for EC2-Classic.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1AllocationId",
                        "name": "_aa1AllocationId",
                        "shape": "String",
                        "locationName": "AllocationId",
                        "documentation": "-- | [EC2-VPC] The allocation ID. This is required for EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1NetworkInterfaceId",
                        "name": "_aa1NetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | [EC2-VPC] The ID of the network interface. If the instance has more than one\n-- network interface, you must specify a network interface ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1PrivateIpAddress",
                        "name": "_aa1PrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | [EC2-VPC] The primary or secondary private IP address to associate with the\n-- Elastic IP address. If no private IP address is specified, the Elastic IP\n-- address is associated with the primary private IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1AllowReassociation",
                        "name": "_aa1AllowReassociation",
                        "shape": "Boolean",
                        "locationName": "allowReassociation",
                        "documentation": "-- | [EC2-VPC] Allows an Elastic IP address that is already associated with an\n-- instance or network interface to be re-associated with the specified instance\n-- or network interface. Otherwise, the operation fails.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1AllocationId",
                        "name": "_aa1AllocationId",
                        "shape": "String",
                        "locationName": "AllocationId",
                        "documentation": "-- | [EC2-VPC] The allocation ID. This is required for EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1AllowReassociation",
                        "name": "_aa1AllowReassociation",
                        "shape": "Boolean",
                        "locationName": "allowReassociation",
                        "documentation": "-- | [EC2-VPC] Allows an Elastic IP address that is already associated with an\n-- instance or network interface to be re-associated with the specified instance\n-- or network interface. Otherwise, the operation fails.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1DryRun",
                        "name": "_aa1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1InstanceId",
                        "name": "_aa1InstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance. This is required for EC2-Classic. For EC2-VPC, you\n-- can specify either the instance ID or the network interface ID, but not both.\n-- The operation fails if you specify an instance ID unless exactly one network\n-- interface is attached.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1NetworkInterfaceId",
                        "name": "_aa1NetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | [EC2-VPC] The ID of the network interface. If the instance has more than one\n-- network interface, you must specify a network interface ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1PrivateIpAddress",
                        "name": "_aa1PrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | [EC2-VPC] The primary or secondary private IP address to associate with the\n-- Elastic IP address. If no private IP address is specified, the Elastic IP\n-- address is associated with the primary private IP address.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aa1PublicIp",
                        "name": "_aa1PublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "-- | The Elastic IP address. This is required for EC2-Classic.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "associateDhcpOptionsResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AssociateDhcpOptionsResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AssociateDhcpOptions.html",
            "namespace": "Network.AWS.EC2.AssociateDhcpOptions",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AssociateDhcpOptions",
            "method": "post",
            "documentation": "-- | Associates a set of DHCP options (that you've previously created) with the\n-- specified VPC, or associates no DHCP options with the VPC.\n--\n-- After you associate the options with the VPC, any existing instances and all\n-- new instances that you launch in that VPC use the options. You don't need to\n-- restart or relaunch the instances. They automatically pick up the changes\n-- within a few hours, depending on how frequently the instance renews its DHCP\n-- lease. You can explicitly renew the lease using the operating system on the\n-- instance.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html DHCP Options Sets\u003e in the /Amazon Virtual PrivateCloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "associateDhcpOptions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "adoDhcpOptionsId",
                        "name": "_adoDhcpOptionsId",
                        "shape": "String",
                        "locationName": "DhcpOptionsId",
                        "documentation": "-- | The ID of the DHCP options set, or 'default' to associate no DHCP options with\n-- the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "adoVpcId",
                        "name": "_adoVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "AssociateDhcpOptions",
                "query": [
                    {
                        "field": "_adoDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_adoDhcpOptionsId",
                        "locationName": "DhcpOptionsId",
                        "type": "field"
                    },
                    {
                        "field": "_adoVpcId",
                        "locationName": "VpcId",
                        "type": "field"
                    }
                ],
                "locationPad": 14,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "adoDryRun",
                        "name": "_adoDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "adoDhcpOptionsId",
                        "name": "_adoDhcpOptionsId",
                        "shape": "String",
                        "locationName": "DhcpOptionsId",
                        "documentation": "-- | The ID of the DHCP options set, or 'default' to associate no DHCP options with\n-- the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "adoDryRun",
                        "name": "_adoDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "adoVpcId",
                        "name": "_adoVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "associateRouteTableResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "artrAssociationId",
                    "name": "_artrAssociationId",
                    "shape": "String",
                    "locationName": "associationId",
                    "documentation": "-- | The route table association ID (needed to disassociate the route table).",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AssociateRouteTableResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "artrAssociationId",
                        "name": "_artrAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The route table association ID (needed to disassociate the route table).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "artrAssociationId",
                        "name": "_artrAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The route table association ID (needed to disassociate the route table).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AssociateRouteTable.html",
            "namespace": "Network.AWS.EC2.AssociateRouteTable",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AssociateRouteTable",
            "method": "post",
            "documentation": "-- | Associates a subnet with a route table. The subnet and route table must be in\n-- the same VPC. This association causes traffic originating from the subnet to\n-- be routed according to the routes in the route table. The action returns an\n-- association ID, which you need in order to disassociate the route table from\n-- the subnet later. A route table can be associated with multiple subnets.\n--\n-- For more information about route tables, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html Route Tables\u003e in the /AmazonVirtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "associateRouteTable",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "artSubnetId",
                        "name": "_artSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "artRouteTableId",
                        "name": "_artRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "AssociateRouteTable",
                "query": [
                    {
                        "field": "_artDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_artSubnetId",
                        "locationName": "subnetId",
                        "type": "field"
                    },
                    {
                        "field": "_artRouteTableId",
                        "locationName": "routeTableId",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "artDryRun",
                        "name": "_artDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "artDryRun",
                        "name": "_artDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "artRouteTableId",
                        "name": "_artRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "artSubnetId",
                        "name": "_artSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "attachInternetGatewayResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AttachInternetGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AttachInternetGateway.html",
            "namespace": "Network.AWS.EC2.AttachInternetGateway",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AttachInternetGateway",
            "method": "post",
            "documentation": "-- | Attaches an Internet gateway to a VPC, enabling connectivity between the\n-- Internet and the VPC. For more information about your VPC and Internet\n-- gateway, see the \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/ Amazon Virtual Private Cloud User Guide\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 21,
                "ctor": "attachInternetGateway",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "aigInternetGatewayId",
                        "name": "_aigInternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "-- | The ID of the Internet gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "aigVpcId",
                        "name": "_aigVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "AttachInternetGateway",
                "query": [
                    {
                        "field": "_aigDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_aigInternetGatewayId",
                        "locationName": "internetGatewayId",
                        "type": "field"
                    },
                    {
                        "field": "_aigVpcId",
                        "locationName": "vpcId",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aigDryRun",
                        "name": "_aigDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aigDryRun",
                        "name": "_aigDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "aigInternetGatewayId",
                        "name": "_aigInternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "-- | The ID of the Internet gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "aigVpcId",
                        "name": "_aigVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "attachNetworkInterfaceResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "anirAttachmentId",
                    "name": "_anirAttachmentId",
                    "shape": "String",
                    "locationName": "attachmentId",
                    "documentation": "-- | The ID of the network interface attachment.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AttachNetworkInterfaceResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "anirAttachmentId",
                        "name": "_anirAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "-- | The ID of the network interface attachment.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "anirAttachmentId",
                        "name": "_anirAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "-- | The ID of the network interface attachment.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AttachNetworkInterface.html",
            "namespace": "Network.AWS.EC2.AttachNetworkInterface",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AttachNetworkInterface",
            "method": "post",
            "documentation": "-- | Attaches a network interface to an instance.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "attachNetworkInterface",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "aniNetworkInterfaceId",
                        "name": "_aniNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "aniInstanceId",
                        "name": "_aniInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "aniDeviceIndex",
                        "name": "_aniDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "-- | The index of the device for the network interface attachment.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "AttachNetworkInterface",
                "query": [
                    {
                        "field": "_aniDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_aniNetworkInterfaceId",
                        "locationName": "networkInterfaceId",
                        "type": "field"
                    },
                    {
                        "field": "_aniInstanceId",
                        "locationName": "instanceId",
                        "type": "field"
                    },
                    {
                        "field": "_aniDeviceIndex",
                        "locationName": "deviceIndex",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aniDryRun",
                        "name": "_aniDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "aniDeviceIndex",
                        "name": "_aniDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "-- | The index of the device for the network interface attachment.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "aniDryRun",
                        "name": "_aniDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "aniInstanceId",
                        "name": "_aniInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "aniNetworkInterfaceId",
                        "name": "_aniNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 23,
                "ctor": "attachVolumeResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AttachVolumeResponse",
                "resultWrapper": null,
                "locationPad": 20,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrVolumeId",
                        "name": "_avrVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrInstanceId",
                        "name": "_avrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrDevice",
                        "name": "_avrDevice",
                        "shape": "String",
                        "locationName": "device",
                        "documentation": "-- | The device name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrState",
                        "name": "_avrState",
                        "shape": "VolumeAttachmentState",
                        "locationName": "status",
                        "documentation": "-- | The attachment state of the volume.",
                        "typeExposed": "Maybe VolumeAttachmentState",
                        "type": "Maybe VolumeAttachmentState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrAttachTime",
                        "name": "_avrAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The time stamp when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrDeleteOnTermination",
                        "name": "_avrDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the Amazon EBS volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrAttachTime",
                        "name": "_avrAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The time stamp when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrDeleteOnTermination",
                        "name": "_avrDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the Amazon EBS volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrDevice",
                        "name": "_avrDevice",
                        "shape": "String",
                        "locationName": "device",
                        "documentation": "-- | The device name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrInstanceId",
                        "name": "_avrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrState",
                        "name": "_avrState",
                        "shape": "VolumeAttachmentState",
                        "locationName": "status",
                        "documentation": "-- | The attachment state of the volume.",
                        "typeExposed": "Maybe VolumeAttachmentState",
                        "type": "Maybe VolumeAttachmentState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avrVolumeId",
                        "name": "_avrVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AttachVolume.html",
            "namespace": "Network.AWS.EC2.AttachVolume",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AttachVolume",
            "method": "post",
            "documentation": "-- | Attaches an Amazon EBS volume to a running or stopped instance and exposes it\n-- to the instance with the specified device name.\n--\n-- Encrypted Amazon EBS volumes may only be attached to instances that support\n-- Amazon EBS encryption. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html Amazon EBS Encryption\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- For a list of supported device names, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html Attaching an Amazon EBS Volume toan Instance\u003e. Any device names that aren't reserved for instance store volumes\n-- can be used for Amazon EBS volumes. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html Amazon EC2Instance Store\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- If a volume has an AWS Marketplace product code:\n--\n-- The volume can only be attached as the root device of a stopped instance. You must be subscribed to the AWS Marketplace code that is on the volume.\n-- The configuration (instance type, operating system) of the instance must\n-- support that specific AWS Marketplace code. For example, you cannot take a\n-- volume from a Windows instance and attach it to a Linux instance. AWS\n-- Marketplace product codes are copied from the volume to the instance.  For an\n-- overview of the AWS Marketplace, see \u003chttps://aws.amazon.com/marketplace/help/200900000 https://aws.amazon.com/marketplace/help/200900000\u003e. For more information about how to use the AWS Marketplace, see \u003chttps://aws.amazon.com/marketplace AWSMarketplace\u003e.\n--\n-- For more information about Amazon EBS volumes, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html Attaching Amazon EBSVolumes\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "attachVolume",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "avVolumeId",
                        "name": "_avVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the Amazon EBS volume. The volume and instance must be within the\n-- same Availability Zone.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "avInstanceId",
                        "name": "_avInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "avDevice",
                        "name": "_avDevice",
                        "shape": "String",
                        "locationName": "Device",
                        "documentation": "-- | The device name to expose to the instance (for example, '/dev/sdh' or 'xvdh').",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "AttachVolume",
                "query": [
                    {
                        "field": "_avDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_avVolumeId",
                        "locationName": "VolumeId",
                        "type": "field"
                    },
                    {
                        "field": "_avInstanceId",
                        "locationName": "InstanceId",
                        "type": "field"
                    },
                    {
                        "field": "_avDevice",
                        "locationName": "Device",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avDryRun",
                        "name": "_avDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "avDevice",
                        "name": "_avDevice",
                        "shape": "String",
                        "locationName": "Device",
                        "documentation": "-- | The device name to expose to the instance (for example, '/dev/sdh' or 'xvdh').",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avDryRun",
                        "name": "_avDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "avInstanceId",
                        "name": "_avInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "avVolumeId",
                        "name": "_avVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the Amazon EBS volume. The volume and instance must be within the\n-- same Availability Zone.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "attachVpnGatewayResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "avgrVpcAttachment",
                    "name": "_avgrVpcAttachment",
                    "shape": "VpcAttachment",
                    "locationName": "attachment",
                    "documentation": "-- | Information about the attachment.",
                    "typeExposed": "Maybe VpcAttachment",
                    "type": "Maybe VpcAttachment"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "AttachVpnGatewayResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avgrVpcAttachment",
                        "name": "_avgrVpcAttachment",
                        "shape": "VpcAttachment",
                        "locationName": "attachment",
                        "documentation": "-- | Information about the attachment.",
                        "typeExposed": "Maybe VpcAttachment",
                        "type": "Maybe VpcAttachment"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avgrVpcAttachment",
                        "name": "_avgrVpcAttachment",
                        "shape": "VpcAttachment",
                        "locationName": "attachment",
                        "documentation": "-- | Information about the attachment.",
                        "typeExposed": "Maybe VpcAttachment",
                        "type": "Maybe VpcAttachment"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AttachVpnGateway.html",
            "namespace": "Network.AWS.EC2.AttachVpnGateway",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AttachVpnGateway",
            "method": "post",
            "documentation": "-- | Attaches a virtual private gateway to a VPC. For more information, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html Addinga Hardware Virtual Private Gateway to Your VPC\u003e in the /Amazon Virtual PrivateCloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "attachVpnGateway",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "avgVpnGatewayId",
                        "name": "_avgVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "avgVpcId",
                        "name": "_avgVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "AttachVpnGateway",
                "query": [
                    {
                        "field": "_avgDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_avgVpnGatewayId",
                        "locationName": "VpnGatewayId",
                        "type": "field"
                    },
                    {
                        "field": "_avgVpcId",
                        "locationName": "VpcId",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avgDryRun",
                        "name": "_avgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "avgDryRun",
                        "name": "_avgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "avgVpcId",
                        "name": "_avgVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "avgVpnGatewayId",
                        "name": "_avgVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "authorizeSecurityGroupEgressResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AuthorizeSecurityGroupEgressResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AuthorizeSecurityGroupEgress.html",
            "namespace": "Network.AWS.EC2.AuthorizeSecurityGroupEgress",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AuthorizeSecurityGroupEgress",
            "method": "post",
            "documentation": "-- | Adds one or more egress rules to a security group for use with a VPC.\n-- Specifically, this action permits instances to send traffic to one or more\n-- destination CIDR IP address ranges, or to one or more destination security\n-- groups for the same VPC.\n--\n-- You can have up to 50 rules per security group (covering both ingress and\n-- egress rules).\n--\n-- A security group is for use with instances either in the EC2-Classic\n-- platform or in a specific VPC. This action doesn't apply to security groups\n-- for use in EC2-Classic. For more information, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html Security Groups for Your VPC\u003e\n-- in the /Amazon Virtual Private Cloud User Guide/.\n--\n-- Each rule consists of the protocol (for example, TCP), plus either a CIDR\n-- range or a source group. For the TCP and UDP protocols, you must also specify\n-- the destination port or port range. For the ICMP protocol, you must also\n-- specify the ICMP type and code. You can use -1 for the type or code to mean\n-- all types or all codes.\n--\n-- Rule changes are propagated to affected instances as quickly as possible.\n-- However, a small delay might occur.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 31,
                "ctor": "authorizeSecurityGroupEgress",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "asgeGroupId",
                        "name": "_asgeGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 27,
                "name": "AuthorizeSecurityGroupEgress",
                "query": [
                    {
                        "field": "_asgeDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_asgeGroupId",
                        "locationName": "groupId",
                        "type": "field"
                    },
                    {
                        "field": "_asgeSourceSecurityGroupName",
                        "locationName": "sourceSecurityGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_asgeSourceSecurityGroupOwnerId",
                        "locationName": "sourceSecurityGroupOwnerId",
                        "type": "field"
                    },
                    {
                        "field": "_asgeIpProtocol",
                        "locationName": "ipProtocol",
                        "type": "field"
                    },
                    {
                        "field": "_asgeFromPort",
                        "locationName": "fromPort",
                        "type": "field"
                    },
                    {
                        "field": "_asgeToPort",
                        "locationName": "toPort",
                        "type": "field"
                    },
                    {
                        "field": "_asgeCidrIp",
                        "locationName": "cidrIp",
                        "type": "field"
                    },
                    {
                        "field": "_asgeIpPermissions",
                        "locationName": "ipPermissions",
                        "type": "field"
                    }
                ],
                "locationPad": 27,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeDryRun",
                        "name": "_asgeDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeSourceSecurityGroupName",
                        "name": "_asgeSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the destination security group. You\n-- can't specify a destination security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeSourceSecurityGroupOwnerId",
                        "name": "_asgeSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupOwnerId",
                        "documentation": "-- | The ID of the destination security group. You can't specify a destination\n-- security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeIpProtocol",
                        "name": "_asgeIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "-- | The IP protocol name ('tcp', 'udp', 'icmp') or number (see \u003chttp://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml Protocol Numbers\u003e). Use '-1'\n-- to specify all.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeFromPort",
                        "name": "_asgeFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "-- | The start of port range for the TCP and UDP protocols, or an ICMP type\n-- number. For the ICMP type number, use '-1' to specify all ICMP types.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeToPort",
                        "name": "_asgeToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "-- | The end of port range for the TCP and UDP protocols, or an ICMP code number.\n-- For the ICMP code number, use '-1' to specify all ICMP codes for the ICMP type.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeCidrIp",
                        "name": "_asgeCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "-- | The CIDR IP address range. You can't specify this parameter when specifying a\n-- source security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "asgeIpPermissions",
                        "name": "_asgeIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "-- | A set of IP permissions. You can't specify a destination security group and a\n-- CIDR IP address range.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeCidrIp",
                        "name": "_asgeCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "-- | The CIDR IP address range. You can't specify this parameter when specifying a\n-- source security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeDryRun",
                        "name": "_asgeDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeFromPort",
                        "name": "_asgeFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "-- | The start of port range for the TCP and UDP protocols, or an ICMP type\n-- number. For the ICMP type number, use '-1' to specify all ICMP types.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "asgeGroupId",
                        "name": "_asgeGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "asgeIpPermissions",
                        "name": "_asgeIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "-- | A set of IP permissions. You can't specify a destination security group and a\n-- CIDR IP address range.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeIpProtocol",
                        "name": "_asgeIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "-- | The IP protocol name ('tcp', 'udp', 'icmp') or number (see \u003chttp://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml Protocol Numbers\u003e). Use '-1'\n-- to specify all.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeSourceSecurityGroupName",
                        "name": "_asgeSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the destination security group. You\n-- can't specify a destination security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeSourceSecurityGroupOwnerId",
                        "name": "_asgeSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupOwnerId",
                        "documentation": "-- | The ID of the destination security group. You can't specify a destination\n-- security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgeToPort",
                        "name": "_asgeToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "-- | The end of port range for the TCP and UDP protocols, or an ICMP code number.\n-- For the ICMP code number, use '-1' to specify all ICMP codes for the ICMP type.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "authorizeSecurityGroupIngressResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AuthorizeSecurityGroupIngressResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-AuthorizeSecurityGroupIngress.html",
            "namespace": "Network.AWS.EC2.AuthorizeSecurityGroupIngress",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "AuthorizeSecurityGroupIngress",
            "method": "post",
            "documentation": "-- | Adds one or more ingress rules to a security group.\n--\n-- EC2-Classic: You can have up to 100 rules per group.\n--\n-- EC2-VPC: You can have up to 50 rules per group (covering both ingress and\n-- egress rules).\n--\n-- Rule changes are propagated to instances within the security group as\n-- quickly as possible. However, a small delay might occur.\n--\n-- [EC2-Classic] This action gives one or more CIDR IP address ranges\n-- permission to access a security group in your account, or gives one or more\n-- security groups (called the /source groups/) permission to access a security\n-- group for your account. A source group can be for your own AWS account, or\n-- another.\n--\n-- [EC2-VPC] This action gives one or more CIDR IP address ranges permission to\n-- access a security group in your VPC, or gives one or more other security\n-- groups (called the /source groups/) permission to access a security group for\n-- your VPC. The security groups must all be for the same VPC.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 31,
                "ctor": "authorizeSecurityGroupIngress",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 27,
                "name": "AuthorizeSecurityGroupIngress",
                "query": [
                    {
                        "field": "_asgiDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_asgiGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_asgiGroupId",
                        "locationName": "GroupId",
                        "type": "field"
                    },
                    {
                        "field": "_asgiSourceSecurityGroupName",
                        "locationName": "SourceSecurityGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_asgiSourceSecurityGroupOwnerId",
                        "locationName": "SourceSecurityGroupOwnerId",
                        "type": "field"
                    },
                    {
                        "field": "_asgiIpProtocol",
                        "locationName": "IpProtocol",
                        "type": "field"
                    },
                    {
                        "field": "_asgiFromPort",
                        "locationName": "FromPort",
                        "type": "field"
                    },
                    {
                        "field": "_asgiToPort",
                        "locationName": "ToPort",
                        "type": "field"
                    },
                    {
                        "field": "_asgiCidrIp",
                        "locationName": "CidrIp",
                        "type": "field"
                    },
                    {
                        "field": "_asgiIpPermissions",
                        "locationName": "IpPermissions",
                        "type": "field"
                    }
                ],
                "locationPad": 27,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiDryRun",
                        "name": "_asgiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiGroupName",
                        "name": "_asgiGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiGroupId",
                        "name": "_asgiGroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiSourceSecurityGroupName",
                        "name": "_asgiSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the source security group. You can't\n-- specify a source security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiSourceSecurityGroupOwnerId",
                        "name": "_asgiSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupOwnerId",
                        "documentation": "-- | The ID of the source security group. You can't specify a source security\n-- group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiIpProtocol",
                        "name": "_asgiIpProtocol",
                        "shape": "String",
                        "locationName": "IpProtocol",
                        "documentation": "-- | The IP protocol name ('tcp', 'udp', 'icmp') or number (see \u003chttp://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml Protocol Numbers\u003e). Use '-1'\n-- to specify all.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiFromPort",
                        "name": "_asgiFromPort",
                        "shape": "Integer",
                        "locationName": "FromPort",
                        "documentation": "-- | The start of port range for the TCP and UDP protocols, or an ICMP type\n-- number. For the ICMP type number, use '-1' to specify all ICMP types.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiToPort",
                        "name": "_asgiToPort",
                        "shape": "Integer",
                        "locationName": "ToPort",
                        "documentation": "-- | The end of port range for the TCP and UDP protocols, or an ICMP code number.\n-- For the ICMP code number, use '-1' to specify all ICMP codes for the ICMP type.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiCidrIp",
                        "name": "_asgiCidrIp",
                        "shape": "String",
                        "locationName": "CidrIp",
                        "documentation": "-- | The CIDR IP address range. You can't specify this parameter when specifying a\n-- source security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "asgiIpPermissions",
                        "name": "_asgiIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "IpPermissions",
                        "documentation": "-- | A set of IP permissions. You can't specify a source security group and a CIDR\n-- IP address range.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiCidrIp",
                        "name": "_asgiCidrIp",
                        "shape": "String",
                        "locationName": "CidrIp",
                        "documentation": "-- | The CIDR IP address range. You can't specify this parameter when specifying a\n-- source security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiDryRun",
                        "name": "_asgiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiFromPort",
                        "name": "_asgiFromPort",
                        "shape": "Integer",
                        "locationName": "FromPort",
                        "documentation": "-- | The start of port range for the TCP and UDP protocols, or an ICMP type\n-- number. For the ICMP type number, use '-1' to specify all ICMP types.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiGroupId",
                        "name": "_asgiGroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiGroupName",
                        "name": "_asgiGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "asgiIpPermissions",
                        "name": "_asgiIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "IpPermissions",
                        "documentation": "-- | A set of IP permissions. You can't specify a source security group and a CIDR\n-- IP address range.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiIpProtocol",
                        "name": "_asgiIpProtocol",
                        "shape": "String",
                        "locationName": "IpProtocol",
                        "documentation": "-- | The IP protocol name ('tcp', 'udp', 'icmp') or number (see \u003chttp://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml Protocol Numbers\u003e). Use '-1'\n-- to specify all.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiSourceSecurityGroupName",
                        "name": "_asgiSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the source security group. You can't\n-- specify a source security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiSourceSecurityGroupOwnerId",
                        "name": "_asgiSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupOwnerId",
                        "documentation": "-- | The ID of the source security group. You can't specify a source security\n-- group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "asgiToPort",
                        "name": "_asgiToPort",
                        "shape": "Integer",
                        "locationName": "ToPort",
                        "documentation": "-- | The end of port range for the TCP and UDP protocols, or an ICMP code number.\n-- For the ICMP code number, use '-1' to specify all ICMP codes for the ICMP type.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "bundleInstanceResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "birBundleTask",
                    "name": "_birBundleTask",
                    "shape": "BundleTask",
                    "locationName": "bundleInstanceTask",
                    "documentation": "-- | Information about the bundle task.",
                    "typeExposed": "Maybe BundleTask",
                    "type": "Maybe BundleTask"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "BundleInstanceResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "birBundleTask",
                        "name": "_birBundleTask",
                        "shape": "BundleTask",
                        "locationName": "bundleInstanceTask",
                        "documentation": "-- | Information about the bundle task.",
                        "typeExposed": "Maybe BundleTask",
                        "type": "Maybe BundleTask"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "birBundleTask",
                        "name": "_birBundleTask",
                        "shape": "BundleTask",
                        "locationName": "bundleInstanceTask",
                        "documentation": "-- | Information about the bundle task.",
                        "typeExposed": "Maybe BundleTask",
                        "type": "Maybe BundleTask"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-BundleInstance.html",
            "namespace": "Network.AWS.EC2.BundleInstance",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "BundleInstance",
            "method": "post",
            "documentation": "-- | Bundles an Amazon instance store-backed Windows instance.\n--\n-- During bundling, only the root device volume (C:\\) is bundled. Data on other\n-- instance store volumes is not preserved.\n--\n-- This procedure is not applicable for Linux/Unix instances or Windows\n-- instances that are backed by Amazon EBS.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Creating_InstanceStoreBacked_WinAMI.html Creating an Instance Store-Backed Windows AMI\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "bundleInstance",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "biInstanceId",
                        "name": "_biInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance to bundle.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "biStorage",
                        "name": "_biStorage",
                        "shape": "Storage",
                        "locationName": "Storage",
                        "documentation": "-- | The bucket in which to store the AMI. You can specify a bucket that you\n-- already own or a new bucket that Amazon EC2 creates on your behalf. If you\n-- specify a bucket that belongs to someone else, Amazon EC2 returns an error.",
                        "typeExposed": "Storage",
                        "type": "Storage"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "BundleInstance",
                "query": [
                    {
                        "field": "_biDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_biInstanceId",
                        "locationName": "InstanceId",
                        "type": "field"
                    },
                    {
                        "field": "_biStorage",
                        "locationName": "Storage",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "biDryRun",
                        "name": "_biDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "biDryRun",
                        "name": "_biDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "biInstanceId",
                        "name": "_biInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance to bundle.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "biStorage",
                        "name": "_biStorage",
                        "shape": "Storage",
                        "locationName": "Storage",
                        "documentation": "-- | The bucket in which to store the AMI. You can specify a bucket that you\n-- already own or a new bucket that Amazon EC2 creates on your behalf. If you\n-- specify a bucket that belongs to someone else, Amazon EC2 returns an error.",
                        "typeExposed": "Storage",
                        "type": "Storage"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "cancelBundleTaskResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cbtrBundleTask",
                    "name": "_cbtrBundleTask",
                    "shape": "BundleTask",
                    "locationName": "bundleInstanceTask",
                    "documentation": "-- | The bundle task.",
                    "typeExposed": "Maybe BundleTask",
                    "type": "Maybe BundleTask"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CancelBundleTaskResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cbtrBundleTask",
                        "name": "_cbtrBundleTask",
                        "shape": "BundleTask",
                        "locationName": "bundleInstanceTask",
                        "documentation": "-- | The bundle task.",
                        "typeExposed": "Maybe BundleTask",
                        "type": "Maybe BundleTask"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cbtrBundleTask",
                        "name": "_cbtrBundleTask",
                        "shape": "BundleTask",
                        "locationName": "bundleInstanceTask",
                        "documentation": "-- | The bundle task.",
                        "typeExposed": "Maybe BundleTask",
                        "type": "Maybe BundleTask"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelBundleTask.html",
            "namespace": "Network.AWS.EC2.CancelBundleTask",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CancelBundleTask",
            "method": "post",
            "documentation": "-- | Cancels a bundling operation for an instance store-backed Windows instance.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "cancelBundleTask",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cbtBundleId",
                        "name": "_cbtBundleId",
                        "shape": "String",
                        "locationName": "BundleId",
                        "documentation": "-- | The ID of the bundle task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "CancelBundleTask",
                "query": [
                    {
                        "field": "_cbtDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cbtBundleId",
                        "locationName": "BundleId",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cbtDryRun",
                        "name": "_cbtDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cbtBundleId",
                        "name": "_cbtBundleId",
                        "shape": "String",
                        "locationName": "BundleId",
                        "documentation": "-- | The ID of the bundle task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cbtDryRun",
                        "name": "_cbtDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "cancelConversionTaskResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CancelConversionTaskResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelConversionTask.html",
            "namespace": "Network.AWS.EC2.CancelConversionTask",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CancelConversionTask",
            "method": "post",
            "documentation": "-- | Cancels an active conversion task. The task can be the import of an instance\n-- or volume. The action removes all artifacts of the conversion, including a\n-- partially uploaded volume or instance. If the conversion is complete or is in\n-- the process of transferring the final disk image, the command fails and\n-- returns an exception.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UploadingYourInstancesandVolumes.html Using the Command Line Tools to Import YourVirtual Machine to Amazon EC2\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "cancelConversionTask",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cctConversionTaskId",
                        "name": "_cctConversionTaskId",
                        "shape": "String",
                        "locationName": "conversionTaskId",
                        "documentation": "-- | The ID of the conversion task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "CancelConversionTask",
                "query": [
                    {
                        "field": "_cctDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cctConversionTaskId",
                        "locationName": "conversionTaskId",
                        "type": "field"
                    },
                    {
                        "field": "_cctReasonMessage",
                        "locationName": "reasonMessage",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cctDryRun",
                        "name": "_cctDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cctReasonMessage",
                        "name": "_cctReasonMessage",
                        "shape": "String",
                        "locationName": "reasonMessage",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cctConversionTaskId",
                        "name": "_cctConversionTaskId",
                        "shape": "String",
                        "locationName": "conversionTaskId",
                        "documentation": "-- | The ID of the conversion task.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cctDryRun",
                        "name": "_cctDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cctReasonMessage",
                        "name": "_cctReasonMessage",
                        "shape": "String",
                        "locationName": "reasonMessage",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "cancelExportTaskResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CancelExportTaskResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelExportTask.html",
            "namespace": "Network.AWS.EC2.CancelExportTask",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CancelExportTask",
            "method": "post",
            "documentation": "-- | Cancels an active export task. The request removes all artifacts of the\n-- export, including any partially-created Amazon S3 objects. If the export task\n-- is complete or is in the process of transferring the final disk image, the\n-- command fails and returns an error.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "cancelExportTask",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": true,
                    "lens": "cetExportTaskId",
                    "name": "_cetExportTaskId",
                    "shape": "String",
                    "locationName": "exportTaskId",
                    "documentation": "-- | The ID of the export task. This is the ID returned by 'CreateInstanceExportTask'\n-- .",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cetExportTaskId",
                        "name": "_cetExportTaskId",
                        "shape": "String",
                        "locationName": "exportTaskId",
                        "documentation": "-- | The ID of the export task. This is the ID returned by 'CreateInstanceExportTask'\n-- .",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "CancelExportTask",
                "query": [
                    {
                        "field": "_cetExportTaskId",
                        "locationName": "exportTaskId",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cetExportTaskId",
                        "name": "_cetExportTaskId",
                        "shape": "String",
                        "locationName": "exportTaskId",
                        "documentation": "-- | The ID of the export task. This is the ID returned by 'CreateInstanceExportTask'\n-- .",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "cancelReservedInstancesListingResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "crilrReservedInstancesListings",
                    "name": "_crilrReservedInstancesListings",
                    "shape": "ReservedInstancesListingList",
                    "locationName": "reservedInstancesListingsSet",
                    "documentation": "-- | The Reserved Instance listing.",
                    "typeExposed": "[ReservedInstancesListing]",
                    "type": "List \"item\" ReservedInstancesListing"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CancelReservedInstancesListingResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "crilrReservedInstancesListings",
                        "name": "_crilrReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "-- | The Reserved Instance listing.",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "List \"item\" ReservedInstancesListing"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "crilrReservedInstancesListings",
                        "name": "_crilrReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "-- | The Reserved Instance listing.",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "List \"item\" ReservedInstancesListing"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelReservedInstancesListing.html",
            "namespace": "Network.AWS.EC2.CancelReservedInstancesListing",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CancelReservedInstancesListing",
            "method": "post",
            "documentation": "-- | Cancels the specified Reserved Instance listing in the Reserved Instance\n-- Marketplace.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html Reserved Instance Marketplace\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "cancelReservedInstancesListing",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": true,
                    "lens": "crilReservedInstancesListingId",
                    "name": "_crilReservedInstancesListingId",
                    "shape": "String",
                    "locationName": "reservedInstancesListingId",
                    "documentation": "-- | The ID of the Reserved Instance listing.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crilReservedInstancesListingId",
                        "name": "_crilReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "-- | The ID of the Reserved Instance listing.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 27,
                "name": "CancelReservedInstancesListing",
                "query": [
                    {
                        "field": "_crilReservedInstancesListingId",
                        "locationName": "reservedInstancesListingId",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crilReservedInstancesListingId",
                        "name": "_crilReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "-- | The ID of the Reserved Instance listing.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "cancelSpotInstanceRequestsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "csirrCancelledSpotInstanceRequests",
                    "name": "_csirrCancelledSpotInstanceRequests",
                    "shape": "CancelledSpotInstanceRequestList",
                    "locationName": "spotInstanceRequestSet",
                    "documentation": "-- | One or more Spot Instance requests.",
                    "typeExposed": "[CancelledSpotInstanceRequest]",
                    "type": "List \"item\" CancelledSpotInstanceRequest"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CancelSpotInstanceRequestsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "csirrCancelledSpotInstanceRequests",
                        "name": "_csirrCancelledSpotInstanceRequests",
                        "shape": "CancelledSpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "-- | One or more Spot Instance requests.",
                        "typeExposed": "[CancelledSpotInstanceRequest]",
                        "type": "List \"item\" CancelledSpotInstanceRequest"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "csirrCancelledSpotInstanceRequests",
                        "name": "_csirrCancelledSpotInstanceRequests",
                        "shape": "CancelledSpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "-- | One or more Spot Instance requests.",
                        "typeExposed": "[CancelledSpotInstanceRequest]",
                        "type": "List \"item\" CancelledSpotInstanceRequest"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CancelSpotInstanceRequests.html",
            "namespace": "Network.AWS.EC2.CancelSpotInstanceRequests",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CancelSpotInstanceRequests",
            "method": "post",
            "documentation": "-- | Cancels one or more Spot Instance requests. Spot Instances are instances that\n-- Amazon EC2 starts on your behalf when the maximum price that you specify\n-- exceeds the current Spot Price. Amazon EC2 periodically sets the Spot Price\n-- based on available Spot Instance capacity and current Spot Instance requests.\n-- For more information about Spot Instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html Spot Instances\u003e in the /AmazonElastic Compute Cloud User Guide/.\n--\n-- Canceling a Spot Instance request does not terminate running Spot Instances\n-- associated with the request.\n--\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "cancelSpotInstanceRequests",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "CancelSpotInstanceRequests",
                "query": [
                    {
                        "field": "_csirDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_csirSpotInstanceRequestIds",
                        "locationName": "SpotInstanceRequestId",
                        "type": "field"
                    }
                ],
                "locationPad": 22,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csirDryRun",
                        "name": "_csirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "csirSpotInstanceRequestIds",
                        "name": "_csirSpotInstanceRequestIds",
                        "shape": "SpotInstanceRequestIdList",
                        "locationName": "SpotInstanceRequestId",
                        "documentation": "-- | One or more Spot Instance request IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"SpotInstanceRequestId\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csirDryRun",
                        "name": "_csirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "csirSpotInstanceRequestIds",
                        "name": "_csirSpotInstanceRequestIds",
                        "shape": "SpotInstanceRequestIdList",
                        "locationName": "SpotInstanceRequestId",
                        "documentation": "-- | One or more Spot Instance request IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"SpotInstanceRequestId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "confirmProductInstanceResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cpirOwnerId",
                    "name": "_cpirOwnerId",
                    "shape": "String",
                    "locationName": "ownerId",
                    "documentation": "-- | The AWS account ID of the instance owner. This is only present if the product\n-- code is attached to the instance.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ConfirmProductInstanceResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cpirOwnerId",
                        "name": "_cpirOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the instance owner. This is only present if the product\n-- code is attached to the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cpirOwnerId",
                        "name": "_cpirOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the instance owner. This is only present if the product\n-- code is attached to the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ConfirmProductInstance.html",
            "namespace": "Network.AWS.EC2.ConfirmProductInstance",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ConfirmProductInstance",
            "method": "post",
            "documentation": "-- | Determines whether a product code is associated with an instance. This action\n-- can only be used by the owner of the product code. It is useful when a\n-- product code owner needs to verify whether another user's instance is\n-- eligible for support.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "confirmProductInstance",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cpiProductCode",
                        "name": "_cpiProductCode",
                        "shape": "String",
                        "locationName": "ProductCode",
                        "documentation": "-- | The product code. This must be a product code that you own.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cpiInstanceId",
                        "name": "_cpiInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "ConfirmProductInstance",
                "query": [
                    {
                        "field": "_cpiDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cpiProductCode",
                        "locationName": "ProductCode",
                        "type": "field"
                    },
                    {
                        "field": "_cpiInstanceId",
                        "locationName": "InstanceId",
                        "type": "field"
                    }
                ],
                "locationPad": 12,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cpiDryRun",
                        "name": "_cpiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cpiDryRun",
                        "name": "_cpiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cpiInstanceId",
                        "name": "_cpiInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cpiProductCode",
                        "name": "_cpiProductCode",
                        "shape": "String",
                        "locationName": "ProductCode",
                        "documentation": "-- | The product code. This must be a product code that you own.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "copyImageResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cir1ImageId",
                    "name": "_cir1ImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "-- | The ID of the new AMI.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CopyImageResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cir1ImageId",
                        "name": "_cir1ImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the new AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cir1ImageId",
                        "name": "_cir1ImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the new AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CopyImage.html",
            "namespace": "Network.AWS.EC2.CopyImage",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CopyImage",
            "method": "post",
            "documentation": "-- | Initiates the copy of an AMI from the specified source region to the region\n-- in which the request was made. You specify the destination region by using\n-- its endpoint when making the request. AMIs that use encrypted Amazon EBS\n-- snapshots cannot be copied with this method.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html Copying AMIs\u003e in the /Amazon Elastic Compute CloudUser Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "copyImage",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ciSourceRegion",
                        "name": "_ciSourceRegion",
                        "shape": "String",
                        "locationName": "SourceRegion",
                        "documentation": "-- | The name of the region that contains the AMI to copy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ciSourceImageId",
                        "name": "_ciSourceImageId",
                        "shape": "String",
                        "locationName": "SourceImageId",
                        "documentation": "-- | The ID of the AMI to copy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ciName",
                        "name": "_ciName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "-- | The name of the new AMI in the destination region.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "CopyImage",
                "query": [
                    {
                        "field": "_ciDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ciSourceRegion",
                        "locationName": "SourceRegion",
                        "type": "field"
                    },
                    {
                        "field": "_ciSourceImageId",
                        "locationName": "SourceImageId",
                        "type": "field"
                    },
                    {
                        "field": "_ciName",
                        "locationName": "Name",
                        "type": "field"
                    },
                    {
                        "field": "_ciDescription",
                        "locationName": "Description",
                        "type": "field"
                    },
                    {
                        "field": "_ciClientToken",
                        "locationName": "ClientToken",
                        "type": "field"
                    }
                ],
                "locationPad": 14,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ciDryRun",
                        "name": "_ciDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ciDescription",
                        "name": "_ciDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description for the new AMI in the destination region.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ciClientToken",
                        "name": "_ciClientToken",
                        "shape": "String",
                        "locationName": "ClientToken",
                        "documentation": "-- | Unique, case-sensitive identifier you provide to ensure idempotency of the\n-- request. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html How to Ensure Idempotency\u003e in the /AmazonElastic Compute Cloud User Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ciClientToken",
                        "name": "_ciClientToken",
                        "shape": "String",
                        "locationName": "ClientToken",
                        "documentation": "-- | Unique, case-sensitive identifier you provide to ensure idempotency of the\n-- request. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html How to Ensure Idempotency\u003e in the /AmazonElastic Compute Cloud User Guide/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ciDescription",
                        "name": "_ciDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description for the new AMI in the destination region.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ciDryRun",
                        "name": "_ciDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ciName",
                        "name": "_ciName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "-- | The name of the new AMI in the destination region.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ciSourceImageId",
                        "name": "_ciSourceImageId",
                        "shape": "String",
                        "locationName": "SourceImageId",
                        "documentation": "-- | The ID of the AMI to copy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ciSourceRegion",
                        "name": "_ciSourceRegion",
                        "shape": "String",
                        "locationName": "SourceRegion",
                        "documentation": "-- | The name of the region that contains the AMI to copy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "copySnapshotResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "csrSnapshotId",
                    "name": "_csrSnapshotId",
                    "shape": "String",
                    "locationName": "snapshotId",
                    "documentation": "-- | The ID of the new snapshot.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CopySnapshotResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csrSnapshotId",
                        "name": "_csrSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The ID of the new snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csrSnapshotId",
                        "name": "_csrSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The ID of the new snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CopySnapshot.html",
            "namespace": "Network.AWS.EC2.CopySnapshot",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CopySnapshot",
            "method": "post",
            "documentation": "-- | Copies a point-in-time snapshot of an Amazon EBS volume and stores it in\n-- Amazon S3. You can copy the snapshot within the same region or from one\n-- region to another. You can use the snapshot to create Amazon EBS volumes or\n-- Amazon Machine Images (AMIs). The snapshot is copied to the regional endpoint\n-- that you send the HTTP request to.\n--\n-- Copies of encrypted Amazon EBS snapshots remain encrypted. Copies of\n-- unencrypted snapshots remain unencrypted.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html Copying an Amazon EBS Snapshot\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "copySnapshot",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csSourceRegion",
                        "name": "_csSourceRegion",
                        "shape": "String",
                        "locationName": "SourceRegion",
                        "documentation": "-- | The ID of the region that contains the snapshot to be copied.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csSourceSnapshotId",
                        "name": "_csSourceSnapshotId",
                        "shape": "String",
                        "locationName": "SourceSnapshotId",
                        "documentation": "-- | The ID of the Amazon EBS snapshot to copy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "CopySnapshot",
                "query": [
                    {
                        "field": "_csDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_csSourceRegion",
                        "locationName": "SourceRegion",
                        "type": "field"
                    },
                    {
                        "field": "_csSourceSnapshotId",
                        "locationName": "SourceSnapshotId",
                        "type": "field"
                    },
                    {
                        "field": "_csDescription",
                        "locationName": "Description",
                        "type": "field"
                    },
                    {
                        "field": "_csDestinationRegion",
                        "locationName": "destinationRegion",
                        "type": "field"
                    },
                    {
                        "field": "_csPresignedUrl",
                        "locationName": "presignedUrl",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csDryRun",
                        "name": "_csDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csDescription",
                        "name": "_csDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description for the new Amazon EBS snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csDestinationRegion",
                        "name": "_csDestinationRegion",
                        "shape": "String",
                        "locationName": "destinationRegion",
                        "documentation": "-- | The destination region of the snapshot copy operation. This parameter is\n-- required in the 'PresignedUrl'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csPresignedUrl",
                        "name": "_csPresignedUrl",
                        "shape": "String",
                        "locationName": "presignedUrl",
                        "documentation": "-- | The pre-signed URL that facilitates copying an encrypted snapshot. This\n-- parameter is only required when copying an encrypted snapshot with the Amazon\n-- EC2 Query API; it is available as an optional parameter in all other cases.\n-- The 'PresignedUrl' should use the snapshot source endpoint, the 'CopySnapshot'\n-- action, and include the 'SourceRegion', 'SourceSnapshotId', and 'DestinationRegion'\n-- parameters. The 'PresignedUrl' must be signed using AWS Signature Version 4.\n-- Because Amazon EBS snapshots are stored in Amazon S3, the signing algorithm\n-- for this parameter uses the same logic that is described in \u003chttp://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html AuthenticatingRequests by Using Query Parameters (AWS Signature Version 4)\u003e in the /AmazonSimple Storage Service API Reference/. An invalid or improperly signed 'PresignedUrl' will cause the copy operation to fail asynchronously, and the snapshot will\n-- move to an 'error' state.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csDescription",
                        "name": "_csDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description for the new Amazon EBS snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csDestinationRegion",
                        "name": "_csDestinationRegion",
                        "shape": "String",
                        "locationName": "destinationRegion",
                        "documentation": "-- | The destination region of the snapshot copy operation. This parameter is\n-- required in the 'PresignedUrl'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csDryRun",
                        "name": "_csDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csPresignedUrl",
                        "name": "_csPresignedUrl",
                        "shape": "String",
                        "locationName": "presignedUrl",
                        "documentation": "-- | The pre-signed URL that facilitates copying an encrypted snapshot. This\n-- parameter is only required when copying an encrypted snapshot with the Amazon\n-- EC2 Query API; it is available as an optional parameter in all other cases.\n-- The 'PresignedUrl' should use the snapshot source endpoint, the 'CopySnapshot'\n-- action, and include the 'SourceRegion', 'SourceSnapshotId', and 'DestinationRegion'\n-- parameters. The 'PresignedUrl' must be signed using AWS Signature Version 4.\n-- Because Amazon EBS snapshots are stored in Amazon S3, the signing algorithm\n-- for this parameter uses the same logic that is described in \u003chttp://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html AuthenticatingRequests by Using Query Parameters (AWS Signature Version 4)\u003e in the /AmazonSimple Storage Service API Reference/. An invalid or improperly signed 'PresignedUrl' will cause the copy operation to fail asynchronously, and the snapshot will\n-- move to an 'error' state.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csSourceRegion",
                        "name": "_csSourceRegion",
                        "shape": "String",
                        "locationName": "SourceRegion",
                        "documentation": "-- | The ID of the region that contains the snapshot to be copied.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csSourceSnapshotId",
                        "name": "_csSourceSnapshotId",
                        "shape": "String",
                        "locationName": "SourceSnapshotId",
                        "documentation": "-- | The ID of the Amazon EBS snapshot to copy.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createCustomerGatewayResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "ccgrCustomerGateway",
                    "name": "_ccgrCustomerGateway",
                    "shape": "CustomerGateway",
                    "locationName": "customerGateway",
                    "documentation": "-- | Information about the customer gateway.",
                    "typeExposed": "Maybe CustomerGateway",
                    "type": "Maybe CustomerGateway"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateCustomerGatewayResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ccgrCustomerGateway",
                        "name": "_ccgrCustomerGateway",
                        "shape": "CustomerGateway",
                        "locationName": "customerGateway",
                        "documentation": "-- | Information about the customer gateway.",
                        "typeExposed": "Maybe CustomerGateway",
                        "type": "Maybe CustomerGateway"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ccgrCustomerGateway",
                        "name": "_ccgrCustomerGateway",
                        "shape": "CustomerGateway",
                        "locationName": "customerGateway",
                        "documentation": "-- | Information about the customer gateway.",
                        "typeExposed": "Maybe CustomerGateway",
                        "type": "Maybe CustomerGateway"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateCustomerGateway.html",
            "namespace": "Network.AWS.EC2.CreateCustomerGateway",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateCustomerGateway",
            "method": "post",
            "documentation": "-- | Provides information to AWS about your VPN customer gateway device. The\n-- customer gateway is the appliance at your end of the VPN connection. (The\n-- device on the AWS side of the VPN connection is the virtual private gateway.)\n-- You must provide the Internet-routable IP address of the customer gateway's\n-- external interface. The IP address must be static and can't be behind a\n-- device performing network address translation (NAT).\n--\n-- For devices that use Border Gateway Protocol (BGP), you can also provide the\n-- device's BGP Autonomous System Number (ASN). You can use an existing ASN\n-- assigned to your network. If you don't have an ASN already, you can use a\n-- private ASN (in the 64512 - 65534 range).\n--\n-- Amazon EC2 supports all 2-byte ASN numbers in the range of 1 - 65534, with\n-- the exception of 7224, which is reserved in the 'us-east-1' region, and 9059,\n-- which is reserved in the 'eu-west-1' region.\n--\n-- For more information about VPN customer gateways, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html Adding a HardwareVirtual Private Gateway to Your VPC\u003e in the /Amazon Virtual Private Cloud UserGuide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "createCustomerGateway",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ccgType",
                        "name": "_ccgType",
                        "shape": "GatewayType",
                        "locationName": "Type",
                        "documentation": "-- | The type of VPN connection that this customer gateway supports ('ipsec.1').",
                        "typeExposed": "GatewayType",
                        "type": "GatewayType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ccgPublicIp",
                        "name": "_ccgPublicIp",
                        "shape": "String",
                        "locationName": "IpAddress",
                        "documentation": "-- | The Internet-routable IP address for the customer gateway's outside\n-- interface. The address must be static.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ccgBgpAsn",
                        "name": "_ccgBgpAsn",
                        "shape": "Integer",
                        "locationName": "BgpAsn",
                        "documentation": "-- | For devices that support BGP, the customer gateway's BGP ASN.\n--\n-- Default: 65000",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "CreateCustomerGateway",
                "query": [
                    {
                        "field": "_ccgDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ccgType",
                        "locationName": "Type",
                        "type": "field"
                    },
                    {
                        "field": "_ccgPublicIp",
                        "locationName": "IpAddress",
                        "type": "field"
                    },
                    {
                        "field": "_ccgBgpAsn",
                        "locationName": "BgpAsn",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ccgDryRun",
                        "name": "_ccgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ccgBgpAsn",
                        "name": "_ccgBgpAsn",
                        "shape": "Integer",
                        "locationName": "BgpAsn",
                        "documentation": "-- | For devices that support BGP, the customer gateway's BGP ASN.\n--\n-- Default: 65000",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ccgDryRun",
                        "name": "_ccgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ccgPublicIp",
                        "name": "_ccgPublicIp",
                        "shape": "String",
                        "locationName": "IpAddress",
                        "documentation": "-- | The Internet-routable IP address for the customer gateway's outside\n-- interface. The address must be static.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ccgType",
                        "name": "_ccgType",
                        "shape": "GatewayType",
                        "locationName": "Type",
                        "documentation": "-- | The type of VPN connection that this customer gateway supports ('ipsec.1').",
                        "typeExposed": "GatewayType",
                        "type": "GatewayType"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createDhcpOptionsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cdorDhcpOptions",
                    "name": "_cdorDhcpOptions",
                    "shape": "DhcpOptions",
                    "locationName": "dhcpOptions",
                    "documentation": "-- | A set of DHCP options.",
                    "typeExposed": "Maybe DhcpOptions",
                    "type": "Maybe DhcpOptions"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateDhcpOptionsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cdorDhcpOptions",
                        "name": "_cdorDhcpOptions",
                        "shape": "DhcpOptions",
                        "locationName": "dhcpOptions",
                        "documentation": "-- | A set of DHCP options.",
                        "typeExposed": "Maybe DhcpOptions",
                        "type": "Maybe DhcpOptions"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cdorDhcpOptions",
                        "name": "_cdorDhcpOptions",
                        "shape": "DhcpOptions",
                        "locationName": "dhcpOptions",
                        "documentation": "-- | A set of DHCP options.",
                        "typeExposed": "Maybe DhcpOptions",
                        "type": "Maybe DhcpOptions"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateDhcpOptions.html",
            "namespace": "Network.AWS.EC2.CreateDhcpOptions",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateDhcpOptions",
            "method": "post",
            "documentation": "-- | Creates a set of DHCP options for your VPC. After creating the set, you must\n-- associate it with the VPC, causing all existing and new instances that you\n-- launch in the VPC to use this set of DHCP options. The following are the\n-- individual DHCP options you can specify. For more information about the\n-- options, see \u003chttp://www.ietf.org/rfc/rfc2132.txt RFC 2132\u003e.\n--\n-- 'domain-name-servers' - The IP addresses of up to four domain name servers,\n-- or 'AmazonProvidedDNS'. The default DHCP option set specifies 'AmazonProvidedDNS'. If specifying more than one domain name server, specify the IP addresses in a single parameter, separated by commas.\n-- 'domain-name' - If you're using AmazonProvidedDNS in 'us-east-1', specify 'ec2.internal'. If you're using AmazonProvidedDNS in another region, specify 'region.compute.internal' (for example, 'ap-northeast-1.compute.internal'). Otherwise, specify a domain\n-- name (for example, 'MyCompany.com'). If specifying more than one domain name,\n-- separate them with spaces.  'ntp-servers' - The IP addresses of up to four\n-- Network Time Protocol (NTP) servers.  'netbios-name-servers' - The IP addresses\n-- of up to four NetBIOS name servers.  'netbios-node-type' - The NetBIOS node\n-- type (1, 2, 4, or 8). We recommend that you specify 2 (broadcast and\n-- multicast are not currently supported). For more information about these node\n-- types, see \u003chttp://www.ietf.org/rfc/rfc2132.txt RFC 2132\u003e.   Your VPC automatically starts out with a set of DHCP\n-- options that includes only a DNS server that we provide (AmazonProvidedDNS).\n-- If you create a set of options, and if your VPC has an Internet gateway, make\n-- sure to set the 'domain-name-servers' option either to 'AmazonProvidedDNS' or to\n-- a domain name server of your choice. For more information about DHCP options,\n-- see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html DHCP Options Sets\u003e in the /Amazon Virtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "createDhcpOptions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "CreateDhcpOptions",
                "query": [
                    {
                        "field": "_cdoDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cdoDhcpConfigurations",
                        "locationName": "dhcpConfiguration",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cdoDryRun",
                        "name": "_cdoDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cdoDhcpConfigurations",
                        "name": "_cdoDhcpConfigurations",
                        "shape": "NewDhcpConfigurationList",
                        "locationName": "dhcpConfiguration",
                        "documentation": "-- | A DHCP configuration option.",
                        "typeExposed": "[NewDhcpConfiguration]",
                        "type": "List \"item\" NewDhcpConfiguration"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cdoDhcpConfigurations",
                        "name": "_cdoDhcpConfigurations",
                        "shape": "NewDhcpConfigurationList",
                        "locationName": "dhcpConfiguration",
                        "documentation": "-- | A DHCP configuration option.",
                        "typeExposed": "[NewDhcpConfiguration]",
                        "type": "List \"item\" NewDhcpConfiguration"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cdoDryRun",
                        "name": "_cdoDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createImageResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cirImageId",
                    "name": "_cirImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "-- | The ID of the new AMI.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateImageResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cirImageId",
                        "name": "_cirImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the new AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cirImageId",
                        "name": "_cirImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the new AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateImage.html",
            "namespace": "Network.AWS.EC2.CreateImage",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateImage",
            "method": "post",
            "documentation": "-- | Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is\n-- either running or stopped.\n--\n-- If you customized your instance with instance store volumes or EBS volumes\n-- in addition to the root device volume, the new AMI contains block device\n-- mapping information for those volumes. When you launch an instance from this\n-- new AMI, the instance automatically launches with those additional volumes.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html Creating Amazon EBS-Backed Linux AMIs\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "createImage",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ci1InstanceId",
                        "name": "_ci1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ci1Name",
                        "name": "_ci1Name",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "-- | A name for the new image.\n--\n-- Constraints: 3-128 alphanumeric characters, parentheses (()), square\n-- brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single\n-- quotes ('), at-signs (@), or underscores(_)",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "CreateImage",
                "query": [
                    {
                        "field": "_ci1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ci1InstanceId",
                        "locationName": "instanceId",
                        "type": "field"
                    },
                    {
                        "field": "_ci1Name",
                        "locationName": "name",
                        "type": "field"
                    },
                    {
                        "field": "_ci1Description",
                        "locationName": "description",
                        "type": "field"
                    },
                    {
                        "field": "_ci1NoReboot",
                        "locationName": "noReboot",
                        "type": "field"
                    },
                    {
                        "field": "_ci1BlockDeviceMappings",
                        "locationName": "blockDeviceMapping",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ci1DryRun",
                        "name": "_ci1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ci1Description",
                        "name": "_ci1Description",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description for the new image.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ci1NoReboot",
                        "name": "_ci1NoReboot",
                        "shape": "Boolean",
                        "locationName": "noReboot",
                        "documentation": "-- | By default, this parameter is set to 'false', which means Amazon EC2 attempts\n-- to shut down the instance cleanly before image creation and then reboots the\n-- instance. When the parameter is set to 'true', Amazon EC2 doesn't shut down the\n-- instance before creating the image. When this option is used, file system\n-- integrity on the created image can't be guaranteed.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ci1BlockDeviceMappings",
                        "name": "_ci1BlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | Information about one or more block device mappings.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"BlockDeviceMapping\" BlockDeviceMapping"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ci1BlockDeviceMappings",
                        "name": "_ci1BlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | Information about one or more block device mappings.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"BlockDeviceMapping\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ci1Description",
                        "name": "_ci1Description",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description for the new image.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ci1DryRun",
                        "name": "_ci1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ci1InstanceId",
                        "name": "_ci1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ci1Name",
                        "name": "_ci1Name",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "-- | A name for the new image.\n--\n-- Constraints: 3-128 alphanumeric characters, parentheses (()), square\n-- brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single\n-- quotes ('), at-signs (@), or underscores(_)",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ci1NoReboot",
                        "name": "_ci1NoReboot",
                        "shape": "Boolean",
                        "locationName": "noReboot",
                        "documentation": "-- | By default, this parameter is set to 'false', which means Amazon EC2 attempts\n-- to shut down the instance cleanly before image creation and then reboots the\n-- instance. When the parameter is set to 'true', Amazon EC2 doesn't shut down the\n-- instance before creating the image. When this option is used, file system\n-- integrity on the created image can't be guaranteed.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createInstanceExportTaskResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cietrExportTask",
                    "name": "_cietrExportTask",
                    "shape": "ExportTask",
                    "locationName": "exportTask",
                    "documentation": null,
                    "typeExposed": "Maybe ExportTask",
                    "type": "Maybe ExportTask"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateInstanceExportTaskResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cietrExportTask",
                        "name": "_cietrExportTask",
                        "shape": "ExportTask",
                        "locationName": "exportTask",
                        "documentation": null,
                        "typeExposed": "Maybe ExportTask",
                        "type": "Maybe ExportTask"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cietrExportTask",
                        "name": "_cietrExportTask",
                        "shape": "ExportTask",
                        "locationName": "exportTask",
                        "documentation": null,
                        "typeExposed": "Maybe ExportTask",
                        "type": "Maybe ExportTask"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateInstanceExportTask.html",
            "namespace": "Network.AWS.EC2.CreateInstanceExportTask",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateInstanceExportTask",
            "method": "post",
            "documentation": "-- | Exports a running or stopped instance to an Amazon S3 bucket.\n--\n-- For information about the supported operating systems, image formats, and\n-- known limitations for the types of instances you can export, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ExportingEC2Instances.html ExportingEC2 Instances\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "createInstanceExportTask",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cietInstanceId",
                        "name": "_cietInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "CreateInstanceExportTask",
                "query": [
                    {
                        "field": "_cietDescription",
                        "locationName": "description",
                        "type": "field"
                    },
                    {
                        "field": "_cietInstanceId",
                        "locationName": "instanceId",
                        "type": "field"
                    },
                    {
                        "field": "_cietTargetEnvironment",
                        "locationName": "targetEnvironment",
                        "type": "field"
                    },
                    {
                        "field": "_cietExportToS3Task",
                        "locationName": "exportToS3",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cietDescription",
                        "name": "_cietDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description for the conversion task or the resource being exported. The\n-- maximum length is 255 bytes.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cietTargetEnvironment",
                        "name": "_cietTargetEnvironment",
                        "shape": "ExportEnvironment",
                        "locationName": "targetEnvironment",
                        "documentation": "-- | The target virtualization environment.",
                        "typeExposed": "Maybe ExportEnvironment",
                        "type": "Maybe ExportEnvironment"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cietExportToS3Task",
                        "name": "_cietExportToS3Task",
                        "shape": "ExportToS3TaskSpecification",
                        "locationName": "exportToS3",
                        "documentation": null,
                        "typeExposed": "Maybe ExportToS3TaskSpecification",
                        "type": "Maybe ExportToS3TaskSpecification"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cietDescription",
                        "name": "_cietDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description for the conversion task or the resource being exported. The\n-- maximum length is 255 bytes.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cietExportToS3Task",
                        "name": "_cietExportToS3Task",
                        "shape": "ExportToS3TaskSpecification",
                        "locationName": "exportToS3",
                        "documentation": null,
                        "typeExposed": "Maybe ExportToS3TaskSpecification",
                        "type": "Maybe ExportToS3TaskSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cietInstanceId",
                        "name": "_cietInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cietTargetEnvironment",
                        "name": "_cietTargetEnvironment",
                        "shape": "ExportEnvironment",
                        "locationName": "targetEnvironment",
                        "documentation": "-- | The target virtualization environment.",
                        "typeExposed": "Maybe ExportEnvironment",
                        "type": "Maybe ExportEnvironment"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createInternetGatewayResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cigrInternetGateway",
                    "name": "_cigrInternetGateway",
                    "shape": "InternetGateway",
                    "locationName": "internetGateway",
                    "documentation": "-- | Information about the Internet gateway.",
                    "typeExposed": "Maybe InternetGateway",
                    "type": "Maybe InternetGateway"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateInternetGatewayResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cigrInternetGateway",
                        "name": "_cigrInternetGateway",
                        "shape": "InternetGateway",
                        "locationName": "internetGateway",
                        "documentation": "-- | Information about the Internet gateway.",
                        "typeExposed": "Maybe InternetGateway",
                        "type": "Maybe InternetGateway"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cigrInternetGateway",
                        "name": "_cigrInternetGateway",
                        "shape": "InternetGateway",
                        "locationName": "internetGateway",
                        "documentation": "-- | Information about the Internet gateway.",
                        "typeExposed": "Maybe InternetGateway",
                        "type": "Maybe InternetGateway"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateInternetGateway.html",
            "namespace": "Network.AWS.EC2.CreateInternetGateway",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateInternetGateway",
            "method": "post",
            "documentation": "-- | Creates an Internet gateway for use with a VPC. After creating the Internet\n-- gateway, you attach it to a VPC using 'AttachInternetGateway'.\n--\n-- For more information about your VPC and Internet gateway, see the \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/ AmazonVirtual Private Cloud User Guide\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "createInternetGateway",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cigDryRun",
                    "name": "_cigDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 7,
                "name": "CreateInternetGateway",
                "query": [
                    {
                        "field": "_cigDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cigDryRun",
                        "name": "_cigDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cigDryRun",
                        "name": "_cigDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "createKeyPairResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ckprKeyName",
                        "name": "_ckprKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The name of the key pair.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ckprKeyFingerprint",
                        "name": "_ckprKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "-- | The SHA-1 digest of the DER encoded private key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ckprKeyMaterial",
                        "name": "_ckprKeyMaterial",
                        "shape": "String",
                        "locationName": "keyMaterial",
                        "documentation": "-- | An unencrypted PEM encoded RSA private key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateKeyPairResponse",
                "resultWrapper": null,
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ckprKeyFingerprint",
                        "name": "_ckprKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "-- | The SHA-1 digest of the DER encoded private key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ckprKeyMaterial",
                        "name": "_ckprKeyMaterial",
                        "shape": "String",
                        "locationName": "keyMaterial",
                        "documentation": "-- | An unencrypted PEM encoded RSA private key.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ckprKeyName",
                        "name": "_ckprKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The name of the key pair.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateKeyPair.html",
            "namespace": "Network.AWS.EC2.CreateKeyPair",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateKeyPair",
            "method": "post",
            "documentation": "-- | Creates a 2048-bit RSA key pair with the specified name. Amazon EC2 stores\n-- the public key and displays the private key for you to save to a file. The\n-- private key is returned as an unencrypted PEM encoded PKCS#8 private key. If\n-- a key with the specified name already exists, Amazon EC2 returns an error.\n--\n-- You can have up to five thousand key pairs per region.\n--\n-- The key pair returned to you is available only in the region in which you\n-- create it. To create a key pair that is available in all regions, use 'ImportKeyPair'.\n--\n-- For more information about key pairs, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html Key Pairs\u003e in the /Amazon ElasticCompute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 11,
                "ctor": "createKeyPair",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ckpKeyName",
                        "name": "_ckpKeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "-- | A unique name for the key pair.\n--\n-- Constraints: Up to 255 ASCII characters",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 8,
                "name": "CreateKeyPair",
                "query": [
                    {
                        "field": "_ckpDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ckpKeyName",
                        "locationName": "KeyName",
                        "type": "field"
                    }
                ],
                "locationPad": 8,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ckpDryRun",
                        "name": "_ckpDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ckpDryRun",
                        "name": "_ckpDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ckpKeyName",
                        "name": "_ckpKeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "-- | A unique name for the key pair.\n--\n-- Constraints: Up to 255 ASCII characters",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createNetworkAclResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cnarNetworkAcl",
                    "name": "_cnarNetworkAcl",
                    "shape": "NetworkAcl",
                    "locationName": "networkAcl",
                    "documentation": "-- | Information about the network ACL.",
                    "typeExposed": "Maybe NetworkAcl",
                    "type": "Maybe NetworkAcl"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateNetworkAclResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnarNetworkAcl",
                        "name": "_cnarNetworkAcl",
                        "shape": "NetworkAcl",
                        "locationName": "networkAcl",
                        "documentation": "-- | Information about the network ACL.",
                        "typeExposed": "Maybe NetworkAcl",
                        "type": "Maybe NetworkAcl"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnarNetworkAcl",
                        "name": "_cnarNetworkAcl",
                        "shape": "NetworkAcl",
                        "locationName": "networkAcl",
                        "documentation": "-- | Information about the network ACL.",
                        "typeExposed": "Maybe NetworkAcl",
                        "type": "Maybe NetworkAcl"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateNetworkAcl.html",
            "namespace": "Network.AWS.EC2.CreateNetworkAcl",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateNetworkAcl",
            "method": "post",
            "documentation": "-- | Creates a network ACL in a VPC. Network ACLs provide an optional layer of\n-- security (in addition to security groups) for the instances in your VPC.\n--\n-- For more information about network ACLs, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html Network ACLs\u003e in the /AmazonVirtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 10,
                "ctor": "createNetworkAcl",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaVpcId",
                        "name": "_cnaVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 7,
                "name": "CreateNetworkAcl",
                "query": [
                    {
                        "field": "_cnaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cnaVpcId",
                        "locationName": "vpcId",
                        "type": "field"
                    }
                ],
                "locationPad": 7,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnaDryRun",
                        "name": "_cnaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnaDryRun",
                        "name": "_cnaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaVpcId",
                        "name": "_cnaVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "createNetworkAclEntryResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreateNetworkAclEntryResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateNetworkAclEntry.html",
            "namespace": "Network.AWS.EC2.CreateNetworkAclEntry",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateNetworkAclEntry",
            "method": "post",
            "documentation": "-- | Creates an entry (a rule) in a network ACL with the specified rule number.\n-- Each network ACL has a set of numbered ingress rules and a separate set of\n-- numbered egress rules. When determining whether a packet should be allowed in\n-- or out of a subnet associated with the ACL, we process the entries in the ACL\n-- according to the rule numbers, in ascending order. Each network ACL has a set\n-- of ingress rules and a separate set of egress rules.\n--\n-- We recommend that you leave room between the rule numbers (for example, 100,\n-- 110, 120, ...), and not number them one right after the other (for example,\n-- 101, 102, 103, ...). This makes it easier to add a rule between existing ones\n-- without having to renumber the rules.\n--\n-- After you add an entry, you can't modify it; you must either replace it, or\n-- create an entry and delete the old one.\n--\n-- For more information about network ACLs, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html Network ACLs\u003e in the /AmazonVirtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "createNetworkAclEntry",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeNetworkAclId",
                        "name": "_cnaeNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the network ACL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeRuleNumber",
                        "name": "_cnaeRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "-- | The rule number for the entry (for example, 100). ACL entries are processed\n-- in ascending order by rule number.\n--\n-- Constraints: Positive integer from 1 to 32766",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeProtocol",
                        "name": "_cnaeProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "-- | The protocol. A value of -1 means all protocols.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeRuleAction",
                        "name": "_cnaeRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "-- | Indicates whether to allow or deny the traffic that matches the rule.",
                        "typeExposed": "RuleAction",
                        "type": "RuleAction"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeEgress",
                        "name": "_cnaeEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "-- | Indicates whether this is an egress rule (rule is applied to traffic leaving\n-- the subnet).",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeCidrBlock",
                        "name": "_cnaeCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The network range to allow or deny, in CIDR notation (for example '172.16.0.0/24').",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "CreateNetworkAclEntry",
                "query": [
                    {
                        "field": "_cnaeDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cnaeNetworkAclId",
                        "locationName": "networkAclId",
                        "type": "field"
                    },
                    {
                        "field": "_cnaeRuleNumber",
                        "locationName": "ruleNumber",
                        "type": "field"
                    },
                    {
                        "field": "_cnaeProtocol",
                        "locationName": "protocol",
                        "type": "field"
                    },
                    {
                        "field": "_cnaeRuleAction",
                        "locationName": "ruleAction",
                        "type": "field"
                    },
                    {
                        "field": "_cnaeEgress",
                        "locationName": "egress",
                        "type": "field"
                    },
                    {
                        "field": "_cnaeCidrBlock",
                        "locationName": "cidrBlock",
                        "type": "field"
                    },
                    {
                        "field": "_cnaeIcmpTypeCode",
                        "locationName": "Icmp",
                        "type": "field"
                    },
                    {
                        "field": "_cnaePortRange",
                        "locationName": "portRange",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnaeDryRun",
                        "name": "_cnaeDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnaeIcmpTypeCode",
                        "name": "_cnaeIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "Icmp",
                        "documentation": "-- | ICMP protocol: The ICMP type and code. Required if specifying ICMP for the\n-- protocol.",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnaePortRange",
                        "name": "_cnaePortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "-- | TCP or UDP protocols: The range of ports the rule applies to.",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeCidrBlock",
                        "name": "_cnaeCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The network range to allow or deny, in CIDR notation (for example '172.16.0.0/24').",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnaeDryRun",
                        "name": "_cnaeDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeEgress",
                        "name": "_cnaeEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "-- | Indicates whether this is an egress rule (rule is applied to traffic leaving\n-- the subnet).",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnaeIcmpTypeCode",
                        "name": "_cnaeIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "Icmp",
                        "documentation": "-- | ICMP protocol: The ICMP type and code. Required if specifying ICMP for the\n-- protocol.",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeNetworkAclId",
                        "name": "_cnaeNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the network ACL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnaePortRange",
                        "name": "_cnaePortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "-- | TCP or UDP protocols: The range of ports the rule applies to.",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeProtocol",
                        "name": "_cnaeProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "-- | The protocol. A value of -1 means all protocols.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeRuleAction",
                        "name": "_cnaeRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "-- | Indicates whether to allow or deny the traffic that matches the rule.",
                        "typeExposed": "RuleAction",
                        "type": "RuleAction"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cnaeRuleNumber",
                        "name": "_cnaeRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "-- | The rule number for the entry (for example, 100). ACL entries are processed\n-- in ascending order by rule number.\n--\n-- Constraints: Positive integer from 1 to 32766",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createNetworkInterfaceResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cnirNetworkInterface",
                    "name": "_cnirNetworkInterface",
                    "shape": "NetworkInterface",
                    "locationName": "networkInterface",
                    "documentation": "-- | Information about the network interface.",
                    "typeExposed": "Maybe NetworkInterface",
                    "type": "Maybe NetworkInterface"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateNetworkInterfaceResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnirNetworkInterface",
                        "name": "_cnirNetworkInterface",
                        "shape": "NetworkInterface",
                        "locationName": "networkInterface",
                        "documentation": "-- | Information about the network interface.",
                        "typeExposed": "Maybe NetworkInterface",
                        "type": "Maybe NetworkInterface"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cnirNetworkInterface",
                        "name": "_cnirNetworkInterface",
                        "shape": "NetworkInterface",
                        "locationName": "networkInterface",
                        "documentation": "-- | Information about the network interface.",
                        "typeExposed": "Maybe NetworkInterface",
                        "type": "Maybe NetworkInterface"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateNetworkInterface.html",
            "namespace": "Network.AWS.EC2.CreateNetworkInterface",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateNetworkInterface",
            "method": "post",
            "documentation": "-- | Creates a network interface in the specified subnet.\n--\n-- For more information about network interfaces, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html Elastic Network Interfaces\u003e\n-- in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 34,
                "ctor": "createNetworkInterface",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cniSubnetId",
                        "name": "_cniSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet to associate with the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 31,
                "name": "CreateNetworkInterface",
                "query": [
                    {
                        "field": "_cniSubnetId",
                        "locationName": "subnetId",
                        "type": "field"
                    },
                    {
                        "field": "_cniDescription",
                        "locationName": "description",
                        "type": "field"
                    },
                    {
                        "field": "_cniPrivateIpAddress",
                        "locationName": "privateIpAddress",
                        "type": "field"
                    },
                    {
                        "field": "_cniGroups",
                        "locationName": "SecurityGroupId",
                        "type": "field"
                    },
                    {
                        "field": "_cniPrivateIpAddresses",
                        "locationName": "privateIpAddresses",
                        "type": "field"
                    },
                    {
                        "field": "_cniSecondaryPrivateIpAddressCount",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "type": "field"
                    },
                    {
                        "field": "_cniDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    }
                ],
                "locationPad": 31,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cniDescription",
                        "name": "_cniDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description for the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cniPrivateIpAddress",
                        "name": "_cniPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The primary private IP address of the network interface. If you don't specify\n-- an IP address, Amazon EC2 selects one for you from the subnet range. If you\n-- specify an IP address, you cannot indicate any IP addresses specified in 'privateIpAddresses' as primary (only one IP address can be designated as primary).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cniGroups",
                        "name": "_cniGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "-- | The IDs of one or more security groups.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cniPrivateIpAddresses",
                        "name": "_cniPrivateIpAddresses",
                        "shape": "PrivateIpAddressSpecificationList",
                        "locationName": "privateIpAddresses",
                        "documentation": "-- | One or more private IP addresses.",
                        "typeExposed": "[PrivateIpAddressSpecification]",
                        "type": "List \"item\" PrivateIpAddressSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cniSecondaryPrivateIpAddressCount",
                        "name": "_cniSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "-- | The number of secondary private IP addresses to assign to a network\n-- interface. When you specify a number of secondary IP addresses, Amazon EC2\n-- selects these IP addresses within the subnet range. You can't specify this\n-- option and specify more than one private IP address using 'privateIpAddresses'.\n--\n-- The number of IP addresses you can assign to a network interface varies by\n-- instance type. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI Private IP Addresses Per ENI PerInstance Type\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cniDryRun",
                        "name": "_cniDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cniDescription",
                        "name": "_cniDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description for the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cniDryRun",
                        "name": "_cniDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cniGroups",
                        "name": "_cniGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "-- | The IDs of one or more security groups.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cniPrivateIpAddress",
                        "name": "_cniPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The primary private IP address of the network interface. If you don't specify\n-- an IP address, Amazon EC2 selects one for you from the subnet range. If you\n-- specify an IP address, you cannot indicate any IP addresses specified in 'privateIpAddresses' as primary (only one IP address can be designated as primary).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cniPrivateIpAddresses",
                        "name": "_cniPrivateIpAddresses",
                        "shape": "PrivateIpAddressSpecificationList",
                        "locationName": "privateIpAddresses",
                        "documentation": "-- | One or more private IP addresses.",
                        "typeExposed": "[PrivateIpAddressSpecification]",
                        "type": "List \"item\" PrivateIpAddressSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cniSecondaryPrivateIpAddressCount",
                        "name": "_cniSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "-- | The number of secondary private IP addresses to assign to a network\n-- interface. When you specify a number of secondary IP addresses, Amazon EC2\n-- selects these IP addresses within the subnet range. You can't specify this\n-- option and specify more than one private IP address using 'privateIpAddresses'.\n--\n-- The number of IP addresses you can assign to a network interface varies by\n-- instance type. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI Private IP Addresses Per ENI PerInstance Type\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cniSubnetId",
                        "name": "_cniSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet to associate with the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "createPlacementGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreatePlacementGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreatePlacementGroup.html",
            "namespace": "Network.AWS.EC2.CreatePlacementGroup",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreatePlacementGroup",
            "method": "post",
            "documentation": "-- | Creates a placement group that you launch cluster instances into. You must\n-- give the group a name that's unique within the scope of your account.\n--\n-- For more information about placement groups and cluster instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html Cluster Instances\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "createPlacementGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cpgGroupName",
                        "name": "_cpgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | A name for the placement group.\n--\n-- Constraints: Up to 255 ASCII characters",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cpgStrategy",
                        "name": "_cpgStrategy",
                        "shape": "PlacementStrategy",
                        "locationName": "strategy",
                        "documentation": "-- | The placement strategy.",
                        "typeExposed": "PlacementStrategy",
                        "type": "PlacementStrategy"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "CreatePlacementGroup",
                "query": [
                    {
                        "field": "_cpgDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cpgGroupName",
                        "locationName": "groupName",
                        "type": "field"
                    },
                    {
                        "field": "_cpgStrategy",
                        "locationName": "strategy",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgDryRun",
                        "name": "_cpgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cpgDryRun",
                        "name": "_cpgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cpgGroupName",
                        "name": "_cpgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | A name for the placement group.\n--\n-- Constraints: Up to 255 ASCII characters",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cpgStrategy",
                        "name": "_cpgStrategy",
                        "shape": "PlacementStrategy",
                        "locationName": "strategy",
                        "documentation": "-- | The placement strategy.",
                        "typeExposed": "PlacementStrategy",
                        "type": "PlacementStrategy"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createReservedInstancesListingResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "crilr1ReservedInstancesListings",
                    "name": "_crilr1ReservedInstancesListings",
                    "shape": "ReservedInstancesListingList",
                    "locationName": "reservedInstancesListingsSet",
                    "documentation": "-- | Information about the Reserved Instances listing.",
                    "typeExposed": "[ReservedInstancesListing]",
                    "type": "List \"item\" ReservedInstancesListing"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateReservedInstancesListingResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "crilr1ReservedInstancesListings",
                        "name": "_crilr1ReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "-- | Information about the Reserved Instances listing.",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "List \"item\" ReservedInstancesListing"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "crilr1ReservedInstancesListings",
                        "name": "_crilr1ReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "-- | Information about the Reserved Instances listing.",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "List \"item\" ReservedInstancesListing"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateReservedInstancesListing.html",
            "namespace": "Network.AWS.EC2.CreateReservedInstancesListing",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateReservedInstancesListing",
            "method": "post",
            "documentation": "-- | Creates a listing for Amazon EC2 Reserved Instances to be sold in the\n-- Reserved Instance Marketplace. You can submit one Reserved Instance listing\n-- at a time. To get a list of your Reserved Instances, you can use the 'DescribeReservedInstances' operation.\n--\n-- The Reserved Instance Marketplace matches sellers who want to resell\n-- Reserved Instance capacity that they no longer need with buyers who want to\n-- purchase additional capacity. Reserved Instances bought and sold through the\n-- Reserved Instance Marketplace work like any other Reserved Instances.\n--\n-- To sell your Reserved Instances, you must first register as a Seller in the\n-- Reserved Instance Marketplace. After completing the registration process, you\n-- can create a Reserved Instance Marketplace listing of some or all of your\n-- Reserved Instances, and specify the upfront price to receive for them. Your\n-- Reserved Instance listings then become available for purchase. To view the\n-- details of your Reserved Instance listing, you can use the 'DescribeReservedInstancesListings' operation.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html Reserved Instance Marketplace\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 24,
                "ctor": "createReservedInstancesListing",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crilReservedInstancesId",
                        "name": "_crilReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The ID of the active Reserved Instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crilInstanceCount",
                        "name": "_crilInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "-- | The number of instances that are a part of a Reserved Instance account to be\n-- listed in the Reserved Instance Marketplace. This number should be less than\n-- or equal to the instance count associated with the Reserved Instance ID\n-- specified in this call.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crilClientToken",
                        "name": "_crilClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | Unique, case-sensitive identifier you provide to ensure idempotency of your\n-- listings. This helps avoid duplicate listings. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html Ensuring Idempotency\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "CreateReservedInstancesListing",
                "query": [
                    {
                        "field": "_crilReservedInstancesId",
                        "locationName": "reservedInstancesId",
                        "type": "field"
                    },
                    {
                        "field": "_crilInstanceCount",
                        "locationName": "instanceCount",
                        "type": "field"
                    },
                    {
                        "field": "_crilPriceSchedules",
                        "locationName": "priceSchedules",
                        "type": "field"
                    },
                    {
                        "field": "_crilClientToken",
                        "locationName": "clientToken",
                        "type": "field"
                    }
                ],
                "locationPad": 20,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "crilPriceSchedules",
                        "name": "_crilPriceSchedules",
                        "shape": "PriceScheduleSpecificationList",
                        "locationName": "priceSchedules",
                        "documentation": "-- | A list specifying the price of the Reserved Instance for each month remaining\n-- in the Reserved Instance term.",
                        "typeExposed": "[PriceScheduleSpecification]",
                        "type": "List \"item\" PriceScheduleSpecification"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crilClientToken",
                        "name": "_crilClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | Unique, case-sensitive identifier you provide to ensure idempotency of your\n-- listings. This helps avoid duplicate listings. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html Ensuring Idempotency\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crilInstanceCount",
                        "name": "_crilInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "-- | The number of instances that are a part of a Reserved Instance account to be\n-- listed in the Reserved Instance Marketplace. This number should be less than\n-- or equal to the instance count associated with the Reserved Instance ID\n-- specified in this call.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "crilPriceSchedules",
                        "name": "_crilPriceSchedules",
                        "shape": "PriceScheduleSpecificationList",
                        "locationName": "priceSchedules",
                        "documentation": "-- | A list specifying the price of the Reserved Instance for each month remaining\n-- in the Reserved Instance term.",
                        "typeExposed": "[PriceScheduleSpecification]",
                        "type": "List \"item\" PriceScheduleSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crilReservedInstancesId",
                        "name": "_crilReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The ID of the active Reserved Instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "createRouteResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreateRouteResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateRoute.html",
            "namespace": "Network.AWS.EC2.CreateRoute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateRoute",
            "method": "post",
            "documentation": "-- | Creates a route in a route table within a VPC.\n--\n-- You must specify one of the following targets: Internet gateway or virtual\n-- private gateway, NAT instance, VPC peering connection, or network interface.\n--\n-- When determining how to route traffic, we use the route with the most\n-- specific match. For example, let's say the traffic is destined for '192.0.2.3',\n-- and the route table includes the following two routes:\n--\n-- '192.0.2.0/24' (goes to some target A)\n--\n-- '192.0.2.0/28' (goes to some target B)\n--\n-- Both routes apply to the traffic destined for '192.0.2.3'. However, the\n-- second route in the list covers a smaller number of IP addresses and is\n-- therefore more specific, so we use that route to determine where to target\n-- the traffic.\n--\n-- For more information about route tables, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html Route Tables\u003e in the /AmazonVirtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "createRoute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crRouteTableId",
                        "name": "_crRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table for the route.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crDestinationCidrBlock",
                        "name": "_crDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "-- | The CIDR address block used for the destination match. Routing decisions are\n-- based on the most specific match.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "CreateRoute",
                "query": [
                    {
                        "field": "_crDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_crRouteTableId",
                        "locationName": "routeTableId",
                        "type": "field"
                    },
                    {
                        "field": "_crDestinationCidrBlock",
                        "locationName": "destinationCidrBlock",
                        "type": "field"
                    },
                    {
                        "field": "_crGatewayId",
                        "locationName": "gatewayId",
                        "type": "field"
                    },
                    {
                        "field": "_crInstanceId",
                        "locationName": "instanceId",
                        "type": "field"
                    },
                    {
                        "field": "_crNetworkInterfaceId",
                        "locationName": "networkInterfaceId",
                        "type": "field"
                    },
                    {
                        "field": "_crVpcPeeringConnectionId",
                        "locationName": "vpcPeeringConnectionId",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crDryRun",
                        "name": "_crDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crGatewayId",
                        "name": "_crGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "-- | The ID of an Internet gateway or virtual private gateway attached to your VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crInstanceId",
                        "name": "_crInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of a NAT instance in your VPC. The operation fails if you specify an\n-- instance ID unless exactly one network interface is attached.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crNetworkInterfaceId",
                        "name": "_crNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of a network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crVpcPeeringConnectionId",
                        "name": "_crVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of a VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crDestinationCidrBlock",
                        "name": "_crDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "-- | The CIDR address block used for the destination match. Routing decisions are\n-- based on the most specific match.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crDryRun",
                        "name": "_crDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crGatewayId",
                        "name": "_crGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "-- | The ID of an Internet gateway or virtual private gateway attached to your VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crInstanceId",
                        "name": "_crInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of a NAT instance in your VPC. The operation fails if you specify an\n-- instance ID unless exactly one network interface is attached.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crNetworkInterfaceId",
                        "name": "_crNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of a network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crRouteTableId",
                        "name": "_crRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table for the route.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crVpcPeeringConnectionId",
                        "name": "_crVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of a VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createRouteTableResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "crtrRouteTable",
                    "name": "_crtrRouteTable",
                    "shape": "RouteTable",
                    "locationName": "routeTable",
                    "documentation": "-- | Information about the route table.",
                    "typeExposed": "Maybe RouteTable",
                    "type": "Maybe RouteTable"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateRouteTableResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crtrRouteTable",
                        "name": "_crtrRouteTable",
                        "shape": "RouteTable",
                        "locationName": "routeTable",
                        "documentation": "-- | Information about the route table.",
                        "typeExposed": "Maybe RouteTable",
                        "type": "Maybe RouteTable"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crtrRouteTable",
                        "name": "_crtrRouteTable",
                        "shape": "RouteTable",
                        "locationName": "routeTable",
                        "documentation": "-- | Information about the route table.",
                        "typeExposed": "Maybe RouteTable",
                        "type": "Maybe RouteTable"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateRouteTable.html",
            "namespace": "Network.AWS.EC2.CreateRouteTable",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateRouteTable",
            "method": "post",
            "documentation": "-- | Creates a route table for the specified VPC. After you create a route table,\n-- you can add routes and associate the table with a subnet.\n--\n-- For more information about route tables, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html Route Tables\u003e in the /AmazonVirtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 10,
                "ctor": "createRouteTable",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crtVpcId",
                        "name": "_crtVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 7,
                "name": "CreateRouteTable",
                "query": [
                    {
                        "field": "_crtDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_crtVpcId",
                        "locationName": "vpcId",
                        "type": "field"
                    }
                ],
                "locationPad": 7,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crtDryRun",
                        "name": "_crtDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "crtDryRun",
                        "name": "_crtDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "crtVpcId",
                        "name": "_crtVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createSecurityGroupResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "error",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": true,
                    "lens": "csgrGroupId",
                    "name": "_csgrGroupId",
                    "shape": "String",
                    "locationName": "groupId",
                    "documentation": "-- | The ID of the security group.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csgrGroupId",
                        "name": "_csgrGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateSecurityGroupResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csgrGroupId",
                        "name": "_csgrGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateSecurityGroup.html",
            "namespace": "Network.AWS.EC2.CreateSecurityGroup",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateSecurityGroup",
            "method": "post",
            "documentation": "-- | Creates a security group.\n--\n-- A security group is for use with instances either in the EC2-Classic\n-- platform or in a specific VPC. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html Amazon EC2 SecurityGroups\u003e in the /Amazon Elastic Compute Cloud User Guide/ and \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html Security Groups forYour VPC\u003e in the /Amazon Virtual Private Cloud User Guide/.\n--\n-- EC2-Classic: You can have up to 500 security groups.\n--\n-- EC2-VPC: You can create up to 100 security groups per VPC.\n--\n-- When you create a security group, you specify a friendly name of your\n-- choice. You can have a security group for use in EC2-Classic with the same\n-- name as a security group for use in a VPC. However, you can't have two\n-- security groups for use in EC2-Classic with the same name or two security\n-- groups for use in a VPC with the same name.\n--\n-- You have a default security group for use in EC2-Classic and a default\n-- security group for use in your VPC. If you don't specify a security group\n-- when you launch an instance, the instance is launched into the appropriate\n-- default security group. A default security group includes a default rule that\n-- grants instances unrestricted network access to each other.\n--\n-- You can add or remove rules from your security groups using 'AuthorizeSecurityGroupIngress', 'AuthorizeSecurityGroupEgress', 'RevokeSecurityGroupIngress', and 'RevokeSecurityGroupEgress'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "createSecurityGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csgGroupName",
                        "name": "_csgGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the security group.\n--\n-- Constraints: Up to 255 characters in length\n--\n-- Constraints for EC2-Classic: ASCII characters\n--\n-- Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csgDescription",
                        "name": "_csgDescription",
                        "shape": "String",
                        "locationName": "GroupDescription",
                        "documentation": "-- | A description for the security group. This is informational only.\n--\n-- Constraints: Up to 255 characters in length\n--\n-- Constraints for EC2-Classic: ASCII characters\n--\n-- Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "CreateSecurityGroup",
                "query": [
                    {
                        "field": "_csgDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_csgGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_csgDescription",
                        "locationName": "GroupDescription",
                        "type": "field"
                    },
                    {
                        "field": "_csgVpcId",
                        "locationName": "VpcId",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csgDryRun",
                        "name": "_csgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csgVpcId",
                        "name": "_csgVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | [EC2-VPC] The ID of the VPC. Required for EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csgDescription",
                        "name": "_csgDescription",
                        "shape": "String",
                        "locationName": "GroupDescription",
                        "documentation": "-- | A description for the security group. This is informational only.\n--\n-- Constraints: Up to 255 characters in length\n--\n-- Constraints for EC2-Classic: ASCII characters\n--\n-- Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csgDryRun",
                        "name": "_csgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csgGroupName",
                        "name": "_csgGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "-- | The name of the security group.\n--\n-- Constraints: Up to 255 characters in length\n--\n-- Constraints for EC2-Classic: ASCII characters\n--\n-- Constraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&;{}!$*",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csgVpcId",
                        "name": "_csgVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | [EC2-VPC] The ID of the VPC. Required for EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "createSnapshotResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1SnapshotId",
                        "name": "_csr1SnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The ID of the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1VolumeId",
                        "name": "_csr1VolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1State",
                        "name": "_csr1State",
                        "shape": "SnapshotState",
                        "locationName": "status",
                        "documentation": "-- | The snapshot state.",
                        "typeExposed": "SnapshotState",
                        "type": "SnapshotState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1StartTime",
                        "name": "_csr1StartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "-- | The time stamp when the snapshot was initiated.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1Progress",
                        "name": "_csr1Progress",
                        "shape": "String",
                        "locationName": "progress",
                        "documentation": "-- | The progress of the snapshot, as a percentage.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1OwnerId",
                        "name": "_csr1OwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the Amazon EBS snapshot owner.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1Description",
                        "name": "_csr1Description",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description for the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1VolumeSize",
                        "name": "_csr1VolumeSize",
                        "shape": "Integer",
                        "locationName": "volumeSize",
                        "documentation": "-- | The size of the volume, in GiB.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1Encrypted",
                        "name": "_csr1Encrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Indicates whether the snapshot is encrypted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateSnapshotResponse",
                "resultWrapper": null,
                "locationPad": 12,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csr1OwnerAlias",
                        "name": "_csr1OwnerAlias",
                        "shape": "String",
                        "locationName": "ownerAlias",
                        "documentation": "-- | The AWS account alias (for example, 'amazon', 'self') or AWS account ID that owns\n-- the snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "csr1Tags",
                        "name": "_csr1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the snapshot.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csr1KmsKeyId",
                        "name": "_csr1KmsKeyId",
                        "shape": "String",
                        "locationName": "kmsKeyId",
                        "documentation": "-- | The full ARN of the AWS Key Management Service (KMS) Customer Master Key\n-- (CMK) that was used to protect the volume encryption key for the parent\n-- volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1Description",
                        "name": "_csr1Description",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | The description for the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1Encrypted",
                        "name": "_csr1Encrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Indicates whether the snapshot is encrypted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csr1KmsKeyId",
                        "name": "_csr1KmsKeyId",
                        "shape": "String",
                        "locationName": "kmsKeyId",
                        "documentation": "-- | The full ARN of the AWS Key Management Service (KMS) Customer Master Key\n-- (CMK) that was used to protect the volume encryption key for the parent\n-- volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csr1OwnerAlias",
                        "name": "_csr1OwnerAlias",
                        "shape": "String",
                        "locationName": "ownerAlias",
                        "documentation": "-- | The AWS account alias (for example, 'amazon', 'self') or AWS account ID that owns\n-- the snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1OwnerId",
                        "name": "_csr1OwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The AWS account ID of the Amazon EBS snapshot owner.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1Progress",
                        "name": "_csr1Progress",
                        "shape": "String",
                        "locationName": "progress",
                        "documentation": "-- | The progress of the snapshot, as a percentage.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1SnapshotId",
                        "name": "_csr1SnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The ID of the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1StartTime",
                        "name": "_csr1StartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "-- | The time stamp when the snapshot was initiated.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1State",
                        "name": "_csr1State",
                        "shape": "SnapshotState",
                        "locationName": "status",
                        "documentation": "-- | The snapshot state.",
                        "typeExposed": "SnapshotState",
                        "type": "SnapshotState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "csr1Tags",
                        "name": "_csr1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the snapshot.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1VolumeId",
                        "name": "_csr1VolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csr1VolumeSize",
                        "name": "_csr1VolumeSize",
                        "shape": "Integer",
                        "locationName": "volumeSize",
                        "documentation": "-- | The size of the volume, in GiB.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateSnapshot.html",
            "namespace": "Network.AWS.EC2.CreateSnapshot",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateSnapshot",
            "method": "post",
            "documentation": "-- | Creates a snapshot of an Amazon EBS volume and stores it in Amazon S3. You\n-- can use snapshots for backups, to make copies of Amazon EBS volumes, and to\n-- save data before shutting down an instance.\n--\n-- When a snapshot is created, any AWS Marketplace product codes that are\n-- associated with the source volume are propagated to the snapshot.\n--\n-- You can take a snapshot of an attached volume that is in use. However,\n-- snapshots only capture data that has been written to your Amazon EBS volume\n-- at the time the snapshot command is issued; this may exclude any data that\n-- has been cached by any applications or the operating system. If you can pause\n-- any file systems on the volume long enough to take a snapshot, your snapshot\n-- should be complete. However, if you cannot pause all file writes to the\n-- volume, you should unmount the volume from within the instance, issue the\n-- snapshot command, and then remount the volume to ensure a consistent and\n-- complete snapshot. You may remount and use your volume while the snapshot\n-- status is 'pending'.\n--\n-- To create a snapshot for Amazon EBS volumes that serve as root devices, you\n-- should stop the instance before taking the snapshot.\n--\n-- Snapshots that are taken from encrypted volumes are automatically encrypted.\n-- Volumes that are created from encrypted snapshots are also automatically\n-- encrypted. Your encrypted volumes and any associated snapshots always remain\n-- protected.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html Amazon Elastic Block Store\u003e and \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html Amazon EBSEncryption\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "createSnapshot",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cs2VolumeId",
                        "name": "_cs2VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the Amazon EBS volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "CreateSnapshot",
                "query": [
                    {
                        "field": "_cs2DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cs2VolumeId",
                        "locationName": "VolumeId",
                        "type": "field"
                    },
                    {
                        "field": "_cs2Description",
                        "locationName": "Description",
                        "type": "field"
                    }
                ],
                "locationPad": 12,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cs2DryRun",
                        "name": "_cs2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cs2Description",
                        "name": "_cs2Description",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description for the snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cs2Description",
                        "name": "_cs2Description",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "-- | A description for the snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cs2DryRun",
                        "name": "_cs2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cs2VolumeId",
                        "name": "_cs2VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the Amazon EBS volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createSpotDatafeedSubscriptionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "csdsrSpotDatafeedSubscription",
                    "name": "_csdsrSpotDatafeedSubscription",
                    "shape": "SpotDatafeedSubscription",
                    "locationName": "spotDatafeedSubscription",
                    "documentation": "-- | The Spot Instance datafeed subscription.",
                    "typeExposed": "Maybe SpotDatafeedSubscription",
                    "type": "Maybe SpotDatafeedSubscription"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateSpotDatafeedSubscriptionResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csdsrSpotDatafeedSubscription",
                        "name": "_csdsrSpotDatafeedSubscription",
                        "shape": "SpotDatafeedSubscription",
                        "locationName": "spotDatafeedSubscription",
                        "documentation": "-- | The Spot Instance datafeed subscription.",
                        "typeExposed": "Maybe SpotDatafeedSubscription",
                        "type": "Maybe SpotDatafeedSubscription"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csdsrSpotDatafeedSubscription",
                        "name": "_csdsrSpotDatafeedSubscription",
                        "shape": "SpotDatafeedSubscription",
                        "locationName": "spotDatafeedSubscription",
                        "documentation": "-- | The Spot Instance datafeed subscription.",
                        "typeExposed": "Maybe SpotDatafeedSubscription",
                        "type": "Maybe SpotDatafeedSubscription"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateSpotDatafeedSubscription.html",
            "namespace": "Network.AWS.EC2.CreateSpotDatafeedSubscription",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateSpotDatafeedSubscription",
            "method": "post",
            "documentation": "-- | Creates a datafeed for Spot Instances, enabling you to view Spot Instance\n-- usage logs. You can create one data feed per AWS account. For more\n-- information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html Spot Instances\u003e in the /Amazon Elastic Compute Cloud User Guide/\n-- .",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 11,
                "ctor": "createSpotDatafeedSubscription",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csdsBucket",
                        "name": "_csdsBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "-- | The Amazon S3 bucket in which to store the Spot Instance datafeed.\n--\n-- Constraints: Must be a valid bucket associated with your AWS account.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 7,
                "name": "CreateSpotDatafeedSubscription",
                "query": [
                    {
                        "field": "_csdsDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_csdsBucket",
                        "locationName": "bucket",
                        "type": "field"
                    },
                    {
                        "field": "_csdsPrefix",
                        "locationName": "prefix",
                        "type": "field"
                    }
                ],
                "locationPad": 7,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csdsDryRun",
                        "name": "_csdsDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csdsPrefix",
                        "name": "_csdsPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "-- | A prefix for the datafeed file names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "csdsBucket",
                        "name": "_csdsBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "-- | The Amazon S3 bucket in which to store the Spot Instance datafeed.\n--\n-- Constraints: Must be a valid bucket associated with your AWS account.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csdsDryRun",
                        "name": "_csdsDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csdsPrefix",
                        "name": "_csdsPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "-- | A prefix for the datafeed file names.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createSubnetResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "csrSubnet",
                    "name": "_csrSubnet",
                    "shape": "Subnet",
                    "locationName": "subnet",
                    "documentation": "-- | Information about the subnet.",
                    "typeExposed": "Maybe Subnet",
                    "type": "Maybe Subnet"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateSubnetResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csrSubnet",
                        "name": "_csrSubnet",
                        "shape": "Subnet",
                        "locationName": "subnet",
                        "documentation": "-- | Information about the subnet.",
                        "typeExposed": "Maybe Subnet",
                        "type": "Maybe Subnet"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "csrSubnet",
                        "name": "_csrSubnet",
                        "shape": "Subnet",
                        "locationName": "subnet",
                        "documentation": "-- | Information about the subnet.",
                        "typeExposed": "Maybe Subnet",
                        "type": "Maybe Subnet"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateSubnet.html",
            "namespace": "Network.AWS.EC2.CreateSubnet",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateSubnet",
            "method": "post",
            "documentation": "-- | Creates a subnet in an existing VPC.\n--\n-- When you create each subnet, you provide the VPC ID and the CIDR block you\n-- want for the subnet. After you create a subnet, you can't change its CIDR\n-- block. The subnet's CIDR block can be the same as the VPC's CIDR block\n-- (assuming you want only a single subnet in the VPC), or a subset of the VPC's\n-- CIDR block. If you create more than one subnet in a VPC, the subnets' CIDR\n-- blocks must not overlap. The smallest subnet (and VPC) you can create uses a\n-- /28 netmask (16 IP addresses), and the largest uses a /16 netmask (65,536 IP\n-- addresses).\n--\n-- AWS reserves both the first four and the last IP address in each subnet's\n-- CIDR block. They're not available for use.\n--\n-- If you add more than one subnet to a VPC, they're set up in a star topology\n-- with a logical router in the middle.\n--\n-- If you launch an instance in a VPC using an Amazon EBS-backed AMI, the IP\n-- address doesn't change if you stop and restart the instance (unlike a similar\n-- instance launched outside a VPC, which gets a new IP address when restarted).\n-- It's therefore possible to have a subnet with no running instances (they're\n-- all stopped), but no remaining IP addresses available.\n--\n-- For more information about subnets, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html Your VPC and Subnets\u003e in the /AmazonVirtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "createSubnet",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cs1VpcId",
                        "name": "_cs1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cs1CidrBlock",
                        "name": "_cs1CidrBlock",
                        "shape": "String",
                        "locationName": "CidrBlock",
                        "documentation": "-- | The network range for the subnet, in CIDR notation. For example, '10.0.0.0/24'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "CreateSubnet",
                "query": [
                    {
                        "field": "_cs1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cs1VpcId",
                        "locationName": "VpcId",
                        "type": "field"
                    },
                    {
                        "field": "_cs1CidrBlock",
                        "locationName": "CidrBlock",
                        "type": "field"
                    },
                    {
                        "field": "_cs1AvailabilityZone",
                        "locationName": "AvailabilityZone",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cs1DryRun",
                        "name": "_cs1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cs1AvailabilityZone",
                        "name": "_cs1AvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Availability Zone for the subnet.\n--\n-- Default: Amazon EC2 selects one for you (recommended).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cs1AvailabilityZone",
                        "name": "_cs1AvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Availability Zone for the subnet.\n--\n-- Default: Amazon EC2 selects one for you (recommended).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cs1CidrBlock",
                        "name": "_cs1CidrBlock",
                        "shape": "String",
                        "locationName": "CidrBlock",
                        "documentation": "-- | The network range for the subnet, in CIDR notation. For example, '10.0.0.0/24'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cs1DryRun",
                        "name": "_cs1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cs1VpcId",
                        "name": "_cs1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "createTagsResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreateTagsResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateTags.html",
            "namespace": "Network.AWS.EC2.CreateTags",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateTags",
            "method": "post",
            "documentation": "-- | Adds or overwrites one or more tags for the specified EC2 resource or\n-- resources. Each resource can have a maximum of 10 tags. Each tag consists of\n-- a key and optional value. Tag keys must be unique per resource.\n--\n-- For more information about tags, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html Tagging Your Resources\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "createTags",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "CreateTags",
                "query": [
                    {
                        "field": "_ct1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ct1Resources",
                        "locationName": "ResourceId",
                        "type": "field"
                    },
                    {
                        "field": "_ct1Tags",
                        "locationName": "Tag",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ct1DryRun",
                        "name": "_ct1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ct1Resources",
                        "name": "_ct1Resources",
                        "shape": "ResourceIdList",
                        "locationName": "ResourceId",
                        "documentation": "-- | The IDs of one or more resources to tag. For example, ami-1a2b3c4d.",
                        "typeExposed": "[Text]",
                        "type": "List \"ResourceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ct1Tags",
                        "name": "_ct1Tags",
                        "shape": "TagList",
                        "locationName": "Tag",
                        "documentation": "-- | One or more tags. The 'value' parameter is required, but if you don't want the\n-- tag to have a value, specify the parameter with no value, and we set the\n-- value to an empty string.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ct1DryRun",
                        "name": "_ct1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ct1Resources",
                        "name": "_ct1Resources",
                        "shape": "ResourceIdList",
                        "locationName": "ResourceId",
                        "documentation": "-- | The IDs of one or more resources to tag. For example, ami-1a2b3c4d.",
                        "typeExposed": "[Text]",
                        "type": "List \"ResourceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ct1Tags",
                        "name": "_ct1Tags",
                        "shape": "TagList",
                        "locationName": "Tag",
                        "documentation": "-- | One or more tags. The 'value' parameter is required, but if you don't want the\n-- tag to have a value, specify the parameter with no value, and we set the\n-- value to an empty string.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 20,
                "ctor": "createVolumeResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrVolumeId",
                        "name": "_cvrVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrSize",
                        "name": "_cvrSize",
                        "shape": "Integer",
                        "locationName": "size",
                        "documentation": "-- | The size of the volume, in GiBs.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrSnapshotId",
                        "name": "_cvrSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The snapshot from which the volume was created, if applicable.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrAvailabilityZone",
                        "name": "_cvrAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone for the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrState",
                        "name": "_cvrState",
                        "shape": "VolumeState",
                        "locationName": "status",
                        "documentation": "-- | The volume state.",
                        "typeExposed": "VolumeState",
                        "type": "VolumeState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrCreateTime",
                        "name": "_cvrCreateTime",
                        "shape": "DateTime",
                        "locationName": "createTime",
                        "documentation": "-- | The time stamp when volume creation was initiated.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrVolumeType",
                        "name": "_cvrVolumeType",
                        "shape": "VolumeType",
                        "locationName": "volumeType",
                        "documentation": "-- | The volume type. This can be 'gp2' for General Purpose (SSD) volumes, 'io1' for\n-- Provisioned IOPS (SSD) volumes, or 'standard' for Magnetic volumes.",
                        "typeExposed": "VolumeType",
                        "type": "VolumeType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrEncrypted",
                        "name": "_cvrEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Indicates whether the volume is encrypted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateVolumeResponse",
                "resultWrapper": null,
                "locationPad": 17,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cvrAttachments",
                        "name": "_cvrAttachments",
                        "shape": "VolumeAttachmentList",
                        "locationName": "attachmentSet",
                        "documentation": null,
                        "typeExposed": "[VolumeAttachment]",
                        "type": "List \"item\" VolumeAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cvrTags",
                        "name": "_cvrTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the volume.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvrIops",
                        "name": "_cvrIops",
                        "shape": "Integer",
                        "locationName": "iops",
                        "documentation": "-- | The number of I/O operations per second (IOPS) that the volume supports. For\n-- Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are\n-- provisioned for the volume. For General Purpose (SSD) volumes, this\n-- represents the baseline performance of the volume and the rate at which the\n-- volume accumulates I/O credits for bursting. For more information on General\n-- Purpose (SSD) baseline performance, I/O credits, and bursting, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html Amazon EBSVolume Types\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- Constraint: Range is 100 to 4000 for Provisioned IOPS (SSD) volumes and 3 to\n-- 3072 for General Purpose (SSD) volumes.\n--\n-- Condition: This parameter is required for requests to create 'io1' volumes; it\n-- is not used in requests to create 'standard' or 'gp2' volumes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvrKmsKeyId",
                        "name": "_cvrKmsKeyId",
                        "shape": "String",
                        "locationName": "kmsKeyId",
                        "documentation": "-- | The full ARN of the AWS Key Management Service (KMS) Customer Master Key\n-- (CMK) that was used to protect the volume encryption key for the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cvrAttachments",
                        "name": "_cvrAttachments",
                        "shape": "VolumeAttachmentList",
                        "locationName": "attachmentSet",
                        "documentation": null,
                        "typeExposed": "[VolumeAttachment]",
                        "type": "List \"item\" VolumeAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrAvailabilityZone",
                        "name": "_cvrAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone for the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrCreateTime",
                        "name": "_cvrCreateTime",
                        "shape": "DateTime",
                        "locationName": "createTime",
                        "documentation": "-- | The time stamp when volume creation was initiated.",
                        "typeExposed": "UTCTime",
                        "type": "ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrEncrypted",
                        "name": "_cvrEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Indicates whether the volume is encrypted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvrIops",
                        "name": "_cvrIops",
                        "shape": "Integer",
                        "locationName": "iops",
                        "documentation": "-- | The number of I/O operations per second (IOPS) that the volume supports. For\n-- Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are\n-- provisioned for the volume. For General Purpose (SSD) volumes, this\n-- represents the baseline performance of the volume and the rate at which the\n-- volume accumulates I/O credits for bursting. For more information on General\n-- Purpose (SSD) baseline performance, I/O credits, and bursting, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html Amazon EBSVolume Types\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- Constraint: Range is 100 to 4000 for Provisioned IOPS (SSD) volumes and 3 to\n-- 3072 for General Purpose (SSD) volumes.\n--\n-- Condition: This parameter is required for requests to create 'io1' volumes; it\n-- is not used in requests to create 'standard' or 'gp2' volumes.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvrKmsKeyId",
                        "name": "_cvrKmsKeyId",
                        "shape": "String",
                        "locationName": "kmsKeyId",
                        "documentation": "-- | The full ARN of the AWS Key Management Service (KMS) Customer Master Key\n-- (CMK) that was used to protect the volume encryption key for the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrSize",
                        "name": "_cvrSize",
                        "shape": "Integer",
                        "locationName": "size",
                        "documentation": "-- | The size of the volume, in GiBs.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrSnapshotId",
                        "name": "_cvrSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The snapshot from which the volume was created, if applicable.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrState",
                        "name": "_cvrState",
                        "shape": "VolumeState",
                        "locationName": "status",
                        "documentation": "-- | The volume state.",
                        "typeExposed": "VolumeState",
                        "type": "VolumeState"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "cvrTags",
                        "name": "_cvrTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "-- | Any tags assigned to the volume.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrVolumeId",
                        "name": "_cvrVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvrVolumeType",
                        "name": "_cvrVolumeType",
                        "shape": "VolumeType",
                        "locationName": "volumeType",
                        "documentation": "-- | The volume type. This can be 'gp2' for General Purpose (SSD) volumes, 'io1' for\n-- Provisioned IOPS (SSD) volumes, or 'standard' for Magnetic volumes.",
                        "typeExposed": "VolumeType",
                        "type": "VolumeType"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVolume.html",
            "namespace": "Network.AWS.EC2.CreateVolume",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateVolume",
            "method": "post",
            "documentation": "-- | Creates an Amazon EBS volume that can be attached to an instance in the same\n-- Availability Zone. The volume is created in the specified region.\n--\n-- You can create a new empty volume or restore a volume from an Amazon EBS\n-- snapshot. Any AWS Marketplace product codes from the snapshot are propagated\n-- to the volume.\n--\n-- You can create encrypted volumes with the 'Encrypted' parameter. Encrypted\n-- volumes may only be attached to instances that support Amazon EBS encryption.\n-- Volumes that are created from encrypted snapshots are also automatically\n-- encrypted. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html Amazon EBS Encryption\u003e in the /AmazonElastic Compute Cloud User Guide/.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html Creating or Restoring an Amazon EBS Volume\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "createVolume",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cv1AvailabilityZone",
                        "name": "_cv1AvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Availability Zone in which to create the volume. Use 'DescribeAvailabilityZones' to list the Availability Zones that are currently available to you.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "CreateVolume",
                "query": [
                    {
                        "field": "_cv1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cv1Size",
                        "locationName": "Size",
                        "type": "field"
                    },
                    {
                        "field": "_cv1SnapshotId",
                        "locationName": "SnapshotId",
                        "type": "field"
                    },
                    {
                        "field": "_cv1AvailabilityZone",
                        "locationName": "AvailabilityZone",
                        "type": "field"
                    },
                    {
                        "field": "_cv1VolumeType",
                        "locationName": "VolumeType",
                        "type": "field"
                    },
                    {
                        "field": "_cv1Iops",
                        "locationName": "Iops",
                        "type": "field"
                    },
                    {
                        "field": "_cv1Encrypted",
                        "locationName": "encrypted",
                        "type": "field"
                    },
                    {
                        "field": "_cv1KmsKeyId",
                        "locationName": "KmsKeyId",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1DryRun",
                        "name": "_cv1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1Size",
                        "name": "_cv1Size",
                        "shape": "Integer",
                        "locationName": "Size",
                        "documentation": "-- | The size of the volume, in GiBs.\n--\n-- Constraints: If the volume type is 'io1', the minimum size of the volume is 4\n-- GiB.\n--\n-- Default: If you're creating the volume from a snapshot and don't specify a\n-- volume size, the default is the snapshot size.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1SnapshotId",
                        "name": "_cv1SnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "-- | The snapshot from which to create the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1VolumeType",
                        "name": "_cv1VolumeType",
                        "shape": "VolumeType",
                        "locationName": "VolumeType",
                        "documentation": "-- | The volume type. This can be 'gp2' for General Purpose (SSD) volumes, 'io1' for\n-- Provisioned IOPS (SSD) volumes, or 'standard' for Magnetic volumes.\n--\n-- Default: 'standard'",
                        "typeExposed": "Maybe VolumeType",
                        "type": "Maybe VolumeType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1Iops",
                        "name": "_cv1Iops",
                        "shape": "Integer",
                        "locationName": "Iops",
                        "documentation": "-- | Only valid for Provisioned IOPS (SSD) volumes. The number of I/O operations\n-- per second (IOPS) to provision for the volume.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1Encrypted",
                        "name": "_cv1Encrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Specifies whether the volume should be encrypted.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1KmsKeyId",
                        "name": "_cv1KmsKeyId",
                        "shape": "String",
                        "locationName": "KmsKeyId",
                        "documentation": "-- | The full ARN of the AWS Key Management Service (KMS) Customer Master Key\n-- (CMK) to use when creating the encrypted volume. This parameter is only\n-- required if you want to use a non-default CMK; if this parameter is not\n-- specified, the default CMK is used. The ARN contains the 'arn:aws:kms'\n-- namespace, followed by the region of the CMK, the AWS account ID of the CMK\n-- owner, the 'key' namespace, and then the CMK ID. For example, arn:aws:kms:/us-east-1/:/012345678910/:key//abcd1234-a123-456a-a12b-a123b4cd56ef/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cv1AvailabilityZone",
                        "name": "_cv1AvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Availability Zone in which to create the volume. Use 'DescribeAvailabilityZones' to list the Availability Zones that are currently available to you.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1DryRun",
                        "name": "_cv1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1Encrypted",
                        "name": "_cv1Encrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "-- | Specifies whether the volume should be encrypted.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1Iops",
                        "name": "_cv1Iops",
                        "shape": "Integer",
                        "locationName": "Iops",
                        "documentation": "-- | Only valid for Provisioned IOPS (SSD) volumes. The number of I/O operations\n-- per second (IOPS) to provision for the volume.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1KmsKeyId",
                        "name": "_cv1KmsKeyId",
                        "shape": "String",
                        "locationName": "KmsKeyId",
                        "documentation": "-- | The full ARN of the AWS Key Management Service (KMS) Customer Master Key\n-- (CMK) to use when creating the encrypted volume. This parameter is only\n-- required if you want to use a non-default CMK; if this parameter is not\n-- specified, the default CMK is used. The ARN contains the 'arn:aws:kms'\n-- namespace, followed by the region of the CMK, the AWS account ID of the CMK\n-- owner, the 'key' namespace, and then the CMK ID. For example, arn:aws:kms:/us-east-1/:/012345678910/:key//abcd1234-a123-456a-a12b-a123b4cd56ef/.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1Size",
                        "name": "_cv1Size",
                        "shape": "Integer",
                        "locationName": "Size",
                        "documentation": "-- | The size of the volume, in GiBs.\n--\n-- Constraints: If the volume type is 'io1', the minimum size of the volume is 4\n-- GiB.\n--\n-- Default: If you're creating the volume from a snapshot and don't specify a\n-- volume size, the default is the snapshot size.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1SnapshotId",
                        "name": "_cv1SnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "-- | The snapshot from which to create the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cv1VolumeType",
                        "name": "_cv1VolumeType",
                        "shape": "VolumeType",
                        "locationName": "VolumeType",
                        "documentation": "-- | The volume type. This can be 'gp2' for General Purpose (SSD) volumes, 'io1' for\n-- Provisioned IOPS (SSD) volumes, or 'standard' for Magnetic volumes.\n--\n-- Default: 'standard'",
                        "typeExposed": "Maybe VolumeType",
                        "type": "Maybe VolumeType"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createVpcResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cvrVpc",
                    "name": "_cvrVpc",
                    "shape": "Vpc",
                    "locationName": "vpc",
                    "documentation": "-- | Information about the VPC.",
                    "typeExposed": "Maybe Vpc",
                    "type": "Maybe Vpc"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateVpcResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvrVpc",
                        "name": "_cvrVpc",
                        "shape": "Vpc",
                        "locationName": "vpc",
                        "documentation": "-- | Information about the VPC.",
                        "typeExposed": "Maybe Vpc",
                        "type": "Maybe Vpc"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvrVpc",
                        "name": "_cvrVpc",
                        "shape": "Vpc",
                        "locationName": "vpc",
                        "documentation": "-- | Information about the VPC.",
                        "typeExposed": "Maybe Vpc",
                        "type": "Maybe Vpc"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpc.html",
            "namespace": "Network.AWS.EC2.CreateVpc",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateVpc",
            "method": "post",
            "documentation": "-- | Creates a VPC with the specified CIDR block.\n--\n-- The smallest VPC you can create uses a /28 netmask (16 IP addresses), and\n-- the largest uses a /16 netmask (65,536 IP addresses). To help you decide how\n-- big to make your VPC, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html Your VPC and Subnets\u003e in the /Amazon Virtual PrivateCloud User Guide/.\n--\n-- By default, each instance you launch in the VPC has the default DHCP\n-- options, which includes only a default DNS server that we provide\n-- (AmazonProvidedDNS). For more information about DHCP options, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html DHCPOptions Sets\u003e in the /Amazon Virtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "createVpc",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvCidrBlock",
                        "name": "_cvCidrBlock",
                        "shape": "String",
                        "locationName": "CidrBlock",
                        "documentation": "-- | The network range for the VPC, in CIDR notation. For example, '10.0.0.0/16'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "CreateVpc",
                "query": [
                    {
                        "field": "_cvDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cvCidrBlock",
                        "locationName": "CidrBlock",
                        "type": "field"
                    },
                    {
                        "field": "_cvInstanceTenancy",
                        "locationName": "instanceTenancy",
                        "type": "field"
                    }
                ],
                "locationPad": 16,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvDryRun",
                        "name": "_cvDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvInstanceTenancy",
                        "name": "_cvInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "-- | The supported tenancy options for instances launched into the VPC. A value of 'default' means that instances can be launched with any tenancy; a value of 'dedicated' means all instances launched into the VPC are launched as dedicated tenancy\n-- instances regardless of the tenancy assigned to the instance at launch.\n-- Dedicated tenancy instances run on single-tenant hardware.\n--\n-- Default: 'default'",
                        "typeExposed": "Maybe Tenancy",
                        "type": "Maybe Tenancy"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvCidrBlock",
                        "name": "_cvCidrBlock",
                        "shape": "String",
                        "locationName": "CidrBlock",
                        "documentation": "-- | The network range for the VPC, in CIDR notation. For example, '10.0.0.0/16'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvDryRun",
                        "name": "_cvDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvInstanceTenancy",
                        "name": "_cvInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "-- | The supported tenancy options for instances launched into the VPC. A value of 'default' means that instances can be launched with any tenancy; a value of 'dedicated' means all instances launched into the VPC are launched as dedicated tenancy\n-- instances regardless of the tenancy assigned to the instance at launch.\n-- Dedicated tenancy instances run on single-tenant hardware.\n--\n-- Default: 'default'",
                        "typeExposed": "Maybe Tenancy",
                        "type": "Maybe Tenancy"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createVpcPeeringConnectionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cvpcrVpcPeeringConnection",
                    "name": "_cvpcrVpcPeeringConnection",
                    "shape": "VpcPeeringConnection",
                    "locationName": "vpcPeeringConnection",
                    "documentation": "-- | Information about the VPC peering connection.",
                    "typeExposed": "Maybe VpcPeeringConnection",
                    "type": "Maybe VpcPeeringConnection"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateVpcPeeringConnectionResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpcrVpcPeeringConnection",
                        "name": "_cvpcrVpcPeeringConnection",
                        "shape": "VpcPeeringConnection",
                        "locationName": "vpcPeeringConnection",
                        "documentation": "-- | Information about the VPC peering connection.",
                        "typeExposed": "Maybe VpcPeeringConnection",
                        "type": "Maybe VpcPeeringConnection"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpcrVpcPeeringConnection",
                        "name": "_cvpcrVpcPeeringConnection",
                        "shape": "VpcPeeringConnection",
                        "locationName": "vpcPeeringConnection",
                        "documentation": "-- | Information about the VPC peering connection.",
                        "typeExposed": "Maybe VpcPeeringConnection",
                        "type": "Maybe VpcPeeringConnection"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpcPeeringConnection.html",
            "namespace": "Network.AWS.EC2.CreateVpcPeeringConnection",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateVpcPeeringConnection",
            "method": "post",
            "documentation": "-- | Requests a VPC peering connection between two VPCs: a requester VPC that you\n-- own and a peer VPC with which to create the connection. The peer VPC can\n-- belong to another AWS account. The requester VPC and peer VPC cannot have\n-- overlapping CIDR blocks.\n--\n-- The owner of the peer VPC must accept the peering request to activate the\n-- peering connection. The VPC peering connection request expires after 7 days,\n-- after which it cannot be accepted or rejected.\n--\n-- A 'CreateVpcPeeringConnection' request between VPCs with overlapping CIDR\n-- blocks results in the VPC peering connection having a status of 'failed'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "createVpcPeeringConnection",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "CreateVpcPeeringConnection",
                "query": [
                    {
                        "field": "_cvpcDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cvpcVpcId",
                        "locationName": "vpcId",
                        "type": "field"
                    },
                    {
                        "field": "_cvpcPeerVpcId",
                        "locationName": "peerVpcId",
                        "type": "field"
                    },
                    {
                        "field": "_cvpcPeerOwnerId",
                        "locationName": "peerOwnerId",
                        "type": "field"
                    }
                ],
                "locationPad": 12,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpcDryRun",
                        "name": "_cvpcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpcVpcId",
                        "name": "_cvpcVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the requester VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpcPeerVpcId",
                        "name": "_cvpcPeerVpcId",
                        "shape": "String",
                        "locationName": "peerVpcId",
                        "documentation": "-- | The ID of the VPC with which you are creating the VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpcPeerOwnerId",
                        "name": "_cvpcPeerOwnerId",
                        "shape": "String",
                        "locationName": "peerOwnerId",
                        "documentation": "-- | The AWS account ID of the owner of the peer VPC.\n--\n-- Default: Your AWS account ID",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpcDryRun",
                        "name": "_cvpcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpcPeerOwnerId",
                        "name": "_cvpcPeerOwnerId",
                        "shape": "String",
                        "locationName": "peerOwnerId",
                        "documentation": "-- | The AWS account ID of the owner of the peer VPC.\n--\n-- Default: Your AWS account ID",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpcPeerVpcId",
                        "name": "_cvpcPeerVpcId",
                        "shape": "String",
                        "locationName": "peerVpcId",
                        "documentation": "-- | The ID of the VPC with which you are creating the VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvpcVpcId",
                        "name": "_cvpcVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the requester VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createVpnConnectionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cvcrVpnConnection",
                    "name": "_cvcrVpnConnection",
                    "shape": "VpnConnection",
                    "locationName": "vpnConnection",
                    "documentation": "-- | Information about the VPN connection.",
                    "typeExposed": "Maybe VpnConnection",
                    "type": "Maybe VpnConnection"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateVpnConnectionResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvcrVpnConnection",
                        "name": "_cvcrVpnConnection",
                        "shape": "VpnConnection",
                        "locationName": "vpnConnection",
                        "documentation": "-- | Information about the VPN connection.",
                        "typeExposed": "Maybe VpnConnection",
                        "type": "Maybe VpnConnection"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvcrVpnConnection",
                        "name": "_cvcrVpnConnection",
                        "shape": "VpnConnection",
                        "locationName": "vpnConnection",
                        "documentation": "-- | Information about the VPN connection.",
                        "typeExposed": "Maybe VpnConnection",
                        "type": "Maybe VpnConnection"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnConnection.html",
            "namespace": "Network.AWS.EC2.CreateVpnConnection",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateVpnConnection",
            "method": "post",
            "documentation": "-- | Creates a VPN connection between an existing virtual private gateway and a\n-- VPN customer gateway. The only supported connection type is 'ipsec.1'.\n--\n-- The response includes information that you need to give to your network\n-- administrator to configure your customer gateway.\n--\n-- We strongly recommend that you use HTTPS when calling this operation\n-- because the response contains sensitive cryptographic information for\n-- configuring your customer gateway.\n--\n-- If you decide to shut down your VPN connection for any reason and later\n-- create a new VPN connection, you must reconfigure your customer gateway with\n-- the new information returned from this call.\n--\n-- For more information about VPN connections, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html Adding a Hardware VirtualPrivate Gateway to Your VPC\u003e in the /Amazon Virtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 21,
                "ctor": "createVpnConnection",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvcType",
                        "name": "_cvcType",
                        "shape": "String",
                        "locationName": "Type",
                        "documentation": "-- | The type of VPN connection ('ipsec.1').",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvcCustomerGatewayId",
                        "name": "_cvcCustomerGatewayId",
                        "shape": "String",
                        "locationName": "CustomerGatewayId",
                        "documentation": "-- | The ID of the customer gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvcVpnGatewayId",
                        "name": "_cvcVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "CreateVpnConnection",
                "query": [
                    {
                        "field": "_cvcDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cvcType",
                        "locationName": "Type",
                        "type": "field"
                    },
                    {
                        "field": "_cvcCustomerGatewayId",
                        "locationName": "CustomerGatewayId",
                        "type": "field"
                    },
                    {
                        "field": "_cvcVpnGatewayId",
                        "locationName": "VpnGatewayId",
                        "type": "field"
                    },
                    {
                        "field": "_cvcOptions",
                        "locationName": "options",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvcDryRun",
                        "name": "_cvcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvcOptions",
                        "name": "_cvcOptions",
                        "shape": "VpnConnectionOptionsSpecification",
                        "locationName": "options",
                        "documentation": "-- | Indicates whether the VPN connection requires static routes. If you are\n-- creating a VPN connection for a device that does not support BGP, you must\n-- specify 'true'.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe VpnConnectionOptionsSpecification",
                        "type": "Maybe VpnConnectionOptionsSpecification"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvcCustomerGatewayId",
                        "name": "_cvcCustomerGatewayId",
                        "shape": "String",
                        "locationName": "CustomerGatewayId",
                        "documentation": "-- | The ID of the customer gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvcDryRun",
                        "name": "_cvcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvcOptions",
                        "name": "_cvcOptions",
                        "shape": "VpnConnectionOptionsSpecification",
                        "locationName": "options",
                        "documentation": "-- | Indicates whether the VPN connection requires static routes. If you are\n-- creating a VPN connection for a device that does not support BGP, you must\n-- specify 'true'.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe VpnConnectionOptionsSpecification",
                        "type": "Maybe VpnConnectionOptionsSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvcType",
                        "name": "_cvcType",
                        "shape": "String",
                        "locationName": "Type",
                        "documentation": "-- | The type of VPN connection ('ipsec.1').",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvcVpnGatewayId",
                        "name": "_cvcVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "createVpnConnectionRouteResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreateVpnConnectionRouteResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnConnectionRoute.html",
            "namespace": "Network.AWS.EC2.CreateVpnConnectionRoute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateVpnConnectionRoute",
            "method": "post",
            "documentation": "-- | Creates a static route associated with a VPN connection between an existing\n-- virtual private gateway and a VPN customer gateway. The static route allows\n-- traffic to be routed from the virtual private gateway to the VPN customer\n-- gateway.\n--\n-- For more information about VPN connections, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html Adding a Hardware VirtualPrivate Gateway to Your VPC\u003e in the /Amazon Virtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "createVpnConnectionRoute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvcrVpnConnectionId",
                        "name": "_cvcrVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "-- | The ID of the VPN connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvcrDestinationCidrBlock",
                        "name": "_cvcrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "DestinationCidrBlock",
                        "documentation": "-- | The CIDR block associated with the local subnet of the customer network.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 21,
                "name": "CreateVpnConnectionRoute",
                "query": [
                    {
                        "field": "_cvcrVpnConnectionId",
                        "locationName": "VpnConnectionId",
                        "type": "field"
                    },
                    {
                        "field": "_cvcrDestinationCidrBlock",
                        "locationName": "DestinationCidrBlock",
                        "type": "field"
                    }
                ],
                "locationPad": 21,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvcrDestinationCidrBlock",
                        "name": "_cvcrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "DestinationCidrBlock",
                        "documentation": "-- | The CIDR block associated with the local subnet of the customer network.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvcrVpnConnectionId",
                        "name": "_cvcrVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "-- | The ID of the VPN connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createVpnGatewayResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "cvgrVpnGateway",
                    "name": "_cvgrVpnGateway",
                    "shape": "VpnGateway",
                    "locationName": "vpnGateway",
                    "documentation": "-- | Information about the virtual private gateway.",
                    "typeExposed": "Maybe VpnGateway",
                    "type": "Maybe VpnGateway"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateVpnGatewayResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvgrVpnGateway",
                        "name": "_cvgrVpnGateway",
                        "shape": "VpnGateway",
                        "locationName": "vpnGateway",
                        "documentation": "-- | Information about the virtual private gateway.",
                        "typeExposed": "Maybe VpnGateway",
                        "type": "Maybe VpnGateway"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvgrVpnGateway",
                        "name": "_cvgrVpnGateway",
                        "shape": "VpnGateway",
                        "locationName": "vpnGateway",
                        "documentation": "-- | Information about the virtual private gateway.",
                        "typeExposed": "Maybe VpnGateway",
                        "type": "Maybe VpnGateway"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-CreateVpnGateway.html",
            "namespace": "Network.AWS.EC2.CreateVpnGateway",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "CreateVpnGateway",
            "method": "post",
            "documentation": "-- | Creates a virtual private gateway. A virtual private gateway is the endpoint\n-- on the VPC side of your VPN connection. You can create a virtual private\n-- gateway before creating the VPC itself.\n--\n-- For more information about virtual private gateways, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html Adding a HardwareVirtual Private Gateway to Your VPC\u003e in the /Amazon Virtual Private Cloud UserGuide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "createVpnGateway",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvgType",
                        "name": "_cvgType",
                        "shape": "GatewayType",
                        "locationName": "Type",
                        "documentation": "-- | The type of VPN connection this virtual private gateway supports.",
                        "typeExposed": "GatewayType",
                        "type": "GatewayType"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "CreateVpnGateway",
                "query": [
                    {
                        "field": "_cvgDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_cvgType",
                        "locationName": "Type",
                        "type": "field"
                    },
                    {
                        "field": "_cvgAvailabilityZone",
                        "locationName": "AvailabilityZone",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvgDryRun",
                        "name": "_cvgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvgAvailabilityZone",
                        "name": "_cvgAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Availability Zone for the virtual private gateway.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvgAvailabilityZone",
                        "name": "_cvgAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Availability Zone for the virtual private gateway.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "cvgDryRun",
                        "name": "_cvgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "cvgType",
                        "name": "_cvgType",
                        "shape": "GatewayType",
                        "locationName": "Type",
                        "documentation": "-- | The type of VPN connection this virtual private gateway supports.",
                        "typeExposed": "GatewayType",
                        "type": "GatewayType"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteCustomerGatewayResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteCustomerGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteCustomerGateway.html",
            "namespace": "Network.AWS.EC2.DeleteCustomerGateway",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteCustomerGateway",
            "method": "post",
            "documentation": "-- | Deletes the specified customer gateway. You must delete the VPN connection\n-- before you can delete the customer gateway.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "deleteCustomerGateway",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dcg1CustomerGatewayId",
                        "name": "_dcg1CustomerGatewayId",
                        "shape": "String",
                        "locationName": "CustomerGatewayId",
                        "documentation": "-- | The ID of the customer gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "DeleteCustomerGateway",
                "query": [
                    {
                        "field": "_dcg1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dcg1CustomerGatewayId",
                        "locationName": "CustomerGatewayId",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dcg1DryRun",
                        "name": "_dcg1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dcg1CustomerGatewayId",
                        "name": "_dcg1CustomerGatewayId",
                        "shape": "String",
                        "locationName": "CustomerGatewayId",
                        "documentation": "-- | The ID of the customer gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dcg1DryRun",
                        "name": "_dcg1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteDhcpOptionsResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteDhcpOptionsResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteDhcpOptions.html",
            "namespace": "Network.AWS.EC2.DeleteDhcpOptions",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteDhcpOptions",
            "method": "post",
            "documentation": "-- | Deletes the specified set of DHCP options. You must disassociate the set of\n-- DHCP options before you can delete it. You can disassociate the set of DHCP\n-- options by associating either a new set of options or the default set of\n-- options with the VPC.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "deleteDhcpOptions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ddo1DhcpOptionsId",
                        "name": "_ddo1DhcpOptionsId",
                        "shape": "String",
                        "locationName": "DhcpOptionsId",
                        "documentation": "-- | The ID of the DHCP options set.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "DeleteDhcpOptions",
                "query": [
                    {
                        "field": "_ddo1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ddo1DhcpOptionsId",
                        "locationName": "DhcpOptionsId",
                        "type": "field"
                    }
                ],
                "locationPad": 14,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ddo1DryRun",
                        "name": "_ddo1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ddo1DhcpOptionsId",
                        "name": "_ddo1DhcpOptionsId",
                        "shape": "String",
                        "locationName": "DhcpOptionsId",
                        "documentation": "-- | The ID of the DHCP options set.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ddo1DryRun",
                        "name": "_ddo1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteInternetGatewayResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteInternetGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteInternetGateway.html",
            "namespace": "Network.AWS.EC2.DeleteInternetGateway",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteInternetGateway",
            "method": "post",
            "documentation": "-- | Deletes the specified Internet gateway. You must detach the Internet gateway\n-- from the VPC before you can delete it.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "deleteInternetGateway",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dig2InternetGatewayId",
                        "name": "_dig2InternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "-- | The ID of the Internet gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "DeleteInternetGateway",
                "query": [
                    {
                        "field": "_dig2DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dig2InternetGatewayId",
                        "locationName": "internetGatewayId",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dig2DryRun",
                        "name": "_dig2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dig2DryRun",
                        "name": "_dig2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dig2InternetGatewayId",
                        "name": "_dig2InternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "-- | The ID of the Internet gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteKeyPairResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteKeyPairResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteKeyPair.html",
            "namespace": "Network.AWS.EC2.DeleteKeyPair",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteKeyPair",
            "method": "post",
            "documentation": "-- | Deletes the specified key pair, by removing the public key from Amazon EC2.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 11,
                "ctor": "deleteKeyPair",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dkpKeyName",
                        "name": "_dkpKeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "-- | The name of the key pair.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 8,
                "name": "DeleteKeyPair",
                "query": [
                    {
                        "field": "_dkpDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dkpKeyName",
                        "locationName": "KeyName",
                        "type": "field"
                    }
                ],
                "locationPad": 8,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dkpDryRun",
                        "name": "_dkpDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dkpDryRun",
                        "name": "_dkpDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dkpKeyName",
                        "name": "_dkpKeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "-- | The name of the key pair.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteNetworkAclResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteNetworkAclResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteNetworkAcl.html",
            "namespace": "Network.AWS.EC2.DeleteNetworkAcl",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteNetworkAcl",
            "method": "post",
            "documentation": "-- | Deletes the specified network ACL. You can't delete the ACL if it's\n-- associated with any subnets. You can't delete the default network ACL.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "deleteNetworkAcl",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dnaNetworkAclId",
                        "name": "_dnaNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the network ACL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeleteNetworkAcl",
                "query": [
                    {
                        "field": "_dnaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dnaNetworkAclId",
                        "locationName": "networkAclId",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dnaDryRun",
                        "name": "_dnaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dnaDryRun",
                        "name": "_dnaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dnaNetworkAclId",
                        "name": "_dnaNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the network ACL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteNetworkAclEntryResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteNetworkAclEntryResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteNetworkAclEntry.html",
            "namespace": "Network.AWS.EC2.DeleteNetworkAclEntry",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteNetworkAclEntry",
            "method": "post",
            "documentation": "-- | Deletes the specified ingress or egress entry (rule) from the specified\n-- network ACL.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "deleteNetworkAclEntry",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dnaeNetworkAclId",
                        "name": "_dnaeNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the network ACL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dnaeRuleNumber",
                        "name": "_dnaeRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "-- | The rule number of the entry to delete.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dnaeEgress",
                        "name": "_dnaeEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "-- | Indicates whether the rule is an egress rule.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeleteNetworkAclEntry",
                "query": [
                    {
                        "field": "_dnaeDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dnaeNetworkAclId",
                        "locationName": "networkAclId",
                        "type": "field"
                    },
                    {
                        "field": "_dnaeRuleNumber",
                        "locationName": "ruleNumber",
                        "type": "field"
                    },
                    {
                        "field": "_dnaeEgress",
                        "locationName": "egress",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dnaeDryRun",
                        "name": "_dnaeDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dnaeDryRun",
                        "name": "_dnaeDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dnaeEgress",
                        "name": "_dnaeEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "-- | Indicates whether the rule is an egress rule.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dnaeNetworkAclId",
                        "name": "_dnaeNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the network ACL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dnaeRuleNumber",
                        "name": "_dnaeRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "-- | The rule number of the entry to delete.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteNetworkInterfaceResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteNetworkInterfaceResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteNetworkInterface.html",
            "namespace": "Network.AWS.EC2.DeleteNetworkInterface",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteNetworkInterface",
            "method": "post",
            "documentation": "-- | Deletes the specified network interface. You must detach the network\n-- interface before you can delete it.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "deleteNetworkInterface",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dni2NetworkInterfaceId",
                        "name": "_dni2NetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "DeleteNetworkInterface",
                "query": [
                    {
                        "field": "_dni2DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dni2NetworkInterfaceId",
                        "locationName": "networkInterfaceId",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dni2DryRun",
                        "name": "_dni2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dni2DryRun",
                        "name": "_dni2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dni2NetworkInterfaceId",
                        "name": "_dni2NetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deletePlacementGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeletePlacementGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeletePlacementGroup.html",
            "namespace": "Network.AWS.EC2.DeletePlacementGroup",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeletePlacementGroup",
            "method": "post",
            "documentation": "-- | Deletes the specified placement group. You must terminate all instances in\n-- the placement group before you can delete the placement group. For more\n-- information about placement groups and cluster instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html ClusterInstances\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "deletePlacementGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dpgGroupName",
                        "name": "_dpgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the placement group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DeletePlacementGroup",
                "query": [
                    {
                        "field": "_dpgDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dpgGroupName",
                        "locationName": "groupName",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dpgDryRun",
                        "name": "_dpgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dpgDryRun",
                        "name": "_dpgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dpgGroupName",
                        "name": "_dpgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "-- | The name of the placement group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteRouteResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteRouteResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteRoute.html",
            "namespace": "Network.AWS.EC2.DeleteRoute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteRoute",
            "method": "post",
            "documentation": "-- | Deletes the specified route from the specified route table.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "deleteRoute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "drRouteTableId",
                        "name": "_drRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "drDestinationCidrBlock",
                        "name": "_drDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "-- | The CIDR range for the route. The value you specify must match the CIDR for\n-- the route exactly.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 21,
                "name": "DeleteRoute",
                "query": [
                    {
                        "field": "_drDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_drRouteTableId",
                        "locationName": "routeTableId",
                        "type": "field"
                    },
                    {
                        "field": "_drDestinationCidrBlock",
                        "locationName": "destinationCidrBlock",
                        "type": "field"
                    }
                ],
                "locationPad": 21,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drDryRun",
                        "name": "_drDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "drDestinationCidrBlock",
                        "name": "_drDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "-- | The CIDR range for the route. The value you specify must match the CIDR for\n-- the route exactly.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drDryRun",
                        "name": "_drDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "drRouteTableId",
                        "name": "_drRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteRouteTableResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteRouteTableResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteRouteTable.html",
            "namespace": "Network.AWS.EC2.DeleteRouteTable",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteRouteTable",
            "method": "post",
            "documentation": "-- | Deletes the specified route table. You must disassociate the route table from\n-- any subnets before you can delete it. You can't delete the main route table.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "deleteRouteTable",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "drt1RouteTableId",
                        "name": "_drt1RouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeleteRouteTable",
                "query": [
                    {
                        "field": "_drt1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_drt1RouteTableId",
                        "locationName": "routeTableId",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drt1DryRun",
                        "name": "_drt1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drt1DryRun",
                        "name": "_drt1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "drt1RouteTableId",
                        "name": "_drt1RouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteSecurityGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteSecurityGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteSecurityGroup.html",
            "namespace": "Network.AWS.EC2.DeleteSecurityGroup",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteSecurityGroup",
            "method": "post",
            "documentation": "-- | Deletes a security group.\n--\n-- If you attempt to delete a security group that is associated with an\n-- instance, or is referenced by another security group, the operation fails\n-- with 'InvalidGroup.InUse' in EC2-Classic or 'DependencyViolation' in EC2-VPC.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "deleteSecurityGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DeleteSecurityGroup",
                "query": [
                    {
                        "field": "_dsgDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dsgGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_dsgGroupId",
                        "locationName": "GroupId",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsgDryRun",
                        "name": "_dsgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsgGroupName",
                        "name": "_dsgGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the security group. You can specify\n-- either the security group name or the security group ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsgGroupId",
                        "name": "_dsgGroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "-- | The ID of the security group. Required for a nondefault VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsgDryRun",
                        "name": "_dsgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsgGroupId",
                        "name": "_dsgGroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "-- | The ID of the security group. Required for a nondefault VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsgGroupName",
                        "name": "_dsgGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the security group. You can specify\n-- either the security group name or the security group ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteSnapshotResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteSnapshotResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteSnapshot.html",
            "namespace": "Network.AWS.EC2.DeleteSnapshot",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteSnapshot",
            "method": "post",
            "documentation": "-- | Deletes the specified snapshot.\n--\n-- When you make periodic snapshots of a volume, the snapshots are incremental,\n-- and only the blocks on the device that have changed since your last snapshot\n-- are saved in the new snapshot. When you delete a snapshot, only the data not\n-- needed for any other snapshot is removed. So regardless of which prior\n-- snapshots have been deleted, all active snapshots will have access to all the\n-- information needed to restore the volume.\n--\n-- You cannot delete a snapshot of the root device of an Amazon EBS volume used\n-- by a registered AMI. You must first de-register the AMI before you can delete\n-- the snapshot.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html Deleting an Amazon EBS Snapshot\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "deleteSnapshot",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ds3SnapshotId",
                        "name": "_ds3SnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "-- | The ID of the Amazon EBS snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DeleteSnapshot",
                "query": [
                    {
                        "field": "_ds3DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ds3SnapshotId",
                        "locationName": "SnapshotId",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ds3DryRun",
                        "name": "_ds3DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ds3DryRun",
                        "name": "_ds3DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ds3SnapshotId",
                        "name": "_ds3SnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "-- | The ID of the Amazon EBS snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteSpotDatafeedSubscriptionResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteSpotDatafeedSubscriptionResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteSpotDatafeedSubscription.html",
            "namespace": "Network.AWS.EC2.DeleteSpotDatafeedSubscription",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteSpotDatafeedSubscription",
            "method": "post",
            "documentation": "-- | Deletes the datafeed for Spot Instances. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html SpotInstances\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteSpotDatafeedSubscription",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "dsds1DryRun",
                    "name": "_dsds1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 7,
                "name": "DeleteSpotDatafeedSubscription",
                "query": [
                    {
                        "field": "_dsds1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsds1DryRun",
                        "name": "_dsds1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsds1DryRun",
                        "name": "_dsds1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteSubnetResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteSubnetResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteSubnet.html",
            "namespace": "Network.AWS.EC2.DeleteSubnet",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteSubnet",
            "method": "post",
            "documentation": "-- | Deletes the specified subnet. You must terminate all running instances in the\n-- subnet before you can delete the subnet.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "deleteSubnet",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ds2SubnetId",
                        "name": "_ds2SubnetId",
                        "shape": "String",
                        "locationName": "SubnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DeleteSubnet",
                "query": [
                    {
                        "field": "_ds2DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ds2SubnetId",
                        "locationName": "SubnetId",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ds2DryRun",
                        "name": "_ds2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ds2DryRun",
                        "name": "_ds2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ds2SubnetId",
                        "name": "_ds2SubnetId",
                        "shape": "String",
                        "locationName": "SubnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteTagsResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteTagsResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteTags.html",
            "namespace": "Network.AWS.EC2.DeleteTags",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteTags",
            "method": "post",
            "documentation": "-- | Deletes the specified set of tags from the specified set of resources. This\n-- call is designed to follow a 'DescribeTags' request.\n--\n-- For more information about tags, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html Tagging Your Resources\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "deleteTags",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DeleteTags",
                "query": [
                    {
                        "field": "_dt1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dt1Resources",
                        "locationName": "resourceId",
                        "type": "field"
                    },
                    {
                        "field": "_dt1Tags",
                        "locationName": "tag",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dt1DryRun",
                        "name": "_dt1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dt1Resources",
                        "name": "_dt1Resources",
                        "shape": "ResourceIdList",
                        "locationName": "resourceId",
                        "documentation": "-- | The ID of the resource. For example, ami-1a2b3c4d. You can specify more than\n-- one resource ID.",
                        "typeExposed": "[Text]",
                        "type": "List \"resourceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dt1Tags",
                        "name": "_dt1Tags",
                        "shape": "TagList",
                        "locationName": "tag",
                        "documentation": "-- | One or more tags to delete. If you omit the 'value' parameter, we delete the\n-- tag regardless of its value. If you specify this parameter with an empty\n-- string as the value, we delete the key only if its value is an empty string.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dt1DryRun",
                        "name": "_dt1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dt1Resources",
                        "name": "_dt1Resources",
                        "shape": "ResourceIdList",
                        "locationName": "resourceId",
                        "documentation": "-- | The ID of the resource. For example, ami-1a2b3c4d. You can specify more than\n-- one resource ID.",
                        "typeExposed": "[Text]",
                        "type": "List \"resourceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dt1Tags",
                        "name": "_dt1Tags",
                        "shape": "TagList",
                        "locationName": "tag",
                        "documentation": "-- | One or more tags to delete. If you omit the 'value' parameter, we delete the\n-- tag regardless of its value. If you specify this parameter with an empty\n-- string as the value, we delete the key only if its value is an empty string.",
                        "typeExposed": "[Tag]",
                        "type": "List \"item\" Tag"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteVolumeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteVolumeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVolume.html",
            "namespace": "Network.AWS.EC2.DeleteVolume",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteVolume",
            "method": "post",
            "documentation": "-- | Deletes the specified Amazon EBS volume. The volume must be in the 'available'\n-- state (not attached to an instance).\n--\n-- The volume may remain in the 'deleting' state for several minutes.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html Deleting an Amazon EBS Volume\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "deleteVolume",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dv4VolumeId",
                        "name": "_dv4VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DeleteVolume",
                "query": [
                    {
                        "field": "_dv4DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dv4VolumeId",
                        "locationName": "VolumeId",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv4DryRun",
                        "name": "_dv4DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv4DryRun",
                        "name": "_dv4DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dv4VolumeId",
                        "name": "_dv4VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteVpcResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteVpcResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVpc.html",
            "namespace": "Network.AWS.EC2.DeleteVpc",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteVpc",
            "method": "post",
            "documentation": "-- | Deletes the specified VPC. You must detach or delete all gateways and\n-- resources that are associated with the VPC before you can delete it. For\n-- example, you must terminate all instances running in the VPC, delete all\n-- security groups associated with the VPC (except the default one), delete all\n-- route tables associated with the VPC (except the default one), and so on.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 10,
                "ctor": "deleteVpc",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dv3VpcId",
                        "name": "_dv3VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 7,
                "name": "DeleteVpc",
                "query": [
                    {
                        "field": "_dv3DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dv3VpcId",
                        "locationName": "VpcId",
                        "type": "field"
                    }
                ],
                "locationPad": 7,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv3DryRun",
                        "name": "_dv3DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv3DryRun",
                        "name": "_dv3DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dv3VpcId",
                        "name": "_dv3VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "deleteVpcPeeringConnectionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "dvpcrReturn",
                    "name": "_dvpcrReturn",
                    "shape": "Boolean",
                    "locationName": "return",
                    "documentation": "-- | Returns 'true' if the request succeeds; otherwise, it returns an error.",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DeleteVpcPeeringConnectionResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvpcrReturn",
                        "name": "_dvpcrReturn",
                        "shape": "Boolean",
                        "locationName": "return",
                        "documentation": "-- | Returns 'true' if the request succeeds; otherwise, it returns an error.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvpcrReturn",
                        "name": "_dvpcrReturn",
                        "shape": "Boolean",
                        "locationName": "return",
                        "documentation": "-- | Returns 'true' if the request succeeds; otherwise, it returns an error.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVpcPeeringConnection.html",
            "namespace": "Network.AWS.EC2.DeleteVpcPeeringConnection",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteVpcPeeringConnection",
            "method": "post",
            "documentation": "-- | Deletes a VPC peering connection. Either the owner of the requester VPC or\n-- the owner of the peer VPC can delete the VPC peering connection if it's in\n-- the 'active' state. The owner of the requester VPC can delete a VPC peering\n-- connection in the 'pending-acceptance' state.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "deleteVpcPeeringConnection",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvpcVpcPeeringConnectionId",
                        "name": "_dvpcVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of the VPC peering connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "DeleteVpcPeeringConnection",
                "query": [
                    {
                        "field": "_dvpcDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dvpcVpcPeeringConnectionId",
                        "locationName": "vpcPeeringConnectionId",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvpcDryRun",
                        "name": "_dvpcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvpcDryRun",
                        "name": "_dvpcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvpcVpcPeeringConnectionId",
                        "name": "_dvpcVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of the VPC peering connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteVpnConnectionResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteVpnConnectionResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVpnConnection.html",
            "namespace": "Network.AWS.EC2.DeleteVpnConnection",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteVpnConnection",
            "method": "post",
            "documentation": "-- | Deletes the specified VPN connection.\n--\n-- If you're deleting the VPC and its associated components, we recommend that\n-- you detach the virtual private gateway from the VPC and delete the VPC before\n-- deleting the VPN connection. If you believe that the tunnel credentials for\n-- your VPN connection have been compromised, you can delete the VPN connection\n-- and create a new one that has new keys, without needing to delete the VPC or\n-- virtual private gateway. If you create a new VPN connection, you must\n-- reconfigure the customer gateway using the new configuration information\n-- returned with the new VPN connection ID.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "deleteVpnConnection",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvcVpnConnectionId",
                        "name": "_dvcVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "-- | The ID of the VPN connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "DeleteVpnConnection",
                "query": [
                    {
                        "field": "_dvcDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dvcVpnConnectionId",
                        "locationName": "VpnConnectionId",
                        "type": "field"
                    }
                ],
                "locationPad": 16,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvcDryRun",
                        "name": "_dvcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvcDryRun",
                        "name": "_dvcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvcVpnConnectionId",
                        "name": "_dvcVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "-- | The ID of the VPN connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteVpnConnectionRouteResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteVpnConnectionRouteResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVpnConnectionRoute.html",
            "namespace": "Network.AWS.EC2.DeleteVpnConnectionRoute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteVpnConnectionRoute",
            "method": "post",
            "documentation": "-- | Deletes the specified static route associated with a VPN connection between\n-- an existing virtual private gateway and a VPN customer gateway. The static\n-- route allows traffic to be routed from the virtual private gateway to the VPN\n-- customer gateway.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "deleteVpnConnectionRoute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvcrVpnConnectionId",
                        "name": "_dvcrVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "-- | The ID of the VPN connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvcrDestinationCidrBlock",
                        "name": "_dvcrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "DestinationCidrBlock",
                        "documentation": "-- | The CIDR block associated with the local subnet of the customer network.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 21,
                "name": "DeleteVpnConnectionRoute",
                "query": [
                    {
                        "field": "_dvcrVpnConnectionId",
                        "locationName": "VpnConnectionId",
                        "type": "field"
                    },
                    {
                        "field": "_dvcrDestinationCidrBlock",
                        "locationName": "DestinationCidrBlock",
                        "type": "field"
                    }
                ],
                "locationPad": 21,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvcrDestinationCidrBlock",
                        "name": "_dvcrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "DestinationCidrBlock",
                        "documentation": "-- | The CIDR block associated with the local subnet of the customer network.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvcrVpnConnectionId",
                        "name": "_dvcrVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "-- | The ID of the VPN connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteVpnGatewayResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteVpnGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeleteVpnGateway.html",
            "namespace": "Network.AWS.EC2.DeleteVpnGateway",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeleteVpnGateway",
            "method": "post",
            "documentation": "-- | Deletes the specified virtual private gateway. We recommend that before you\n-- delete a virtual private gateway, you detach it from the VPC and delete the\n-- VPN connection. Note that you don't need to delete the virtual private\n-- gateway if you plan to delete and recreate the VPN connection between your\n-- VPC and your network.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "deleteVpnGateway",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvgVpnGatewayId",
                        "name": "_dvgVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeleteVpnGateway",
                "query": [
                    {
                        "field": "_dvgDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dvgVpnGatewayId",
                        "locationName": "VpnGatewayId",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvgDryRun",
                        "name": "_dvgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvgDryRun",
                        "name": "_dvgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvgVpnGatewayId",
                        "name": "_dvgVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deregisterImageResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeregisterImageResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DeregisterImage.html",
            "namespace": "Network.AWS.EC2.DeregisterImage",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DeregisterImage",
            "method": "post",
            "documentation": "-- | Deregisters the specified AMI. After you deregister an AMI, it can't be used\n-- to launch new instances.\n--\n-- This command does not delete the AMI.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 10,
                "ctor": "deregisterImage",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "diImageId",
                        "name": "_diImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 8,
                "name": "DeregisterImage",
                "query": [
                    {
                        "field": "_diDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_diImageId",
                        "locationName": "ImageId",
                        "type": "field"
                    }
                ],
                "locationPad": 8,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diDryRun",
                        "name": "_diDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diDryRun",
                        "name": "_diDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "diImageId",
                        "name": "_diImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeAccountAttributesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "daarAccountAttributes",
                    "name": "_daarAccountAttributes",
                    "shape": "AccountAttributeList",
                    "locationName": "accountAttributeSet",
                    "documentation": "-- | Information about one or more account attributes.",
                    "typeExposed": "[AccountAttribute]",
                    "type": "List \"item\" AccountAttribute"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeAccountAttributesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "daarAccountAttributes",
                        "name": "_daarAccountAttributes",
                        "shape": "AccountAttributeList",
                        "locationName": "accountAttributeSet",
                        "documentation": "-- | Information about one or more account attributes.",
                        "typeExposed": "[AccountAttribute]",
                        "type": "List \"item\" AccountAttribute"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "daarAccountAttributes",
                        "name": "_daarAccountAttributes",
                        "shape": "AccountAttributeList",
                        "locationName": "accountAttributeSet",
                        "documentation": "-- | Information about one or more account attributes.",
                        "typeExposed": "[AccountAttribute]",
                        "type": "List \"item\" AccountAttribute"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeAccountAttributes.html",
            "namespace": "Network.AWS.EC2.DescribeAccountAttributes",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeAccountAttributes",
            "method": "post",
            "documentation": "-- | Describes the specified attribute of your AWS account.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "describeAccountAttributes",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "DescribeAccountAttributes",
                "query": [
                    {
                        "field": "_daaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_daaAttributeNames",
                        "locationName": "attributeName",
                        "type": "field"
                    }
                ],
                "locationPad": 14,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "daaDryRun",
                        "name": "_daaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "daaAttributeNames",
                        "name": "_daaAttributeNames",
                        "shape": "AccountAttributeNameStringList",
                        "locationName": "attributeName",
                        "documentation": "-- | One or more account attribute names.",
                        "typeExposed": "[AccountAttributeName]",
                        "type": "List \"attributeName\" AccountAttributeName"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "daaAttributeNames",
                        "name": "_daaAttributeNames",
                        "shape": "AccountAttributeNameStringList",
                        "locationName": "attributeName",
                        "documentation": "-- | One or more account attribute names.",
                        "typeExposed": "[AccountAttributeName]",
                        "type": "List \"attributeName\" AccountAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "daaDryRun",
                        "name": "_daaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeAddressesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "darAddresses",
                    "name": "_darAddresses",
                    "shape": "AddressList",
                    "locationName": "addressesSet",
                    "documentation": "-- | Information about one or more Elastic IP addresses.",
                    "typeExposed": "[Address]",
                    "type": "List \"item\" Address"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeAddressesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "darAddresses",
                        "name": "_darAddresses",
                        "shape": "AddressList",
                        "locationName": "addressesSet",
                        "documentation": "-- | Information about one or more Elastic IP addresses.",
                        "typeExposed": "[Address]",
                        "type": "List \"item\" Address"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "darAddresses",
                        "name": "_darAddresses",
                        "shape": "AddressList",
                        "locationName": "addressesSet",
                        "documentation": "-- | Information about one or more Elastic IP addresses.",
                        "typeExposed": "[Address]",
                        "type": "List \"item\" Address"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeAddresses.html",
            "namespace": "Network.AWS.EC2.DescribeAddresses",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeAddresses",
            "method": "post",
            "documentation": "-- | Describes one or more of your Elastic IP addresses.\n--\n-- An Elastic IP address is for use in either the EC2-Classic platform or in a\n-- VPC. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html Elastic IP Addresses\u003e in the /Amazon ElasticCompute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "describeAddresses",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DescribeAddresses",
                "query": [
                    {
                        "field": "_daDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_daPublicIps",
                        "locationName": "PublicIp",
                        "type": "field"
                    },
                    {
                        "field": "_daFilters",
                        "locationName": "Filter",
                        "type": "field"
                    },
                    {
                        "field": "_daAllocationIds",
                        "locationName": "AllocationId",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "daDryRun",
                        "name": "_daDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "daPublicIps",
                        "name": "_daPublicIps",
                        "shape": "PublicIpStringList",
                        "locationName": "PublicIp",
                        "documentation": "-- | [EC2-Classic] One or more Elastic IP addresses.\n--\n-- Default: Describes all your Elastic IP addresses.",
                        "typeExposed": "[Text]",
                        "type": "List \"PublicIp\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "daFilters",
                        "name": "_daFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters. Filter names and values are case-sensitive.\n--\n-- 'allocation-id' - [EC2-VPC] The allocation ID for the address.\n--\n-- 'association-id' - [EC2-VPC] The association ID for the address.\n--\n-- 'domain' - Indicates whether the address is for use in EC2-Classic ('standard') or in a VPC (\n-- 'vpc').\n--\n-- 'instance-id' - The ID of the instance the address is associated with, if\n-- any.\n--\n-- 'network-interface-id' - [EC2-VPC] The ID of the network interface that the\n-- address is associated with, if any.\n--\n-- 'network-interface-owner-id' - The AWS account ID of the owner.\n--\n-- 'private-ip-address' - [EC2-VPC] The private IP address associated with the\n-- Elastic IP address.\n--\n-- 'public-ip' - The Elastic IP address.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "daAllocationIds",
                        "name": "_daAllocationIds",
                        "shape": "AllocationIdList",
                        "locationName": "AllocationId",
                        "documentation": "-- | [EC2-VPC] One or more allocation IDs.\n--\n-- Default: Describes all your Elastic IP addresses.",
                        "typeExposed": "[Text]",
                        "type": "List \"AllocationId\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "daAllocationIds",
                        "name": "_daAllocationIds",
                        "shape": "AllocationIdList",
                        "locationName": "AllocationId",
                        "documentation": "-- | [EC2-VPC] One or more allocation IDs.\n--\n-- Default: Describes all your Elastic IP addresses.",
                        "typeExposed": "[Text]",
                        "type": "List \"AllocationId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "daDryRun",
                        "name": "_daDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "daFilters",
                        "name": "_daFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters. Filter names and values are case-sensitive.\n--\n-- 'allocation-id' - [EC2-VPC] The allocation ID for the address.\n--\n-- 'association-id' - [EC2-VPC] The association ID for the address.\n--\n-- 'domain' - Indicates whether the address is for use in EC2-Classic ('standard') or in a VPC (\n-- 'vpc').\n--\n-- 'instance-id' - The ID of the instance the address is associated with, if\n-- any.\n--\n-- 'network-interface-id' - [EC2-VPC] The ID of the network interface that the\n-- address is associated with, if any.\n--\n-- 'network-interface-owner-id' - The AWS account ID of the owner.\n--\n-- 'private-ip-address' - [EC2-VPC] The private IP address associated with the\n-- Elastic IP address.\n--\n-- 'public-ip' - The Elastic IP address.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "daPublicIps",
                        "name": "_daPublicIps",
                        "shape": "PublicIpStringList",
                        "locationName": "PublicIp",
                        "documentation": "-- | [EC2-Classic] One or more Elastic IP addresses.\n--\n-- Default: Describes all your Elastic IP addresses.",
                        "typeExposed": "[Text]",
                        "type": "List \"PublicIp\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeAvailabilityZonesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dazrAvailabilityZones",
                    "name": "_dazrAvailabilityZones",
                    "shape": "AvailabilityZoneList",
                    "locationName": "availabilityZoneInfo",
                    "documentation": "-- | Information about one or more Availability Zones.",
                    "typeExposed": "[AvailabilityZone]",
                    "type": "List \"item\" AvailabilityZone"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeAvailabilityZonesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dazrAvailabilityZones",
                        "name": "_dazrAvailabilityZones",
                        "shape": "AvailabilityZoneList",
                        "locationName": "availabilityZoneInfo",
                        "documentation": "-- | Information about one or more Availability Zones.",
                        "typeExposed": "[AvailabilityZone]",
                        "type": "List \"item\" AvailabilityZone"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dazrAvailabilityZones",
                        "name": "_dazrAvailabilityZones",
                        "shape": "AvailabilityZoneList",
                        "locationName": "availabilityZoneInfo",
                        "documentation": "-- | Information about one or more Availability Zones.",
                        "typeExposed": "[AvailabilityZone]",
                        "type": "List \"item\" AvailabilityZone"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeAvailabilityZones.html",
            "namespace": "Network.AWS.EC2.DescribeAvailabilityZones",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeAvailabilityZones",
            "method": "post",
            "documentation": "-- | Describes one or more of the Availability Zones that are available to you.\n-- The results include zones only for the region you're currently using. If\n-- there is an event impacting an Availability Zone, you can use this request to\n-- view the state and any provided message for that Availability Zone.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html Regions and Availability Zones\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "describeAvailabilityZones",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DescribeAvailabilityZones",
                "query": [
                    {
                        "field": "_dazDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dazZoneNames",
                        "locationName": "ZoneName",
                        "type": "field"
                    },
                    {
                        "field": "_dazFilters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dazDryRun",
                        "name": "_dazDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dazZoneNames",
                        "name": "_dazZoneNames",
                        "shape": "ZoneNameStringList",
                        "locationName": "ZoneName",
                        "documentation": "-- | The names of one or more Availability Zones.",
                        "typeExposed": "[Text]",
                        "type": "List \"ZoneName\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dazFilters",
                        "name": "_dazFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'message' - Information about the Availability Zone.\n--\n-- 'region-name' - The name of the region for the Availability Zone (for\n-- example, 'us-east-1').\n--\n-- 'state' - The state of the Availability Zone ('available' | 'impaired' | 'unavailable').\n--\n-- 'zone-name' - The name of the Availability Zone (for example, 'us-east-1a').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dazDryRun",
                        "name": "_dazDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dazFilters",
                        "name": "_dazFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'message' - Information about the Availability Zone.\n--\n-- 'region-name' - The name of the region for the Availability Zone (for\n-- example, 'us-east-1').\n--\n-- 'state' - The state of the Availability Zone ('available' | 'impaired' | 'unavailable').\n--\n-- 'zone-name' - The name of the Availability Zone (for example, 'us-east-1a').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dazZoneNames",
                        "name": "_dazZoneNames",
                        "shape": "ZoneNameStringList",
                        "locationName": "ZoneName",
                        "documentation": "-- | The names of one or more Availability Zones.",
                        "typeExposed": "[Text]",
                        "type": "List \"ZoneName\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeBundleTasksResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dbtrBundleTasks",
                    "name": "_dbtrBundleTasks",
                    "shape": "BundleTaskList",
                    "locationName": "bundleInstanceTasksSet",
                    "documentation": "-- | Information about one or more bundle tasks.",
                    "typeExposed": "[BundleTask]",
                    "type": "List \"item\" BundleTask"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeBundleTasksResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dbtrBundleTasks",
                        "name": "_dbtrBundleTasks",
                        "shape": "BundleTaskList",
                        "locationName": "bundleInstanceTasksSet",
                        "documentation": "-- | Information about one or more bundle tasks.",
                        "typeExposed": "[BundleTask]",
                        "type": "List \"item\" BundleTask"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dbtrBundleTasks",
                        "name": "_dbtrBundleTasks",
                        "shape": "BundleTaskList",
                        "locationName": "bundleInstanceTasksSet",
                        "documentation": "-- | Information about one or more bundle tasks.",
                        "typeExposed": "[BundleTask]",
                        "type": "List \"item\" BundleTask"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeBundleTasks.html",
            "namespace": "Network.AWS.EC2.DescribeBundleTasks",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeBundleTasks",
            "method": "post",
            "documentation": "-- | Describes one or more of your bundling tasks.\n--\n-- Completed bundle tasks are listed for only a limited time. If your bundle\n-- task is no longer in the list, you can still register an AMI from it. Just\n-- use 'RegisterImage' with the Amazon S3 bucket name and image manifest name you\n-- provided to the bundle task.\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "describeBundleTasks",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DescribeBundleTasks",
                "query": [
                    {
                        "field": "_dbtDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dbtBundleIds",
                        "locationName": "BundleId",
                        "type": "field"
                    },
                    {
                        "field": "_dbtFilters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dbtDryRun",
                        "name": "_dbtDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dbtBundleIds",
                        "name": "_dbtBundleIds",
                        "shape": "BundleIdStringList",
                        "locationName": "BundleId",
                        "documentation": "-- | One or more bundle task IDs.\n--\n-- Default: Describes all your bundle tasks.",
                        "typeExposed": "[Text]",
                        "type": "List \"BundleId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dbtFilters",
                        "name": "_dbtFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'bundle-id' - The ID of the bundle task.\n--\n-- 'error-code' - If the task failed, the error code returned.\n--\n-- 'error-message' - If the task failed, the error message returned.\n--\n-- 'instance-id' - The ID of the instance.\n--\n-- 'progress' - The level of task completion, as a percentage (for example,\n-- 20%).\n--\n-- 's3-bucket' - The Amazon S3 bucket to store the AMI.\n--\n-- 's3-prefix' - The beginning of the AMI name.\n--\n-- 'start-time' - The time the task started (for example,\n-- 2013-09-15T17:15:20.000Z).\n--\n-- 'state' - The state of the task ('pending' | 'waiting-for-shutdown' | 'bundling' | 'storing' | 'cancelling' | 'complete' | 'failed').\n--\n-- 'update-time' - The time of the most recent update for the task.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dbtBundleIds",
                        "name": "_dbtBundleIds",
                        "shape": "BundleIdStringList",
                        "locationName": "BundleId",
                        "documentation": "-- | One or more bundle task IDs.\n--\n-- Default: Describes all your bundle tasks.",
                        "typeExposed": "[Text]",
                        "type": "List \"BundleId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dbtDryRun",
                        "name": "_dbtDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dbtFilters",
                        "name": "_dbtFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'bundle-id' - The ID of the bundle task.\n--\n-- 'error-code' - If the task failed, the error code returned.\n--\n-- 'error-message' - If the task failed, the error message returned.\n--\n-- 'instance-id' - The ID of the instance.\n--\n-- 'progress' - The level of task completion, as a percentage (for example,\n-- 20%).\n--\n-- 's3-bucket' - The Amazon S3 bucket to store the AMI.\n--\n-- 's3-prefix' - The beginning of the AMI name.\n--\n-- 'start-time' - The time the task started (for example,\n-- 2013-09-15T17:15:20.000Z).\n--\n-- 'state' - The state of the task ('pending' | 'waiting-for-shutdown' | 'bundling' | 'storing' | 'cancelling' | 'complete' | 'failed').\n--\n-- 'update-time' - The time of the most recent update for the task.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeConversionTasksResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dctrConversionTasks",
                    "name": "_dctrConversionTasks",
                    "shape": "DescribeConversionTaskList",
                    "locationName": "conversionTasks",
                    "documentation": null,
                    "typeExposed": "[ConversionTask]",
                    "type": "List \"item\" ConversionTask"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeConversionTasksResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dctrConversionTasks",
                        "name": "_dctrConversionTasks",
                        "shape": "DescribeConversionTaskList",
                        "locationName": "conversionTasks",
                        "documentation": null,
                        "typeExposed": "[ConversionTask]",
                        "type": "List \"item\" ConversionTask"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dctrConversionTasks",
                        "name": "_dctrConversionTasks",
                        "shape": "DescribeConversionTaskList",
                        "locationName": "conversionTasks",
                        "documentation": null,
                        "typeExposed": "[ConversionTask]",
                        "type": "List \"item\" ConversionTask"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeConversionTasks.html",
            "namespace": "Network.AWS.EC2.DescribeConversionTasks",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeConversionTasks",
            "method": "post",
            "documentation": "-- | Describes one or more of your conversion tasks. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UploadingYourInstancesandVolumes.html Using the Command Line Tools to Import Your Virtual Machine to Amazon EC2\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 21,
                "ctor": "describeConversionTasks",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "DescribeConversionTasks",
                "query": [
                    {
                        "field": "_dctDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dctFilters",
                        "locationName": "filter",
                        "type": "field"
                    },
                    {
                        "field": "_dctConversionTaskIds",
                        "locationName": "conversionTaskId",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dctDryRun",
                        "name": "_dctDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dctFilters",
                        "name": "_dctFilters",
                        "shape": "FilterList",
                        "locationName": "filter",
                        "documentation": null,
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dctConversionTaskIds",
                        "name": "_dctConversionTaskIds",
                        "shape": "ConversionIdStringList",
                        "locationName": "conversionTaskId",
                        "documentation": "-- | One or more conversion task IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dctConversionTaskIds",
                        "name": "_dctConversionTaskIds",
                        "shape": "ConversionIdStringList",
                        "locationName": "conversionTaskId",
                        "documentation": "-- | One or more conversion task IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dctDryRun",
                        "name": "_dctDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dctFilters",
                        "name": "_dctFilters",
                        "shape": "FilterList",
                        "locationName": "filter",
                        "documentation": null,
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeCustomerGatewaysResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dcgrCustomerGateways",
                    "name": "_dcgrCustomerGateways",
                    "shape": "CustomerGatewayList",
                    "locationName": "customerGatewaySet",
                    "documentation": "-- | Information about one or more customer gateways.",
                    "typeExposed": "[CustomerGateway]",
                    "type": "List \"item\" CustomerGateway"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeCustomerGatewaysResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dcgrCustomerGateways",
                        "name": "_dcgrCustomerGateways",
                        "shape": "CustomerGatewayList",
                        "locationName": "customerGatewaySet",
                        "documentation": "-- | Information about one or more customer gateways.",
                        "typeExposed": "[CustomerGateway]",
                        "type": "List \"item\" CustomerGateway"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dcgrCustomerGateways",
                        "name": "_dcgrCustomerGateways",
                        "shape": "CustomerGatewayList",
                        "locationName": "customerGatewaySet",
                        "documentation": "-- | Information about one or more customer gateways.",
                        "typeExposed": "[CustomerGateway]",
                        "type": "List \"item\" CustomerGateway"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeCustomerGateways.html",
            "namespace": "Network.AWS.EC2.DescribeCustomerGateways",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeCustomerGateways",
            "method": "post",
            "documentation": "-- | Describes one or more of your VPN customer gateways.\n--\n-- For more information about VPN customer gateways, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html Adding a HardwareVirtual Private Gateway to Your VPC\u003e in the /Amazon Virtual Private Cloud UserGuide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "describeCustomerGateways",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "DescribeCustomerGateways",
                "query": [
                    {
                        "field": "_dcgDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dcgCustomerGatewayIds",
                        "locationName": "CustomerGatewayId",
                        "type": "field"
                    },
                    {
                        "field": "_dcgFilters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dcgDryRun",
                        "name": "_dcgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dcgCustomerGatewayIds",
                        "name": "_dcgCustomerGatewayIds",
                        "shape": "CustomerGatewayIdStringList",
                        "locationName": "CustomerGatewayId",
                        "documentation": "-- | One or more customer gateway IDs.\n--\n-- Default: Describes all your customer gateways.",
                        "typeExposed": "[Text]",
                        "type": "List \"CustomerGatewayId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dcgFilters",
                        "name": "_dcgFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'bgp-asn' - The customer gateway's Border Gateway Protocol (BGP) Autonomous\n-- System Number (ASN).\n--\n-- 'customer-gateway-id' - The ID of the customer gateway.\n--\n-- 'ip-address' - The IP address of the customer gateway's Internet-routable\n-- external interface.\n--\n-- 'state' - The state of the customer gateway ('pending' | 'available' | 'deleting'\n-- | 'deleted').\n--\n-- 'type' - The type of customer gateway. Currently, the only supported type is 'ipsec.1'.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dcgCustomerGatewayIds",
                        "name": "_dcgCustomerGatewayIds",
                        "shape": "CustomerGatewayIdStringList",
                        "locationName": "CustomerGatewayId",
                        "documentation": "-- | One or more customer gateway IDs.\n--\n-- Default: Describes all your customer gateways.",
                        "typeExposed": "[Text]",
                        "type": "List \"CustomerGatewayId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dcgDryRun",
                        "name": "_dcgDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dcgFilters",
                        "name": "_dcgFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'bgp-asn' - The customer gateway's Border Gateway Protocol (BGP) Autonomous\n-- System Number (ASN).\n--\n-- 'customer-gateway-id' - The ID of the customer gateway.\n--\n-- 'ip-address' - The IP address of the customer gateway's Internet-routable\n-- external interface.\n--\n-- 'state' - The state of the customer gateway ('pending' | 'available' | 'deleting'\n-- | 'deleted').\n--\n-- 'type' - The type of customer gateway. Currently, the only supported type is 'ipsec.1'.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeDhcpOptionsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "ddorDhcpOptions",
                    "name": "_ddorDhcpOptions",
                    "shape": "DhcpOptionsList",
                    "locationName": "dhcpOptionsSet",
                    "documentation": "-- | Information about one or more DHCP options sets.",
                    "typeExposed": "[DhcpOptions]",
                    "type": "List \"item\" DhcpOptions"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeDhcpOptionsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ddorDhcpOptions",
                        "name": "_ddorDhcpOptions",
                        "shape": "DhcpOptionsList",
                        "locationName": "dhcpOptionsSet",
                        "documentation": "-- | Information about one or more DHCP options sets.",
                        "typeExposed": "[DhcpOptions]",
                        "type": "List \"item\" DhcpOptions"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ddorDhcpOptions",
                        "name": "_ddorDhcpOptions",
                        "shape": "DhcpOptionsList",
                        "locationName": "dhcpOptionsSet",
                        "documentation": "-- | Information about one or more DHCP options sets.",
                        "typeExposed": "[DhcpOptions]",
                        "type": "List \"item\" DhcpOptions"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeDhcpOptions.html",
            "namespace": "Network.AWS.EC2.DescribeDhcpOptions",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeDhcpOptions",
            "method": "post",
            "documentation": "-- | Describes one or more of your DHCP options sets.\n--\n-- For more information about DHCP options sets, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html DHCP Options Sets\u003e in the /Amazon Virtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "describeDhcpOptions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "DescribeDhcpOptions",
                "query": [
                    {
                        "field": "_ddoDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ddoDhcpOptionsIds",
                        "locationName": "DhcpOptionsId",
                        "type": "field"
                    },
                    {
                        "field": "_ddoFilters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 14,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ddoDryRun",
                        "name": "_ddoDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ddoDhcpOptionsIds",
                        "name": "_ddoDhcpOptionsIds",
                        "shape": "DhcpOptionsIdStringList",
                        "locationName": "DhcpOptionsId",
                        "documentation": "-- | The IDs of one or more DHCP options sets.\n--\n-- Default: Describes all your DHCP options sets.",
                        "typeExposed": "[Text]",
                        "type": "List \"DhcpOptionsId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ddoFilters",
                        "name": "_ddoFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'dhcp-options-id' - The ID of a set of DHCP options.\n--\n-- 'key' - The key for one of the options (for example, 'domain-name').\n--\n-- 'value' - The value for one of the options.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ddoDhcpOptionsIds",
                        "name": "_ddoDhcpOptionsIds",
                        "shape": "DhcpOptionsIdStringList",
                        "locationName": "DhcpOptionsId",
                        "documentation": "-- | The IDs of one or more DHCP options sets.\n--\n-- Default: Describes all your DHCP options sets.",
                        "typeExposed": "[Text]",
                        "type": "List \"DhcpOptionsId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ddoDryRun",
                        "name": "_ddoDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ddoFilters",
                        "name": "_ddoFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'dhcp-options-id' - The ID of a set of DHCP options.\n--\n-- 'key' - The key for one of the options (for example, 'domain-name').\n--\n-- 'value' - The value for one of the options.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeExportTasksResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "detrExportTasks",
                    "name": "_detrExportTasks",
                    "shape": "ExportTaskList",
                    "locationName": "exportTaskSet",
                    "documentation": null,
                    "typeExposed": "[ExportTask]",
                    "type": "List \"item\" ExportTask"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeExportTasksResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "detrExportTasks",
                        "name": "_detrExportTasks",
                        "shape": "ExportTaskList",
                        "locationName": "exportTaskSet",
                        "documentation": null,
                        "typeExposed": "[ExportTask]",
                        "type": "List \"item\" ExportTask"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "detrExportTasks",
                        "name": "_detrExportTasks",
                        "shape": "ExportTaskList",
                        "locationName": "exportTaskSet",
                        "documentation": null,
                        "typeExposed": "[ExportTask]",
                        "type": "List \"item\" ExportTask"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeExportTasks.html",
            "namespace": "Network.AWS.EC2.DescribeExportTasks",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeExportTasks",
            "method": "post",
            "documentation": "-- | Describes one or more of your export tasks.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "describeExportTasks",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "detExportTaskIds",
                    "name": "_detExportTaskIds",
                    "shape": "ExportTaskIdStringList",
                    "locationName": "exportTaskId",
                    "documentation": "-- | One or more export task IDs.",
                    "typeExposed": "[Text]",
                    "type": "List \"ExportTaskId\" Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DescribeExportTasks",
                "query": [
                    {
                        "field": "_detExportTaskIds",
                        "locationName": "exportTaskId",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "detExportTaskIds",
                        "name": "_detExportTaskIds",
                        "shape": "ExportTaskIdStringList",
                        "locationName": "exportTaskId",
                        "documentation": "-- | One or more export task IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"ExportTaskId\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "detExportTaskIds",
                        "name": "_detExportTaskIds",
                        "shape": "ExportTaskIdStringList",
                        "locationName": "exportTaskId",
                        "documentation": "-- | One or more export task IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"ExportTaskId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 24,
                "ctor": "describeImageAttributeResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeImageAttributeResponse",
                "resultWrapper": null,
                "locationPad": 19,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diarImageId",
                        "name": "_diarImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diarLaunchPermissions",
                        "name": "_diarLaunchPermissions",
                        "shape": "LaunchPermissionList",
                        "locationName": "launchPermission",
                        "documentation": "-- | One or more launch permissions.",
                        "typeExposed": "[LaunchPermission]",
                        "type": "List \"item\" LaunchPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diarProductCodes",
                        "name": "_diarProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | One or more product codes.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diarKernelId",
                        "name": "_diarKernelId",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "-- | The kernel ID.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diarRamdiskId",
                        "name": "_diarRamdiskId",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "-- | The RAM disk ID.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diarDescription",
                        "name": "_diarDescription",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "-- | A description for the AMI.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diarSriovNetSupport",
                        "name": "_diarSriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diarBlockDeviceMappings",
                        "name": "_diarBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | One or more block device mapping entries.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"item\" BlockDeviceMapping"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diarBlockDeviceMappings",
                        "name": "_diarBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | One or more block device mapping entries.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"item\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diarDescription",
                        "name": "_diarDescription",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "-- | A description for the AMI.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diarImageId",
                        "name": "_diarImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diarKernelId",
                        "name": "_diarKernelId",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "-- | The kernel ID.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diarLaunchPermissions",
                        "name": "_diarLaunchPermissions",
                        "shape": "LaunchPermissionList",
                        "locationName": "launchPermission",
                        "documentation": "-- | One or more launch permissions.",
                        "typeExposed": "[LaunchPermission]",
                        "type": "List \"item\" LaunchPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diarProductCodes",
                        "name": "_diarProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | One or more product codes.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diarRamdiskId",
                        "name": "_diarRamdiskId",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "-- | The RAM disk ID.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diarSriovNetSupport",
                        "name": "_diarSriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeImageAttribute.html",
            "namespace": "Network.AWS.EC2.DescribeImageAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeImageAttribute",
            "method": "post",
            "documentation": "-- | Describes the specified attribute of the specified AMI. You can specify only\n-- one attribute at a time.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "describeImageAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dia1ImageId",
                        "name": "_dia1ImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dia1Attribute",
                        "name": "_dia1Attribute",
                        "shape": "ImageAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The AMI attribute.",
                        "typeExposed": "ImageAttributeName",
                        "type": "ImageAttributeName"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DescribeImageAttribute",
                "query": [
                    {
                        "field": "_dia1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dia1ImageId",
                        "locationName": "ImageId",
                        "type": "field"
                    },
                    {
                        "field": "_dia1Attribute",
                        "locationName": "Attribute",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dia1DryRun",
                        "name": "_dia1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dia1Attribute",
                        "name": "_dia1Attribute",
                        "shape": "ImageAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The AMI attribute.",
                        "typeExposed": "ImageAttributeName",
                        "type": "ImageAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dia1DryRun",
                        "name": "_dia1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dia1ImageId",
                        "name": "_dia1ImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeImagesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dirImages",
                    "name": "_dirImages",
                    "shape": "ImageList",
                    "locationName": "imagesSet",
                    "documentation": "-- | Information about one or more images.",
                    "typeExposed": "[Image]",
                    "type": "List \"item\" Image"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeImagesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dirImages",
                        "name": "_dirImages",
                        "shape": "ImageList",
                        "locationName": "imagesSet",
                        "documentation": "-- | Information about one or more images.",
                        "typeExposed": "[Image]",
                        "type": "List \"item\" Image"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dirImages",
                        "name": "_dirImages",
                        "shape": "ImageList",
                        "locationName": "imagesSet",
                        "documentation": "-- | Information about one or more images.",
                        "typeExposed": "[Image]",
                        "type": "List \"item\" Image"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeImages.html",
            "namespace": "Network.AWS.EC2.DescribeImages",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeImages",
            "method": "post",
            "documentation": "-- | Describes one or more of the images (AMIs, AKIs, and ARIs) available to you.\n-- Images available to you include public images, private images that you own,\n-- and private images owned by other AWS accounts but for which you have\n-- explicit launch permissions.\n--\n-- Deregistered images are included in the returned results for an unspecified\n-- interval after deregistration.\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "describeImages",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DescribeImages",
                "query": [
                    {
                        "field": "_di2DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_di2ImageIds",
                        "locationName": "ImageId",
                        "type": "field"
                    },
                    {
                        "field": "_di2Owners",
                        "locationName": "Owner",
                        "type": "field"
                    },
                    {
                        "field": "_di2ExecutableUsers",
                        "locationName": "ExecutableBy",
                        "type": "field"
                    },
                    {
                        "field": "_di2Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "di2DryRun",
                        "name": "_di2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di2ImageIds",
                        "name": "_di2ImageIds",
                        "shape": "ImageIdStringList",
                        "locationName": "ImageId",
                        "documentation": "-- | One or more image IDs.\n--\n-- Default: Describes all images available to you.",
                        "typeExposed": "[Text]",
                        "type": "List \"ImageId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di2Owners",
                        "name": "_di2Owners",
                        "shape": "OwnerStringList",
                        "locationName": "Owner",
                        "documentation": "-- | Filters the images by the owner. Specify an AWS account ID, 'amazon' (owner is\n-- Amazon), 'aws-marketplace' (owner is AWS Marketplace), 'self' (owner is the\n-- sender of the request), or 'all' (all owners).",
                        "typeExposed": "[Text]",
                        "type": "List \"Owner\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di2ExecutableUsers",
                        "name": "_di2ExecutableUsers",
                        "shape": "ExecutableByStringList",
                        "locationName": "ExecutableBy",
                        "documentation": "-- | Scopes the images by users with explicit launch permissions. Specify an AWS\n-- account ID, 'self' (the sender of the request), or 'all' (public AMIs).",
                        "typeExposed": "[Text]",
                        "type": "List \"ExecutableBy\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di2Filters",
                        "name": "_di2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'architecture' - The image architecture ('i386' | 'x86_64').\n--\n-- 'block-device-mapping.delete-on-termination' - A Boolean value that\n-- indicates whether the Amazon EBS volume is deleted on instance termination.\n--\n-- 'block-device-mapping.device-name' - The device name for the Amazon EBS\n-- volume (for example, '/dev/sdh').\n--\n-- 'block-device-mapping.snapshot-id' - The ID of the snapshot used for the\n-- Amazon EBS volume.\n--\n-- 'block-device-mapping.volume-size' - The volume size of the Amazon EBS\n-- volume, in GiB.\n--\n-- 'block-device-mapping.volume-type' - The volume type of the Amazon EBS\n-- volume ('gp2' | 'standard' | 'io1').\n--\n-- 'description' - The description of the image (provided during image\n-- creation).\n--\n-- 'hypervisor' - The hypervisor type ('ovm' | 'xen').\n--\n-- 'image-id' - The ID of the image.\n--\n-- 'image-type' - The image type ('machine' | 'kernel' | 'ramdisk').\n--\n-- 'is-public' - A Boolean that indicates whether the image is public.\n--\n-- 'kernel-id' - The kernel ID.\n--\n-- 'manifest-location' - The location of the image manifest.\n--\n-- 'name' - The name of the AMI (provided during image creation).\n--\n-- 'owner-alias' - The AWS account alias (for example, 'amazon').\n--\n-- 'owner-id' - The AWS account ID of the image owner.\n--\n-- 'platform' - The platform. To only list Windows-based AMIs, use 'windows'.\n--\n-- 'product-code' - The product code.\n--\n-- 'product-code.type' - The type of the product code ('devpay' | 'marketplace').\n--\n-- 'ramdisk-id' - The RAM disk ID.\n--\n-- 'root-device-name' - The name of the root device volume (for example, '/dev/sda1').\n--\n-- 'root-device-type' - The type of the root device volume ('ebs' | 'instance-store'\n-- ).\n--\n-- 'state' - The state of the image ('available' | 'pending' | 'failed').\n--\n-- 'state-reason-code' - The reason code for the state change.\n--\n-- 'state-reason-message' - The message for the state change.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the tag-value filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'virtualization-type' - The virtualization type ('paravirtual' | 'hvm').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "di2DryRun",
                        "name": "_di2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di2ExecutableUsers",
                        "name": "_di2ExecutableUsers",
                        "shape": "ExecutableByStringList",
                        "locationName": "ExecutableBy",
                        "documentation": "-- | Scopes the images by users with explicit launch permissions. Specify an AWS\n-- account ID, 'self' (the sender of the request), or 'all' (public AMIs).",
                        "typeExposed": "[Text]",
                        "type": "List \"ExecutableBy\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di2Filters",
                        "name": "_di2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'architecture' - The image architecture ('i386' | 'x86_64').\n--\n-- 'block-device-mapping.delete-on-termination' - A Boolean value that\n-- indicates whether the Amazon EBS volume is deleted on instance termination.\n--\n-- 'block-device-mapping.device-name' - The device name for the Amazon EBS\n-- volume (for example, '/dev/sdh').\n--\n-- 'block-device-mapping.snapshot-id' - The ID of the snapshot used for the\n-- Amazon EBS volume.\n--\n-- 'block-device-mapping.volume-size' - The volume size of the Amazon EBS\n-- volume, in GiB.\n--\n-- 'block-device-mapping.volume-type' - The volume type of the Amazon EBS\n-- volume ('gp2' | 'standard' | 'io1').\n--\n-- 'description' - The description of the image (provided during image\n-- creation).\n--\n-- 'hypervisor' - The hypervisor type ('ovm' | 'xen').\n--\n-- 'image-id' - The ID of the image.\n--\n-- 'image-type' - The image type ('machine' | 'kernel' | 'ramdisk').\n--\n-- 'is-public' - A Boolean that indicates whether the image is public.\n--\n-- 'kernel-id' - The kernel ID.\n--\n-- 'manifest-location' - The location of the image manifest.\n--\n-- 'name' - The name of the AMI (provided during image creation).\n--\n-- 'owner-alias' - The AWS account alias (for example, 'amazon').\n--\n-- 'owner-id' - The AWS account ID of the image owner.\n--\n-- 'platform' - The platform. To only list Windows-based AMIs, use 'windows'.\n--\n-- 'product-code' - The product code.\n--\n-- 'product-code.type' - The type of the product code ('devpay' | 'marketplace').\n--\n-- 'ramdisk-id' - The RAM disk ID.\n--\n-- 'root-device-name' - The name of the root device volume (for example, '/dev/sda1').\n--\n-- 'root-device-type' - The type of the root device volume ('ebs' | 'instance-store'\n-- ).\n--\n-- 'state' - The state of the image ('available' | 'pending' | 'failed').\n--\n-- 'state-reason-code' - The reason code for the state change.\n--\n-- 'state-reason-message' - The message for the state change.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the tag-value filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'virtualization-type' - The virtualization type ('paravirtual' | 'hvm').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di2ImageIds",
                        "name": "_di2ImageIds",
                        "shape": "ImageIdStringList",
                        "locationName": "ImageId",
                        "documentation": "-- | One or more image IDs.\n--\n-- Default: Describes all images available to you.",
                        "typeExposed": "[Text]",
                        "type": "List \"ImageId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di2Owners",
                        "name": "_di2Owners",
                        "shape": "OwnerStringList",
                        "locationName": "Owner",
                        "documentation": "-- | Filters the images by the owner. Specify an AWS account ID, 'amazon' (owner is\n-- Amazon), 'aws-marketplace' (owner is AWS Marketplace), 'self' (owner is the\n-- sender of the request), or 'all' (all owners).",
                        "typeExposed": "[Text]",
                        "type": "List \"Owner\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 39,
                "ctor": "describeInstanceAttributeResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeInstanceAttributeResponse",
                "resultWrapper": null,
                "locationPad": 34,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1InstanceId",
                        "name": "_diar1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1InstanceType",
                        "name": "_diar1InstanceType",
                        "shape": "AttributeValue",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1KernelId",
                        "name": "_diar1KernelId",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "-- | The kernel ID.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1RamdiskId",
                        "name": "_diar1RamdiskId",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "-- | The RAM disk ID.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1UserData",
                        "name": "_diar1UserData",
                        "shape": "AttributeValue",
                        "locationName": "userData",
                        "documentation": "-- | The Base64-encoded MIME user data.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1DisableApiTermination",
                        "name": "_diar1DisableApiTermination",
                        "shape": "AttributeBooleanValue",
                        "locationName": "disableApiTermination",
                        "documentation": "-- | If the value is 'true', you can't terminate the instance through the Amazon EC2\n-- console, CLI, or API; otherwise, you can.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1InstanceInitiatedShutdownBehavior",
                        "name": "_diar1InstanceInitiatedShutdownBehavior",
                        "shape": "AttributeValue",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "-- | Indicates whether an instance stops or terminates when you initiate shutdown\n-- from the instance (using the operating system command for system shutdown).",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1RootDeviceName",
                        "name": "_diar1RootDeviceName",
                        "shape": "AttributeValue",
                        "locationName": "rootDeviceName",
                        "documentation": "-- | The name of the root device (for example, '/dev/sda1').",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diar1BlockDeviceMappings",
                        "name": "_diar1BlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | The block device mapping of the instance.",
                        "typeExposed": "[InstanceBlockDeviceMapping]",
                        "type": "List \"item\" InstanceBlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diar1ProductCodes",
                        "name": "_diar1ProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | A list of product codes.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1EbsOptimized",
                        "name": "_diar1EbsOptimized",
                        "shape": "AttributeBooleanValue",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Indicates whether the instance is optimized for EBS I/O.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1SriovNetSupport",
                        "name": "_diar1SriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1SourceDestCheck",
                        "name": "_diar1SourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Indicates whether source/destination checking is enabled. A value of 'true'\n-- means checking is enabled, and 'false' means checking is disabled. This value\n-- must be 'false' for a NAT instance to perform NAT.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diar1Groups",
                        "name": "_diar1Groups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | The security groups associated with the instance.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diar1BlockDeviceMappings",
                        "name": "_diar1BlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | The block device mapping of the instance.",
                        "typeExposed": "[InstanceBlockDeviceMapping]",
                        "type": "List \"item\" InstanceBlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1DisableApiTermination",
                        "name": "_diar1DisableApiTermination",
                        "shape": "AttributeBooleanValue",
                        "locationName": "disableApiTermination",
                        "documentation": "-- | If the value is 'true', you can't terminate the instance through the Amazon EC2\n-- console, CLI, or API; otherwise, you can.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1EbsOptimized",
                        "name": "_diar1EbsOptimized",
                        "shape": "AttributeBooleanValue",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Indicates whether the instance is optimized for EBS I/O.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diar1Groups",
                        "name": "_diar1Groups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | The security groups associated with the instance.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1InstanceId",
                        "name": "_diar1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1InstanceInitiatedShutdownBehavior",
                        "name": "_diar1InstanceInitiatedShutdownBehavior",
                        "shape": "AttributeValue",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "-- | Indicates whether an instance stops or terminates when you initiate shutdown\n-- from the instance (using the operating system command for system shutdown).",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1InstanceType",
                        "name": "_diar1InstanceType",
                        "shape": "AttributeValue",
                        "locationName": "instanceType",
                        "documentation": "-- | The instance type.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1KernelId",
                        "name": "_diar1KernelId",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "-- | The kernel ID.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "diar1ProductCodes",
                        "name": "_diar1ProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | A list of product codes.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1RamdiskId",
                        "name": "_diar1RamdiskId",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "-- | The RAM disk ID.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1RootDeviceName",
                        "name": "_diar1RootDeviceName",
                        "shape": "AttributeValue",
                        "locationName": "rootDeviceName",
                        "documentation": "-- | The name of the root device (for example, '/dev/sda1').",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1SourceDestCheck",
                        "name": "_diar1SourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Indicates whether source/destination checking is enabled. A value of 'true'\n-- means checking is enabled, and 'false' means checking is disabled. This value\n-- must be 'false' for a NAT instance to perform NAT.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1SriovNetSupport",
                        "name": "_diar1SriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diar1UserData",
                        "name": "_diar1UserData",
                        "shape": "AttributeValue",
                        "locationName": "userData",
                        "documentation": "-- | The Base64-encoded MIME user data.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeInstanceAttribute.html",
            "namespace": "Network.AWS.EC2.DescribeInstanceAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeInstanceAttribute",
            "method": "post",
            "documentation": "-- | Describes the specified attribute of the specified instance. You can specify\n-- only one attribute at a time. Valid attribute values are: 'instanceType' | 'kernel' | 'ramdisk' | 'userData' | 'disableApiTermination' | 'instanceInitiatedShutdownBehavior' | 'rootDeviceName' | 'blockDeviceMapping' | 'productCodes' | 'sourceDestCheck' | 'groupSet' | 'ebsOptimized' | 'sriovNetSupport'",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "describeInstanceAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "diaInstanceId",
                        "name": "_diaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "diaAttribute",
                        "name": "_diaAttribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "-- | The instance attribute.",
                        "typeExposed": "InstanceAttributeName",
                        "type": "InstanceAttributeName"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DescribeInstanceAttribute",
                "query": [
                    {
                        "field": "_diaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_diaInstanceId",
                        "locationName": "instanceId",
                        "type": "field"
                    },
                    {
                        "field": "_diaAttribute",
                        "locationName": "attribute",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diaDryRun",
                        "name": "_diaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "diaAttribute",
                        "name": "_diaAttribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "-- | The instance attribute.",
                        "typeExposed": "InstanceAttributeName",
                        "type": "InstanceAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "diaDryRun",
                        "name": "_diaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "diaInstanceId",
                        "name": "_diaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 21,
                "ctor": "describeInstanceStatusResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeInstanceStatusResponse",
                "resultWrapper": null,
                "locationPad": 18,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "disrInstanceStatuses",
                        "name": "_disrInstanceStatuses",
                        "shape": "InstanceStatusList",
                        "locationName": "instanceStatusSet",
                        "documentation": "-- | One or more instance status descriptions.",
                        "typeExposed": "[InstanceStatus]",
                        "type": "List \"item\" InstanceStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "disrNextToken",
                        "name": "_disrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The next paginated set of results to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "disrInstanceStatuses",
                        "name": "_disrInstanceStatuses",
                        "shape": "InstanceStatusList",
                        "locationName": "instanceStatusSet",
                        "documentation": "-- | One or more instance status descriptions.",
                        "typeExposed": "[InstanceStatus]",
                        "type": "List \"item\" InstanceStatus"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "disrNextToken",
                        "name": "_disrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The next paginated set of results to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeInstanceStatus.html",
            "namespace": "Network.AWS.EC2.DescribeInstanceStatus",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": {
                "token": {
                    "input": "disNextToken",
                    "outputRequired": false,
                    "output": "disrNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "disrInstanceStatuses"
            },
            "name": "DescribeInstanceStatus",
            "method": "post",
            "documentation": "-- | Describes the status of one or more instances, including any scheduled events.\n--\n-- Instance status has two main components:\n--\n-- System Status reports impaired functionality that stems from issues\n-- related to the systems that support an instance, such as such as hardware\n-- failures and network connectivity problems. This call reports such problems\n-- as impaired reachability.\n--\n-- Instance Status reports impaired functionality that arises from problems\n-- internal to the instance. This call reports such problems as impaired\n-- reachability.\n--\n-- Instance status provides information about four types of scheduled events\n-- for an instance that may require your attention:\n--\n-- Scheduled Reboot: When Amazon EC2 determines that an instance must be\n-- rebooted, the instances status returns one of two event codes: 'system-reboot'\n-- or 'instance-reboot'. System reboot commonly occurs if certain maintenance or\n-- upgrade operations require a reboot of the underlying host that supports an\n-- instance. Instance reboot commonly occurs if the instance must be rebooted,\n-- rather than the underlying host. Rebooting events include a scheduled start\n-- and end time.\n--\n-- System Maintenance: When Amazon EC2 determines that an instance requires\n-- maintenance that requires power or network impact, the instance status is the\n-- event code 'system-maintenance'. System maintenance is either power maintenance\n-- or network maintenance. For power maintenance, your instance will be\n-- unavailable for a brief period of time and then rebooted. For network\n-- maintenance, your instance will experience a brief loss of network\n-- connectivity. System maintenance events include a scheduled start and end\n-- time. You will also be notified by email if one of your instances is set for\n-- system maintenance. The email message indicates when your instance is\n-- scheduled for maintenance.\n--\n-- Scheduled Retirement: When Amazon EC2 determines that an instance must be\n-- shut down, the instance status is the event code 'instance-retirement'.\n-- Retirement commonly occurs when the underlying host is degraded and must be\n-- replaced. Retirement events include a scheduled start and end time. You will\n-- also be notified by email if one of your instances is set to retiring. The\n-- email message indicates when your instance will be permanently retired.\n--\n-- Scheduled Stop: When Amazon EC2 determines that an instance must be shut\n-- down, the instances status returns an event code called 'instance-stop'. Stop\n-- events include a scheduled start and end time. You will also be notified by\n-- email if one of your instances is set to stop. The email message indicates\n-- when your instance will be stopped.\n--\n-- When your instance is retired, it will either be terminated (if its root\n-- device type is the instance-store) or stopped (if its root device type is an\n-- EBS volume). Instances stopped due to retirement will not be restarted, but\n-- you can do so manually. You can also avoid retirement of EBS-backed instances\n-- by manually restarting your instance when its event code is 'instance-retirement'. This ensures that your instance is started on a different underlying host.\n--\n-- For more information about failed status checks, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html TroubleshootingInstances with Failed Status Checks\u003e in the /Amazon Elastic Compute Cloud UserGuide/. For more information about working with scheduled events, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html#schedevents_actions Workingwith an Instance That Has a Scheduled Event\u003e in the /Amazon Elastic ComputeCloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "describeInstanceStatus",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "DescribeInstanceStatus",
                "query": [
                    {
                        "field": "_disDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_disInstanceIds",
                        "locationName": "InstanceId",
                        "type": "field"
                    },
                    {
                        "field": "_disFilters",
                        "locationName": "Filter",
                        "type": "field"
                    },
                    {
                        "field": "_disNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    },
                    {
                        "field": "_disMaxResults",
                        "locationName": "MaxResults",
                        "type": "field"
                    },
                    {
                        "field": "_disIncludeAllInstances",
                        "locationName": "includeAllInstances",
                        "type": "field"
                    }
                ],
                "locationPad": 20,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "disDryRun",
                        "name": "_disDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "disInstanceIds",
                        "name": "_disInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.\n--\n-- Default: Describes all your instances.\n--\n-- Constraints: Maximum 100 explicitly specified instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "disFilters",
                        "name": "_disFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availability-zone' - The Availability Zone of the instance.\n--\n-- 'event.code' - The code identifying the type of event ('instance-reboot' | 'system-reboot' | 'system-maintenance' | 'instance-retirement' | 'instance-stop').\n--\n-- 'event.description' - A description of the event.\n--\n-- 'event.not-after' - The latest end time for the scheduled event, for\n-- example: '2010-09-15T17:15:20.000Z'.\n--\n-- 'event.not-before' - The earliest start time for the scheduled event, for\n-- example: '2010-09-15T17:15:20.000Z'.\n--\n-- 'instance-state-code' - A code representing the state of the instance, as a\n-- 16-bit unsigned integer. The high byte is an opaque internal value and should\n-- be ignored. The low byte is set based on the state represented. The valid\n-- values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64\n-- (stopping), and 80 (stopped).\n--\n-- 'instance-state-name' - The state of the instance ('pending' | 'running' | 'shutting-down' | 'terminated' | 'stopping' | 'stopped').\n--\n-- 'instance-status.reachability' - Filters on instance status where the name\n-- is 'reachability' ('passed' | 'failed' | 'initializing' | 'insufficient-data').\n--\n-- 'instance-status.status' - The status of the instance ('ok' | 'impaired' | 'initializing' | 'insufficient-data' | 'not-applicable').\n--\n-- 'system-status.reachability' - Filters on system status where the name is 'reachability' ('passed' | 'failed' | 'initializing' | 'insufficient-data').\n--\n-- 'system-status.status' - The system status of the instance ('ok' | 'impaired' | 'initializing' | 'insufficient-data' | 'not-applicable').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "disNextToken",
                        "name": "_disNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | The next paginated set of results to return. (You received this token from a\n-- prior call.)",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "disMaxResults",
                        "name": "_disMaxResults",
                        "shape": "Integer",
                        "locationName": "MaxResults",
                        "documentation": "-- | The maximum number of paginated instance items per response. The call also\n-- returns a token that you can specify in a subsequent call to get the next set\n-- of results. If the value is greater than 1000, we return only 1000 items.\n--\n-- Default: 1000",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "disIncludeAllInstances",
                        "name": "_disIncludeAllInstances",
                        "shape": "Boolean",
                        "locationName": "includeAllInstances",
                        "documentation": "-- | When 'true', includes the health status for all instances. When 'false', includes\n-- the health status for running instances only.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "disDryRun",
                        "name": "_disDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "disFilters",
                        "name": "_disFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availability-zone' - The Availability Zone of the instance.\n--\n-- 'event.code' - The code identifying the type of event ('instance-reboot' | 'system-reboot' | 'system-maintenance' | 'instance-retirement' | 'instance-stop').\n--\n-- 'event.description' - A description of the event.\n--\n-- 'event.not-after' - The latest end time for the scheduled event, for\n-- example: '2010-09-15T17:15:20.000Z'.\n--\n-- 'event.not-before' - The earliest start time for the scheduled event, for\n-- example: '2010-09-15T17:15:20.000Z'.\n--\n-- 'instance-state-code' - A code representing the state of the instance, as a\n-- 16-bit unsigned integer. The high byte is an opaque internal value and should\n-- be ignored. The low byte is set based on the state represented. The valid\n-- values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64\n-- (stopping), and 80 (stopped).\n--\n-- 'instance-state-name' - The state of the instance ('pending' | 'running' | 'shutting-down' | 'terminated' | 'stopping' | 'stopped').\n--\n-- 'instance-status.reachability' - Filters on instance status where the name\n-- is 'reachability' ('passed' | 'failed' | 'initializing' | 'insufficient-data').\n--\n-- 'instance-status.status' - The status of the instance ('ok' | 'impaired' | 'initializing' | 'insufficient-data' | 'not-applicable').\n--\n-- 'system-status.reachability' - Filters on system status where the name is 'reachability' ('passed' | 'failed' | 'initializing' | 'insufficient-data').\n--\n-- 'system-status.status' - The system status of the instance ('ok' | 'impaired' | 'initializing' | 'insufficient-data' | 'not-applicable').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "disIncludeAllInstances",
                        "name": "_disIncludeAllInstances",
                        "shape": "Boolean",
                        "locationName": "includeAllInstances",
                        "documentation": "-- | When 'true', includes the health status for all instances. When 'false', includes\n-- the health status for running instances only.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "disInstanceIds",
                        "name": "_disInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.\n--\n-- Default: Describes all your instances.\n--\n-- Constraints: Maximum 100 explicitly specified instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "disMaxResults",
                        "name": "_disMaxResults",
                        "shape": "Integer",
                        "locationName": "MaxResults",
                        "documentation": "-- | The maximum number of paginated instance items per response. The call also\n-- returns a token that you can specify in a subsequent call to get the next set\n-- of results. If the value is greater than 1000, we return only 1000 items.\n--\n-- Default: 1000",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "disNextToken",
                        "name": "_disNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | The next paginated set of results to return. (You received this token from a\n-- prior call.)",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "describeInstancesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeInstancesResponse",
                "resultWrapper": null,
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dirReservations",
                        "name": "_dirReservations",
                        "shape": "ReservationList",
                        "locationName": "reservationSet",
                        "documentation": "-- | One or more reservations.",
                        "typeExposed": "[Reservation]",
                        "type": "List \"item\" Reservation"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dirNextToken",
                        "name": "_dirNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token to use when requesting the next set of items. If there are no\n-- additional items to return, the string is empty.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dirNextToken",
                        "name": "_dirNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token to use when requesting the next set of items. If there are no\n-- additional items to return, the string is empty.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dirReservations",
                        "name": "_dirReservations",
                        "shape": "ReservationList",
                        "locationName": "reservationSet",
                        "documentation": "-- | One or more reservations.",
                        "typeExposed": "[Reservation]",
                        "type": "List \"item\" Reservation"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeInstances.html",
            "namespace": "Network.AWS.EC2.DescribeInstances",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": {
                "token": {
                    "input": "di1NextToken",
                    "outputRequired": false,
                    "output": "dirNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dirReservations"
            },
            "name": "DescribeInstances",
            "method": "post",
            "documentation": "-- | Describes one or more of your instances.\n--\n-- If you specify one or more instance IDs, Amazon EC2 returns information for\n-- those instances. If you do not specify instance IDs, Amazon EC2 returns\n-- information for all relevant instances. If you specify an instance ID that is\n-- not valid, an error is returned. If you specify an instance that you do not\n-- own, it is not included in the returned results.\n--\n-- Recently terminated instances might appear in the returned results. This\n-- interval is usually less than one hour.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "describeInstances",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DescribeInstances",
                "query": [
                    {
                        "field": "_di1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_di1InstanceIds",
                        "locationName": "InstanceId",
                        "type": "field"
                    },
                    {
                        "field": "_di1Filters",
                        "locationName": "Filter",
                        "type": "field"
                    },
                    {
                        "field": "_di1NextToken",
                        "locationName": "nextToken",
                        "type": "field"
                    },
                    {
                        "field": "_di1MaxResults",
                        "locationName": "maxResults",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "di1DryRun",
                        "name": "_di1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di1InstanceIds",
                        "name": "_di1InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.\n--\n-- Default: Describes all your instances.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di1Filters",
                        "name": "_di1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'architecture' - The instance architecture ('i386' | 'x86_64').\n--\n-- 'availability-zone' - The Availability Zone of the instance.\n--\n-- 'block-device-mapping.attach-time' - The attach time for an Amazon EBS\n-- volume mapped to the instance, for example, '2010-09-15T17:15:20.000Z'.\n--\n-- 'block-device-mapping.delete-on-termination' - A Boolean that indicates\n-- whether the Amazon EBS volume is deleted on instance termination.\n--\n-- 'block-device-mapping.device-name' - The device name for the Amazon EBS\n-- volume (for example, '/dev/sdh').\n--\n-- 'block-device-mapping.status' - The status for the Amazon EBS volume ('attaching' | 'attached' | 'detaching' | 'detached').\n--\n-- 'block-device-mapping.volume-id' - The volume ID of the Amazon EBS volume.\n--\n-- 'client-token' - The idempotency token you provided when you launched the\n-- instance.\n--\n-- 'dns-name' - The public DNS name of the instance.\n--\n-- 'group-id' - The ID of the security group for the instance. If the instance\n-- is in EC2-Classic or a default VPC, you can use 'group-name' instead.\n--\n-- 'group-name' - The name of the security group for the instance. If the\n-- instance is in a nondefault VPC, you must use 'group-id' instead.\n--\n-- 'hypervisor' - The hypervisor type of the instance ('ovm' | 'xen').\n--\n-- 'iam-instance-profile.arn' - The instance profile associated with the\n-- instance. Specified as an ARN.\n--\n-- 'image-id' - The ID of the image used to launch the instance.\n--\n-- 'instance-id' - The ID of the instance.\n--\n-- 'instance-lifecycle' - Indicates whether this is a Spot Instance ('spot').\n--\n-- 'instance-state-code' - The state of the instance, as a 16-bit unsigned\n-- integer. The high byte is an opaque internal value and should be ignored. The\n-- low byte is set based on the state represented. The valid values are: 0\n-- (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping),\n-- and 80 (stopped).\n--\n-- 'instance-state-name' - The state of the instance ('pending' | 'running' | 'shutting-down' | 'terminated' | 'stopping' | 'stopped').\n--\n-- 'instance-type' - The type of instance (for example, 'm1.small').\n--\n-- 'instance.group-id' - The ID of the security group for the instance. If the\n-- instance is in EC2-Classic or a default VPC, you can use 'instance.group-name'\n-- instead.\n--\n-- 'instance.group-name' - The name of the security group for the instance. If\n-- the instance is in a nondefault VPC, you must use 'instance.group-id' instead.\n--\n-- 'ip-address' - The public IP address of the instance.\n--\n-- 'kernel-id' - The kernel ID.\n--\n-- 'key-name' - The name of the key pair used when the instance was launched.\n--\n-- 'launch-index' - When launching multiple instances, this is the index for\n-- the instance in the launch group (for example, 0, 1, 2, and so on).\n--\n-- 'launch-time' - The time when the instance was launched.\n--\n-- 'monitoring-state' - Indicates whether monitoring is enabled for the\n-- instance ('disabled' | 'enabled').\n--\n-- 'owner-id' - The AWS account ID of the instance owner.\n--\n-- 'placement-group-name' - The name of the placement group for the instance.\n--\n-- 'platform' - The platform. Use 'windows' if you have Windows instances;\n-- otherwise, leave blank.\n--\n-- 'private-dns-name' - The private DNS name of the instance.\n--\n-- 'private-ip-address' - The private IP address of the instance.\n--\n-- 'product-code' - The product code associated with the AMI used to launch the\n-- instance.\n--\n-- 'product-code.type' - The type of product code ('devpay' | 'marketplace').\n--\n-- 'ramdisk-id' - The RAM disk ID.\n--\n-- 'reason' - The reason for the current state of the instance (for example,\n-- shows \"User Initiated [date]\" when you stop or terminate the instance).\n-- Similar to the state-reason-code filter.\n--\n-- 'requester-id' - The ID of the entity that launched the instance on your\n-- behalf (for example, AWS Management Console, Auto Scaling, and so on).\n--\n-- 'reservation-id' - The ID of the instance's reservation. A reservation ID is\n-- created any time you launch an instance. A reservation ID has a one-to-one\n-- relationship with an instance launch request, but can be associated with more\n-- than one instance if you launch multiple instances using the same launch\n-- request. For example, if you launch one instance, you'll get one reservation\n-- ID. If you launch ten instances using the same launch request, you'll also\n-- get one reservation ID.\n--\n-- 'root-device-name' - The name of the root device for the instance (for\n-- example, '/dev/sda1').\n--\n-- 'root-device-type' - The type of root device that the instance uses ('ebs' | 'instance-store').\n--\n-- 'source-dest-check' - Indicates whether the instance performs\n-- source/destination checking. A value of 'true' means that checking is enabled,\n-- and 'false' means checking is disabled. The value must be 'false' for the\n-- instance to perform network address translation (NAT) in your VPC.\n--\n-- 'spot-instance-request-id' - The ID of the Spot Instance request.\n--\n-- 'state-reason-code' - The reason code for the state change.\n--\n-- 'state-reason-message' - A message that describes the state change.\n--\n-- 'subnet-id' - The ID of the subnet for the instance.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource, where 'tag':/key/ is the tag's key.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'tenancy' - The tenancy of an instance ('dedicated' | 'default').\n--\n-- 'virtualization-type' - The virtualization type of the instance ('paravirtual'\n-- | 'hvm').\n--\n-- 'vpc-id' - The ID of the VPC that the instance is running in.\n--\n-- 'network-interface.description' - The description of the network interface.\n--\n-- 'network-interface.subnet-id' - The ID of the subnet for the network\n-- interface.\n--\n-- 'network-interface.vpc-id' - The ID of the VPC for the network interface.\n--\n-- 'network-interface.network-interface.id' - The ID of the network interface.\n--\n-- 'network-interface.owner-id' - The ID of the owner of the network interface.\n--\n-- 'network-interface.availability-zone' - The Availability Zone for the\n-- network interface.\n--\n-- 'network-interface.requester-id' - The requester ID for the network\n-- interface.\n--\n-- 'network-interface.requester-managed' - Indicates whether the network\n-- interface is being managed by AWS.\n--\n-- 'network-interface.status' - The status of the network interface ('available')\n-- | 'in-use').\n--\n-- 'network-interface.mac-address' - The MAC address of the network interface.\n--\n-- 'network-interface-private-dns-name' - The private DNS name of the network\n-- interface.\n--\n-- 'network-interface.source-destination-check' - Whether the network interface\n-- performs source/destination checking. A value of 'true' means checking is\n-- enabled, and 'false' means checking is disabled. The value must be 'false' for\n-- the network interface to perform network address translation (NAT) in your\n-- VPC.\n--\n-- 'network-interface.group-id' - The ID of a security group associated with\n-- the network interface.\n--\n-- 'network-interface.group-name' - The name of a security group associated\n-- with the network interface.\n--\n-- 'network-interface.attachment.attachment-id' - The ID of the interface\n-- attachment.\n--\n-- 'network-interface.attachment.instance-id' - The ID of the instance to which\n-- the network interface is attached.\n--\n-- 'network-interface.attachment.instance-owner-id' - The owner ID of the\n-- instance to which the network interface is attached.\n--\n-- 'network-interface.addresses.private-ip-address' - The private IP address\n-- associated with the network interface.\n--\n-- 'network-interface.attachment.device-index' - The device index to which the\n-- network interface is attached.\n--\n-- 'network-interface.attachment.status' - The status of the attachment ('attaching' | 'attached' | 'detaching' | 'detached').\n--\n-- 'network-interface.attachment.attach-time' - The time that the network\n-- interface was attached to an instance.\n--\n-- 'network-interface.attachment.delete-on-termination' - Specifies whether the\n-- attachment is deleted when an instance is terminated.\n--\n-- 'network-interface.addresses.primary' - Specifies whether the IP address of\n-- the network interface is the primary private IP address.\n--\n-- 'network-interface.addresses.association.public-ip' - The ID of the\n-- association of an Elastic IP address with a network interface.\n--\n-- 'network-interface.addresses.association.ip-owner-id' - The owner ID of the\n-- private IP address associated with the network interface.\n--\n-- 'association.public-ip' - The address of the Elastic IP address bound to the\n-- network interface.\n--\n-- 'association.ip-owner-id' - The owner of the Elastic IP address associated\n-- with the network interface.\n--\n-- 'association.allocation-id' - The allocation ID returned when you allocated\n-- the Elastic IP address for your network interface.\n--\n-- 'association.association-id' - The association ID returned when the network\n-- interface was associated with an IP address.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "di1NextToken",
                        "name": "_di1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token for the next set of items to return. (You received this token from\n-- a prior call.)",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "di1MaxResults",
                        "name": "_di1MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "-- | The maximum number of items to return for this call. The call also returns a\n-- token that you can specify in a subsequent call to get the next set of\n-- results. If the value is greater than 1000, we return only 1000 items.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "di1DryRun",
                        "name": "_di1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di1Filters",
                        "name": "_di1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'architecture' - The instance architecture ('i386' | 'x86_64').\n--\n-- 'availability-zone' - The Availability Zone of the instance.\n--\n-- 'block-device-mapping.attach-time' - The attach time for an Amazon EBS\n-- volume mapped to the instance, for example, '2010-09-15T17:15:20.000Z'.\n--\n-- 'block-device-mapping.delete-on-termination' - A Boolean that indicates\n-- whether the Amazon EBS volume is deleted on instance termination.\n--\n-- 'block-device-mapping.device-name' - The device name for the Amazon EBS\n-- volume (for example, '/dev/sdh').\n--\n-- 'block-device-mapping.status' - The status for the Amazon EBS volume ('attaching' | 'attached' | 'detaching' | 'detached').\n--\n-- 'block-device-mapping.volume-id' - The volume ID of the Amazon EBS volume.\n--\n-- 'client-token' - The idempotency token you provided when you launched the\n-- instance.\n--\n-- 'dns-name' - The public DNS name of the instance.\n--\n-- 'group-id' - The ID of the security group for the instance. If the instance\n-- is in EC2-Classic or a default VPC, you can use 'group-name' instead.\n--\n-- 'group-name' - The name of the security group for the instance. If the\n-- instance is in a nondefault VPC, you must use 'group-id' instead.\n--\n-- 'hypervisor' - The hypervisor type of the instance ('ovm' | 'xen').\n--\n-- 'iam-instance-profile.arn' - The instance profile associated with the\n-- instance. Specified as an ARN.\n--\n-- 'image-id' - The ID of the image used to launch the instance.\n--\n-- 'instance-id' - The ID of the instance.\n--\n-- 'instance-lifecycle' - Indicates whether this is a Spot Instance ('spot').\n--\n-- 'instance-state-code' - The state of the instance, as a 16-bit unsigned\n-- integer. The high byte is an opaque internal value and should be ignored. The\n-- low byte is set based on the state represented. The valid values are: 0\n-- (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping),\n-- and 80 (stopped).\n--\n-- 'instance-state-name' - The state of the instance ('pending' | 'running' | 'shutting-down' | 'terminated' | 'stopping' | 'stopped').\n--\n-- 'instance-type' - The type of instance (for example, 'm1.small').\n--\n-- 'instance.group-id' - The ID of the security group for the instance. If the\n-- instance is in EC2-Classic or a default VPC, you can use 'instance.group-name'\n-- instead.\n--\n-- 'instance.group-name' - The name of the security group for the instance. If\n-- the instance is in a nondefault VPC, you must use 'instance.group-id' instead.\n--\n-- 'ip-address' - The public IP address of the instance.\n--\n-- 'kernel-id' - The kernel ID.\n--\n-- 'key-name' - The name of the key pair used when the instance was launched.\n--\n-- 'launch-index' - When launching multiple instances, this is the index for\n-- the instance in the launch group (for example, 0, 1, 2, and so on).\n--\n-- 'launch-time' - The time when the instance was launched.\n--\n-- 'monitoring-state' - Indicates whether monitoring is enabled for the\n-- instance ('disabled' | 'enabled').\n--\n-- 'owner-id' - The AWS account ID of the instance owner.\n--\n-- 'placement-group-name' - The name of the placement group for the instance.\n--\n-- 'platform' - The platform. Use 'windows' if you have Windows instances;\n-- otherwise, leave blank.\n--\n-- 'private-dns-name' - The private DNS name of the instance.\n--\n-- 'private-ip-address' - The private IP address of the instance.\n--\n-- 'product-code' - The product code associated with the AMI used to launch the\n-- instance.\n--\n-- 'product-code.type' - The type of product code ('devpay' | 'marketplace').\n--\n-- 'ramdisk-id' - The RAM disk ID.\n--\n-- 'reason' - The reason for the current state of the instance (for example,\n-- shows \"User Initiated [date]\" when you stop or terminate the instance).\n-- Similar to the state-reason-code filter.\n--\n-- 'requester-id' - The ID of the entity that launched the instance on your\n-- behalf (for example, AWS Management Console, Auto Scaling, and so on).\n--\n-- 'reservation-id' - The ID of the instance's reservation. A reservation ID is\n-- created any time you launch an instance. A reservation ID has a one-to-one\n-- relationship with an instance launch request, but can be associated with more\n-- than one instance if you launch multiple instances using the same launch\n-- request. For example, if you launch one instance, you'll get one reservation\n-- ID. If you launch ten instances using the same launch request, you'll also\n-- get one reservation ID.\n--\n-- 'root-device-name' - The name of the root device for the instance (for\n-- example, '/dev/sda1').\n--\n-- 'root-device-type' - The type of root device that the instance uses ('ebs' | 'instance-store').\n--\n-- 'source-dest-check' - Indicates whether the instance performs\n-- source/destination checking. A value of 'true' means that checking is enabled,\n-- and 'false' means checking is disabled. The value must be 'false' for the\n-- instance to perform network address translation (NAT) in your VPC.\n--\n-- 'spot-instance-request-id' - The ID of the Spot Instance request.\n--\n-- 'state-reason-code' - The reason code for the state change.\n--\n-- 'state-reason-message' - A message that describes the state change.\n--\n-- 'subnet-id' - The ID of the subnet for the instance.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource, where 'tag':/key/ is the tag's key.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'tenancy' - The tenancy of an instance ('dedicated' | 'default').\n--\n-- 'virtualization-type' - The virtualization type of the instance ('paravirtual'\n-- | 'hvm').\n--\n-- 'vpc-id' - The ID of the VPC that the instance is running in.\n--\n-- 'network-interface.description' - The description of the network interface.\n--\n-- 'network-interface.subnet-id' - The ID of the subnet for the network\n-- interface.\n--\n-- 'network-interface.vpc-id' - The ID of the VPC for the network interface.\n--\n-- 'network-interface.network-interface.id' - The ID of the network interface.\n--\n-- 'network-interface.owner-id' - The ID of the owner of the network interface.\n--\n-- 'network-interface.availability-zone' - The Availability Zone for the\n-- network interface.\n--\n-- 'network-interface.requester-id' - The requester ID for the network\n-- interface.\n--\n-- 'network-interface.requester-managed' - Indicates whether the network\n-- interface is being managed by AWS.\n--\n-- 'network-interface.status' - The status of the network interface ('available')\n-- | 'in-use').\n--\n-- 'network-interface.mac-address' - The MAC address of the network interface.\n--\n-- 'network-interface-private-dns-name' - The private DNS name of the network\n-- interface.\n--\n-- 'network-interface.source-destination-check' - Whether the network interface\n-- performs source/destination checking. A value of 'true' means checking is\n-- enabled, and 'false' means checking is disabled. The value must be 'false' for\n-- the network interface to perform network address translation (NAT) in your\n-- VPC.\n--\n-- 'network-interface.group-id' - The ID of a security group associated with\n-- the network interface.\n--\n-- 'network-interface.group-name' - The name of a security group associated\n-- with the network interface.\n--\n-- 'network-interface.attachment.attachment-id' - The ID of the interface\n-- attachment.\n--\n-- 'network-interface.attachment.instance-id' - The ID of the instance to which\n-- the network interface is attached.\n--\n-- 'network-interface.attachment.instance-owner-id' - The owner ID of the\n-- instance to which the network interface is attached.\n--\n-- 'network-interface.addresses.private-ip-address' - The private IP address\n-- associated with the network interface.\n--\n-- 'network-interface.attachment.device-index' - The device index to which the\n-- network interface is attached.\n--\n-- 'network-interface.attachment.status' - The status of the attachment ('attaching' | 'attached' | 'detaching' | 'detached').\n--\n-- 'network-interface.attachment.attach-time' - The time that the network\n-- interface was attached to an instance.\n--\n-- 'network-interface.attachment.delete-on-termination' - Specifies whether the\n-- attachment is deleted when an instance is terminated.\n--\n-- 'network-interface.addresses.primary' - Specifies whether the IP address of\n-- the network interface is the primary private IP address.\n--\n-- 'network-interface.addresses.association.public-ip' - The ID of the\n-- association of an Elastic IP address with a network interface.\n--\n-- 'network-interface.addresses.association.ip-owner-id' - The owner ID of the\n-- private IP address associated with the network interface.\n--\n-- 'association.public-ip' - The address of the Elastic IP address bound to the\n-- network interface.\n--\n-- 'association.ip-owner-id' - The owner of the Elastic IP address associated\n-- with the network interface.\n--\n-- 'association.allocation-id' - The allocation ID returned when you allocated\n-- the Elastic IP address for your network interface.\n--\n-- 'association.association-id' - The association ID returned when the network\n-- interface was associated with an IP address.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "di1InstanceIds",
                        "name": "_di1InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.\n--\n-- Default: Describes all your instances.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "di1MaxResults",
                        "name": "_di1MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "-- | The maximum number of items to return for this call. The call also returns a\n-- token that you can specify in a subsequent call to get the next set of\n-- results. If the value is greater than 1000, we return only 1000 items.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "di1NextToken",
                        "name": "_di1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token for the next set of items to return. (You received this token from\n-- a prior call.)",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeInternetGatewaysResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "digrInternetGateways",
                    "name": "_digrInternetGateways",
                    "shape": "InternetGatewayList",
                    "locationName": "internetGatewaySet",
                    "documentation": "-- | Information about one or more Internet gateways.",
                    "typeExposed": "[InternetGateway]",
                    "type": "List \"item\" InternetGateway"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeInternetGatewaysResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "digrInternetGateways",
                        "name": "_digrInternetGateways",
                        "shape": "InternetGatewayList",
                        "locationName": "internetGatewaySet",
                        "documentation": "-- | Information about one or more Internet gateways.",
                        "typeExposed": "[InternetGateway]",
                        "type": "List \"item\" InternetGateway"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "digrInternetGateways",
                        "name": "_digrInternetGateways",
                        "shape": "InternetGatewayList",
                        "locationName": "internetGatewaySet",
                        "documentation": "-- | Information about one or more Internet gateways.",
                        "typeExposed": "[InternetGateway]",
                        "type": "List \"item\" InternetGateway"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeInternetGateways.html",
            "namespace": "Network.AWS.EC2.DescribeInternetGateways",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeInternetGateways",
            "method": "post",
            "documentation": "-- | Describes one or more of your Internet gateways.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "describeInternetGateways",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "DescribeInternetGateways",
                "query": [
                    {
                        "field": "_dig1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dig1InternetGatewayIds",
                        "locationName": "internetGatewayId",
                        "type": "field"
                    },
                    {
                        "field": "_dig1Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dig1DryRun",
                        "name": "_dig1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dig1InternetGatewayIds",
                        "name": "_dig1InternetGatewayIds",
                        "shape": "ValueStringList",
                        "locationName": "internetGatewayId",
                        "documentation": "-- | One or more Internet gateway IDs.\n--\n-- Default: Describes all your Internet gateways.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dig1Filters",
                        "name": "_dig1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'attachment.state' - The current state of the attachment between the gateway\n-- and the VPC ('available'). Present only if a VPC is attached.\n--\n-- 'attachment.vpc-id' - The ID of an attached VPC.\n--\n-- 'internet-gateway-id' - The ID of the Internet gateway.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dig1DryRun",
                        "name": "_dig1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dig1Filters",
                        "name": "_dig1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'attachment.state' - The current state of the attachment between the gateway\n-- and the VPC ('available'). Present only if a VPC is attached.\n--\n-- 'attachment.vpc-id' - The ID of an attached VPC.\n--\n-- 'internet-gateway-id' - The ID of the Internet gateway.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dig1InternetGatewayIds",
                        "name": "_dig1InternetGatewayIds",
                        "shape": "ValueStringList",
                        "locationName": "internetGatewayId",
                        "documentation": "-- | One or more Internet gateway IDs.\n--\n-- Default: Describes all your Internet gateways.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeKeyPairsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dkprKeyPairs",
                    "name": "_dkprKeyPairs",
                    "shape": "KeyPairList",
                    "locationName": "keySet",
                    "documentation": "-- | Information about one or more key pairs.",
                    "typeExposed": "[KeyPairInfo]",
                    "type": "List \"item\" KeyPairInfo"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeKeyPairsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dkprKeyPairs",
                        "name": "_dkprKeyPairs",
                        "shape": "KeyPairList",
                        "locationName": "keySet",
                        "documentation": "-- | Information about one or more key pairs.",
                        "typeExposed": "[KeyPairInfo]",
                        "type": "List \"item\" KeyPairInfo"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dkprKeyPairs",
                        "name": "_dkprKeyPairs",
                        "shape": "KeyPairList",
                        "locationName": "keySet",
                        "documentation": "-- | Information about one or more key pairs.",
                        "typeExposed": "[KeyPairInfo]",
                        "type": "List \"item\" KeyPairInfo"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeKeyPairs.html",
            "namespace": "Network.AWS.EC2.DescribeKeyPairs",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeKeyPairs",
            "method": "post",
            "documentation": "-- | Describes one or more of your key pairs.\n--\n-- For more information about key pairs, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html Key Pairs\u003e in the /Amazon ElasticCompute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "describeKeyPairs",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 8,
                "name": "DescribeKeyPairs",
                "query": [
                    {
                        "field": "_dkp1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dkp1KeyNames",
                        "locationName": "KeyName",
                        "type": "field"
                    },
                    {
                        "field": "_dkp1Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 8,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dkp1DryRun",
                        "name": "_dkp1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dkp1KeyNames",
                        "name": "_dkp1KeyNames",
                        "shape": "KeyNameStringList",
                        "locationName": "KeyName",
                        "documentation": "-- | One or more key pair names.\n--\n-- Default: Describes all your key pairs.",
                        "typeExposed": "[Text]",
                        "type": "List \"KeyName\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dkp1Filters",
                        "name": "_dkp1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'fingerprint' - The fingerprint of the key pair.\n--\n-- 'key-name' - The name of the key pair.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dkp1DryRun",
                        "name": "_dkp1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dkp1Filters",
                        "name": "_dkp1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'fingerprint' - The fingerprint of the key pair.\n--\n-- 'key-name' - The name of the key pair.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dkp1KeyNames",
                        "name": "_dkp1KeyNames",
                        "shape": "KeyNameStringList",
                        "locationName": "KeyName",
                        "documentation": "-- | One or more key pair names.\n--\n-- Default: Describes all your key pairs.",
                        "typeExposed": "[Text]",
                        "type": "List \"KeyName\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeNetworkAclsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dnarNetworkAcls",
                    "name": "_dnarNetworkAcls",
                    "shape": "NetworkAclList",
                    "locationName": "networkAclSet",
                    "documentation": "-- | Information about one or more network ACLs.",
                    "typeExposed": "[NetworkAcl]",
                    "type": "List \"item\" NetworkAcl"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeNetworkAclsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dnarNetworkAcls",
                        "name": "_dnarNetworkAcls",
                        "shape": "NetworkAclList",
                        "locationName": "networkAclSet",
                        "documentation": "-- | Information about one or more network ACLs.",
                        "typeExposed": "[NetworkAcl]",
                        "type": "List \"item\" NetworkAcl"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dnarNetworkAcls",
                        "name": "_dnarNetworkAcls",
                        "shape": "NetworkAclList",
                        "locationName": "networkAclSet",
                        "documentation": "-- | Information about one or more network ACLs.",
                        "typeExposed": "[NetworkAcl]",
                        "type": "List \"item\" NetworkAcl"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeNetworkAcls.html",
            "namespace": "Network.AWS.EC2.DescribeNetworkAcls",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeNetworkAcls",
            "method": "post",
            "documentation": "-- | Describes one or more of your network ACLs.\n--\n-- For more information about network ACLs, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html Network ACLs\u003e in the /AmazonVirtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "describeNetworkAcls",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DescribeNetworkAcls",
                "query": [
                    {
                        "field": "_dna1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dna1NetworkAclIds",
                        "locationName": "NetworkAclId",
                        "type": "field"
                    },
                    {
                        "field": "_dna1Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dna1DryRun",
                        "name": "_dna1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dna1NetworkAclIds",
                        "name": "_dna1NetworkAclIds",
                        "shape": "ValueStringList",
                        "locationName": "NetworkAclId",
                        "documentation": "-- | One or more network ACL IDs.\n--\n-- Default: Describes all your network ACLs.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dna1Filters",
                        "name": "_dna1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'association.association-id' - The ID of an association ID for the ACL.\n--\n-- 'association.network-acl-id' - The ID of the network ACL involved in the\n-- association.\n--\n-- 'association.subnet-id' - The ID of the subnet involved in the association.\n--\n-- 'default' - Indicates whether the ACL is the default network ACL for the VPC.\n--\n-- 'entry.cidr' - The CIDR range specified in the entry.\n--\n-- 'entry.egress' - Indicates whether the entry applies to egress traffic.\n--\n-- 'entry.icmp.code' - The ICMP code specified in the entry, if any.\n--\n-- 'entry.icmp.type' - The ICMP type specified in the entry, if any.\n--\n-- 'entry.port-range.from' - The start of the port range specified in the\n-- entry.\n--\n-- 'entry.port-range.to' - The end of the port range specified in the entry.\n--\n-- 'entry.protocol' - The protocol specified in the entry ('tcp' | 'udp' | 'icmp' or\n-- a protocol number).\n--\n-- 'entry.rule-action' - Allows or denies the matching traffic ('allow' | 'deny').\n--\n-- 'entry.rule-number' - The number of an entry (in other words, rule) in the\n-- ACL's set of entries.\n--\n-- 'network-acl-id' - The ID of the network ACL.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-id' - The ID of the VPC for the network ACL.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dna1DryRun",
                        "name": "_dna1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dna1Filters",
                        "name": "_dna1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'association.association-id' - The ID of an association ID for the ACL.\n--\n-- 'association.network-acl-id' - The ID of the network ACL involved in the\n-- association.\n--\n-- 'association.subnet-id' - The ID of the subnet involved in the association.\n--\n-- 'default' - Indicates whether the ACL is the default network ACL for the VPC.\n--\n-- 'entry.cidr' - The CIDR range specified in the entry.\n--\n-- 'entry.egress' - Indicates whether the entry applies to egress traffic.\n--\n-- 'entry.icmp.code' - The ICMP code specified in the entry, if any.\n--\n-- 'entry.icmp.type' - The ICMP type specified in the entry, if any.\n--\n-- 'entry.port-range.from' - The start of the port range specified in the\n-- entry.\n--\n-- 'entry.port-range.to' - The end of the port range specified in the entry.\n--\n-- 'entry.protocol' - The protocol specified in the entry ('tcp' | 'udp' | 'icmp' or\n-- a protocol number).\n--\n-- 'entry.rule-action' - Allows or denies the matching traffic ('allow' | 'deny').\n--\n-- 'entry.rule-number' - The number of an entry (in other words, rule) in the\n-- ACL's set of entries.\n--\n-- 'network-acl-id' - The ID of the network ACL.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-id' - The ID of the VPC for the network ACL.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dna1NetworkAclIds",
                        "name": "_dna1NetworkAclIds",
                        "shape": "ValueStringList",
                        "locationName": "NetworkAclId",
                        "documentation": "-- | One or more network ACL IDs.\n--\n-- Default: Describes all your network ACLs.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 24,
                "ctor": "describeNetworkInterfaceAttributeResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeNetworkInterfaceAttributeResponse",
                "resultWrapper": null,
                "locationPad": 19,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniarNetworkInterfaceId",
                        "name": "_dniarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniarDescription",
                        "name": "_dniarDescription",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "-- | The description of the network interface.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniarSourceDestCheck",
                        "name": "_dniarSourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Indicates whether source/destination checking is enabled.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dniarGroups",
                        "name": "_dniarGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | The security groups associated with the network interface.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniarAttachment",
                        "name": "_dniarAttachment",
                        "shape": "NetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "-- | The attachment (if any) of the network interface.",
                        "typeExposed": "Maybe NetworkInterfaceAttachment",
                        "type": "Maybe NetworkInterfaceAttachment"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniarAttachment",
                        "name": "_dniarAttachment",
                        "shape": "NetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "-- | The attachment (if any) of the network interface.",
                        "typeExposed": "Maybe NetworkInterfaceAttachment",
                        "type": "Maybe NetworkInterfaceAttachment"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniarDescription",
                        "name": "_dniarDescription",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "-- | The description of the network interface.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dniarGroups",
                        "name": "_dniarGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | The security groups associated with the network interface.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniarNetworkInterfaceId",
                        "name": "_dniarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniarSourceDestCheck",
                        "name": "_dniarSourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Indicates whether source/destination checking is enabled.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeNetworkInterfaceAttribute.html",
            "namespace": "Network.AWS.EC2.DescribeNetworkInterfaceAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeNetworkInterfaceAttribute",
            "method": "post",
            "documentation": "-- | Describes a network interface attribute. You can specify only one attribute\n-- at a time.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "describeNetworkInterfaceAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dniaNetworkInterfaceId",
                        "name": "_dniaNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "DescribeNetworkInterfaceAttribute",
                "query": [
                    {
                        "field": "_dniaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dniaNetworkInterfaceId",
                        "locationName": "networkInterfaceId",
                        "type": "field"
                    },
                    {
                        "field": "_dniaAttribute",
                        "locationName": "attribute",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniaDryRun",
                        "name": "_dniaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniaAttribute",
                        "name": "_dniaAttribute",
                        "shape": "NetworkInterfaceAttribute",
                        "locationName": "attribute",
                        "documentation": "-- | The attribute of the network interface.",
                        "typeExposed": "Maybe NetworkInterfaceAttribute",
                        "type": "Maybe NetworkInterfaceAttribute"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniaAttribute",
                        "name": "_dniaAttribute",
                        "shape": "NetworkInterfaceAttribute",
                        "locationName": "attribute",
                        "documentation": "-- | The attribute of the network interface.",
                        "typeExposed": "Maybe NetworkInterfaceAttribute",
                        "type": "Maybe NetworkInterfaceAttribute"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniaDryRun",
                        "name": "_dniaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dniaNetworkInterfaceId",
                        "name": "_dniaNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeNetworkInterfacesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dnirNetworkInterfaces",
                    "name": "_dnirNetworkInterfaces",
                    "shape": "NetworkInterfaceList",
                    "locationName": "networkInterfaceSet",
                    "documentation": "-- | Information about one or more network interfaces.",
                    "typeExposed": "[NetworkInterface]",
                    "type": "List \"item\" NetworkInterface"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeNetworkInterfacesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dnirNetworkInterfaces",
                        "name": "_dnirNetworkInterfaces",
                        "shape": "NetworkInterfaceList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "-- | Information about one or more network interfaces.",
                        "typeExposed": "[NetworkInterface]",
                        "type": "List \"item\" NetworkInterface"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dnirNetworkInterfaces",
                        "name": "_dnirNetworkInterfaces",
                        "shape": "NetworkInterfaceList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "-- | Information about one or more network interfaces.",
                        "typeExposed": "[NetworkInterface]",
                        "type": "List \"item\" NetworkInterface"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeNetworkInterfaces.html",
            "namespace": "Network.AWS.EC2.DescribeNetworkInterfaces",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeNetworkInterfaces",
            "method": "post",
            "documentation": "-- | Describes one or more of your network interfaces.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 24,
                "ctor": "describeNetworkInterfaces",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "DescribeNetworkInterfaces",
                "query": [
                    {
                        "field": "_dni1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dni1NetworkInterfaceIds",
                        "locationName": "NetworkInterfaceId",
                        "type": "field"
                    },
                    {
                        "field": "_dni1Filters",
                        "locationName": "filter",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dni1DryRun",
                        "name": "_dni1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dni1NetworkInterfaceIds",
                        "name": "_dni1NetworkInterfaceIds",
                        "shape": "NetworkInterfaceIdList",
                        "locationName": "NetworkInterfaceId",
                        "documentation": "-- | One or more network interface IDs.\n--\n-- Default: Describes all your network interfaces.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dni1Filters",
                        "name": "_dni1Filters",
                        "shape": "FilterList",
                        "locationName": "filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'addresses.private-ip-address' - The private IP addresses associated with\n-- the network interface.\n--\n-- 'addresses.primary' - Whether the private IP address is the primary IP\n-- address associated with the network interface.\n--\n-- 'addresses.association.public-ip' - The association ID returned when the\n-- network interface was associated with the Elastic IP address.\n--\n-- 'addresses.association.owner-id' - The owner ID of the addresses associated\n-- with the network interface.\n--\n-- 'association.association-id' - The association ID returned when the network\n-- interface was associated with an IP address.\n--\n-- 'association.allocation-id' - The allocation ID returned when you allocated\n-- the Elastic IP address for your network interface.\n--\n-- 'association.ip-owner-id' - The owner of the Elastic IP address associated\n-- with the network interface.\n--\n-- 'association.public-ip' - The address of the Elastic IP address bound to the\n-- network interface.\n--\n-- 'association.public-dns-name' - The public DNS name for the network\n-- interface.\n--\n-- 'attachment.attachment-id' - The ID of the interface attachment.\n--\n-- 'attachment.instance-id' - The ID of the instance to which the network\n-- interface is attached.\n--\n-- 'attachment.instance-owner-id' - The owner ID of the instance to which the\n-- network interface is attached.\n--\n-- 'attachment.device-index' - The device index to which the network interface\n-- is attached.\n--\n-- 'attachment.status' - The status of the attachment ('attaching' | 'attached' | 'detaching' | 'detached').\n--\n-- 'attachment.attach.time' - The time that the network interface was attached\n-- to an instance.\n--\n-- 'attachment.delete-on-termination' - Indicates whether the attachment is\n-- deleted when an instance is terminated.\n--\n-- 'availability-zone' - The Availability Zone of the network interface.\n--\n-- 'description' - The description of the network interface.\n--\n-- 'group-id' - The ID of a security group associated with the network\n-- interface.\n--\n-- 'group-name' - The name of a security group associated with the network\n-- interface.\n--\n-- 'mac-address' - The MAC address of the network interface.\n--\n-- 'network-interface-id' - The ID of the network interface.\n--\n-- 'owner-id' - The AWS account ID of the network interface owner.\n--\n-- 'private-ip-address' - The private IP address or addresses of the network\n-- interface.\n--\n-- 'private-dns-name' - The private DNS name of the network interface.\n--\n-- 'requester-id' - The ID of the entity that launched the instance on your\n-- behalf (for example, AWS Management Console, Auto Scaling, and so on).\n--\n-- 'requester-managed' - Indicates whether the network interface is being\n-- managed by an AWS service (for example, AWS Management Console, Auto Scaling,\n-- and so on).\n--\n-- 'source-desk-check' - Indicates whether the network interface performs\n-- source/destination checking. A value of 'true' means checking is enabled, and 'false' means checking is disabled. The value must be 'false' for the network\n-- interface to perform Network Address Translation (NAT) in your VPC.\n--\n-- 'status' - The status of the network interface. If the network interface is\n-- not attached to an instance, the status is 'available'; if a network interface\n-- is attached to an instance the status is 'in-use'.\n--\n-- 'subnet-id' - The ID of the subnet for the network interface.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-id' - The ID of the VPC for the network interface.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dni1DryRun",
                        "name": "_dni1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dni1Filters",
                        "name": "_dni1Filters",
                        "shape": "FilterList",
                        "locationName": "filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'addresses.private-ip-address' - The private IP addresses associated with\n-- the network interface.\n--\n-- 'addresses.primary' - Whether the private IP address is the primary IP\n-- address associated with the network interface.\n--\n-- 'addresses.association.public-ip' - The association ID returned when the\n-- network interface was associated with the Elastic IP address.\n--\n-- 'addresses.association.owner-id' - The owner ID of the addresses associated\n-- with the network interface.\n--\n-- 'association.association-id' - The association ID returned when the network\n-- interface was associated with an IP address.\n--\n-- 'association.allocation-id' - The allocation ID returned when you allocated\n-- the Elastic IP address for your network interface.\n--\n-- 'association.ip-owner-id' - The owner of the Elastic IP address associated\n-- with the network interface.\n--\n-- 'association.public-ip' - The address of the Elastic IP address bound to the\n-- network interface.\n--\n-- 'association.public-dns-name' - The public DNS name for the network\n-- interface.\n--\n-- 'attachment.attachment-id' - The ID of the interface attachment.\n--\n-- 'attachment.instance-id' - The ID of the instance to which the network\n-- interface is attached.\n--\n-- 'attachment.instance-owner-id' - The owner ID of the instance to which the\n-- network interface is attached.\n--\n-- 'attachment.device-index' - The device index to which the network interface\n-- is attached.\n--\n-- 'attachment.status' - The status of the attachment ('attaching' | 'attached' | 'detaching' | 'detached').\n--\n-- 'attachment.attach.time' - The time that the network interface was attached\n-- to an instance.\n--\n-- 'attachment.delete-on-termination' - Indicates whether the attachment is\n-- deleted when an instance is terminated.\n--\n-- 'availability-zone' - The Availability Zone of the network interface.\n--\n-- 'description' - The description of the network interface.\n--\n-- 'group-id' - The ID of a security group associated with the network\n-- interface.\n--\n-- 'group-name' - The name of a security group associated with the network\n-- interface.\n--\n-- 'mac-address' - The MAC address of the network interface.\n--\n-- 'network-interface-id' - The ID of the network interface.\n--\n-- 'owner-id' - The AWS account ID of the network interface owner.\n--\n-- 'private-ip-address' - The private IP address or addresses of the network\n-- interface.\n--\n-- 'private-dns-name' - The private DNS name of the network interface.\n--\n-- 'requester-id' - The ID of the entity that launched the instance on your\n-- behalf (for example, AWS Management Console, Auto Scaling, and so on).\n--\n-- 'requester-managed' - Indicates whether the network interface is being\n-- managed by an AWS service (for example, AWS Management Console, Auto Scaling,\n-- and so on).\n--\n-- 'source-desk-check' - Indicates whether the network interface performs\n-- source/destination checking. A value of 'true' means checking is enabled, and 'false' means checking is disabled. The value must be 'false' for the network\n-- interface to perform Network Address Translation (NAT) in your VPC.\n--\n-- 'status' - The status of the network interface. If the network interface is\n-- not attached to an instance, the status is 'available'; if a network interface\n-- is attached to an instance the status is 'in-use'.\n--\n-- 'subnet-id' - The ID of the subnet for the network interface.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-id' - The ID of the VPC for the network interface.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dni1NetworkInterfaceIds",
                        "name": "_dni1NetworkInterfaceIds",
                        "shape": "NetworkInterfaceIdList",
                        "locationName": "NetworkInterfaceId",
                        "documentation": "-- | One or more network interface IDs.\n--\n-- Default: Describes all your network interfaces.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describePlacementGroupsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dpgrPlacementGroups",
                    "name": "_dpgrPlacementGroups",
                    "shape": "PlacementGroupList",
                    "locationName": "placementGroupSet",
                    "documentation": "-- | One or more placement groups.",
                    "typeExposed": "[PlacementGroup]",
                    "type": "List \"item\" PlacementGroup"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribePlacementGroupsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dpgrPlacementGroups",
                        "name": "_dpgrPlacementGroups",
                        "shape": "PlacementGroupList",
                        "locationName": "placementGroupSet",
                        "documentation": "-- | One or more placement groups.",
                        "typeExposed": "[PlacementGroup]",
                        "type": "List \"item\" PlacementGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dpgrPlacementGroups",
                        "name": "_dpgrPlacementGroups",
                        "shape": "PlacementGroupList",
                        "locationName": "placementGroupSet",
                        "documentation": "-- | One or more placement groups.",
                        "typeExposed": "[PlacementGroup]",
                        "type": "List \"item\" PlacementGroup"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribePlacementGroups.html",
            "namespace": "Network.AWS.EC2.DescribePlacementGroups",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribePlacementGroups",
            "method": "post",
            "documentation": "-- | Describes one or more of your placement groups. For more information about\n-- placement groups and cluster instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html Cluster Instances\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "describePlacementGroups",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DescribePlacementGroups",
                "query": [
                    {
                        "field": "_dpg1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dpg1GroupNames",
                        "locationName": "groupName",
                        "type": "field"
                    },
                    {
                        "field": "_dpg1Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dpg1DryRun",
                        "name": "_dpg1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dpg1GroupNames",
                        "name": "_dpg1GroupNames",
                        "shape": "PlacementGroupStringList",
                        "locationName": "groupName",
                        "documentation": "-- | One or more placement group names.\n--\n-- Default: Describes all your placement groups, or only those otherwise\n-- specified.",
                        "typeExposed": "[Text]",
                        "type": "List \"groupName\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dpg1Filters",
                        "name": "_dpg1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'group-name' - The name of the placement group.\n--\n-- 'state' - The state of the placement group ('pending' | 'available' | 'deleting' | 'deleted').\n--\n-- 'strategy' - The strategy of the placement group ('cluster').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dpg1DryRun",
                        "name": "_dpg1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dpg1Filters",
                        "name": "_dpg1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'group-name' - The name of the placement group.\n--\n-- 'state' - The state of the placement group ('pending' | 'available' | 'deleting' | 'deleted').\n--\n-- 'strategy' - The strategy of the placement group ('cluster').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dpg1GroupNames",
                        "name": "_dpg1GroupNames",
                        "shape": "PlacementGroupStringList",
                        "locationName": "groupName",
                        "documentation": "-- | One or more placement group names.\n--\n-- Default: Describes all your placement groups, or only those otherwise\n-- specified.",
                        "typeExposed": "[Text]",
                        "type": "List \"groupName\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeRegionsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "drrRegions",
                    "name": "_drrRegions",
                    "shape": "RegionList",
                    "locationName": "regionInfo",
                    "documentation": "-- | Information about one or more regions.",
                    "typeExposed": "[Region]",
                    "type": "List \"item\" Region"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeRegionsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drrRegions",
                        "name": "_drrRegions",
                        "shape": "RegionList",
                        "locationName": "regionInfo",
                        "documentation": "-- | Information about one or more regions.",
                        "typeExposed": "[Region]",
                        "type": "List \"item\" Region"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drrRegions",
                        "name": "_drrRegions",
                        "shape": "RegionList",
                        "locationName": "regionInfo",
                        "documentation": "-- | Information about one or more regions.",
                        "typeExposed": "[Region]",
                        "type": "List \"item\" Region"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeRegions.html",
            "namespace": "Network.AWS.EC2.DescribeRegions",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeRegions",
            "method": "post",
            "documentation": "-- | Describes one or more regions that are currently available to you.\n--\n-- For a list of the regions supported by Amazon EC2, see \u003chttp://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region Regions and Endpoints\u003e.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "describeRegions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DescribeRegions",
                "query": [
                    {
                        "field": "_dr1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dr1RegionNames",
                        "locationName": "RegionName",
                        "type": "field"
                    },
                    {
                        "field": "_dr1Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dr1DryRun",
                        "name": "_dr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dr1RegionNames",
                        "name": "_dr1RegionNames",
                        "shape": "RegionNameStringList",
                        "locationName": "RegionName",
                        "documentation": "-- | The names of one or more regions.",
                        "typeExposed": "[Text]",
                        "type": "List \"RegionName\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dr1Filters",
                        "name": "_dr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'endpoint' - The endpoint of the region (for example, 'ec2.us-east-1.amazonaws.com').\n--\n-- 'region-name' - The name of the region (for example, 'us-east-1').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dr1DryRun",
                        "name": "_dr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dr1Filters",
                        "name": "_dr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'endpoint' - The endpoint of the region (for example, 'ec2.us-east-1.amazonaws.com').\n--\n-- 'region-name' - The name of the region (for example, 'us-east-1').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dr1RegionNames",
                        "name": "_dr1RegionNames",
                        "shape": "RegionNameStringList",
                        "locationName": "RegionName",
                        "documentation": "-- | The names of one or more regions.",
                        "typeExposed": "[Text]",
                        "type": "List \"RegionName\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeReservedInstancesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "drirReservedInstances",
                    "name": "_drirReservedInstances",
                    "shape": "ReservedInstancesList",
                    "locationName": "reservedInstancesSet",
                    "documentation": "-- | A list of Reserved Instances.",
                    "typeExposed": "[ReservedInstances]",
                    "type": "List \"item\" ReservedInstances"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeReservedInstancesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drirReservedInstances",
                        "name": "_drirReservedInstances",
                        "shape": "ReservedInstancesList",
                        "locationName": "reservedInstancesSet",
                        "documentation": "-- | A list of Reserved Instances.",
                        "typeExposed": "[ReservedInstances]",
                        "type": "List \"item\" ReservedInstances"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drirReservedInstances",
                        "name": "_drirReservedInstances",
                        "shape": "ReservedInstancesList",
                        "locationName": "reservedInstancesSet",
                        "documentation": "-- | A list of Reserved Instances.",
                        "typeExposed": "[ReservedInstances]",
                        "type": "List \"item\" ReservedInstances"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeReservedInstances.html",
            "namespace": "Network.AWS.EC2.DescribeReservedInstances",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeReservedInstances",
            "method": "post",
            "documentation": "-- | Describes one or more of the Reserved Instances that you purchased.\n--\n-- For more information about Reserved Instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html Reserved Instances\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 24,
                "ctor": "describeReservedInstances",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "DescribeReservedInstances",
                "query": [
                    {
                        "field": "_driDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_driReservedInstancesIds",
                        "locationName": "ReservedInstancesId",
                        "type": "field"
                    },
                    {
                        "field": "_driFilters",
                        "locationName": "Filter",
                        "type": "field"
                    },
                    {
                        "field": "_driOfferingType",
                        "locationName": "offeringType",
                        "type": "field"
                    }
                ],
                "locationPad": 20,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "driDryRun",
                        "name": "_driDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "driReservedInstancesIds",
                        "name": "_driReservedInstancesIds",
                        "shape": "ReservedInstancesIdStringList",
                        "locationName": "ReservedInstancesId",
                        "documentation": "-- | One or more Reserved Instance IDs.\n--\n-- Default: Describes all your Reserved Instances, or only those otherwise\n-- specified.",
                        "typeExposed": "[Text]",
                        "type": "List \"ReservedInstancesId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "driFilters",
                        "name": "_driFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availability-zone' - The Availability Zone where the Reserved Instance can\n-- be used.\n--\n-- 'duration' - The duration of the Reserved Instance (one year or three\n-- years), in seconds ('31536000' | '94608000').\n--\n-- 'end' - The time when the Reserved Instance expires (for example,\n-- 2014-08-07T11:54:42.000Z).\n--\n-- 'fixed-price' - The purchase price of the Reserved Instance (for example,\n-- 9800.0).\n--\n-- 'instance-type' - The instance type on which the Reserved Instance can be\n-- used.\n--\n-- 'product-description' - The product description of the Reserved Instance ('Linux/UNIX' | 'Linux/UNIX (Amazon VPC)' | 'Windows' | 'Windows (Amazon VPC)').\n--\n-- 'reserved-instances-id' - The ID of the Reserved Instance.\n--\n-- 'start' - The time at which the Reserved Instance purchase request was\n-- placed (for example, 2014-08-07T11:54:42.000Z).\n--\n-- 'state' - The state of the Reserved Instance ('pending-payment' | 'active' | 'payment-failed' | 'retired').\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'usage-price' - The usage price of the Reserved Instance, per hour (for\n-- example, 0.84).\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "driOfferingType",
                        "name": "_driOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "-- | The Reserved Instance offering type. If you are using tools that predate the\n-- 2011-11-01 API version, you only have access to the 'Medium Utilization'\n-- Reserved Instance offering type.",
                        "typeExposed": "Maybe OfferingTypeValues",
                        "type": "Maybe OfferingTypeValues"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "driDryRun",
                        "name": "_driDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "driFilters",
                        "name": "_driFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availability-zone' - The Availability Zone where the Reserved Instance can\n-- be used.\n--\n-- 'duration' - The duration of the Reserved Instance (one year or three\n-- years), in seconds ('31536000' | '94608000').\n--\n-- 'end' - The time when the Reserved Instance expires (for example,\n-- 2014-08-07T11:54:42.000Z).\n--\n-- 'fixed-price' - The purchase price of the Reserved Instance (for example,\n-- 9800.0).\n--\n-- 'instance-type' - The instance type on which the Reserved Instance can be\n-- used.\n--\n-- 'product-description' - The product description of the Reserved Instance ('Linux/UNIX' | 'Linux/UNIX (Amazon VPC)' | 'Windows' | 'Windows (Amazon VPC)').\n--\n-- 'reserved-instances-id' - The ID of the Reserved Instance.\n--\n-- 'start' - The time at which the Reserved Instance purchase request was\n-- placed (for example, 2014-08-07T11:54:42.000Z).\n--\n-- 'state' - The state of the Reserved Instance ('pending-payment' | 'active' | 'payment-failed' | 'retired').\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'usage-price' - The usage price of the Reserved Instance, per hour (for\n-- example, 0.84).\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "driOfferingType",
                        "name": "_driOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "-- | The Reserved Instance offering type. If you are using tools that predate the\n-- 2011-11-01 API version, you only have access to the 'Medium Utilization'\n-- Reserved Instance offering type.",
                        "typeExposed": "Maybe OfferingTypeValues",
                        "type": "Maybe OfferingTypeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "driReservedInstancesIds",
                        "name": "_driReservedInstancesIds",
                        "shape": "ReservedInstancesIdStringList",
                        "locationName": "ReservedInstancesId",
                        "documentation": "-- | One or more Reserved Instance IDs.\n--\n-- Default: Describes all your Reserved Instances, or only those otherwise\n-- specified.",
                        "typeExposed": "[Text]",
                        "type": "List \"ReservedInstancesId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeReservedInstancesListingsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "drilrReservedInstancesListings",
                    "name": "_drilrReservedInstancesListings",
                    "shape": "ReservedInstancesListingList",
                    "locationName": "reservedInstancesListingsSet",
                    "documentation": "-- | Information about the Reserved Instance listing.",
                    "typeExposed": "[ReservedInstancesListing]",
                    "type": "List \"item\" ReservedInstancesListing"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeReservedInstancesListingsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drilrReservedInstancesListings",
                        "name": "_drilrReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "-- | Information about the Reserved Instance listing.",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "List \"item\" ReservedInstancesListing"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drilrReservedInstancesListings",
                        "name": "_drilrReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "-- | Information about the Reserved Instance listing.",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "List \"item\" ReservedInstancesListing"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeReservedInstancesListings.html",
            "namespace": "Network.AWS.EC2.DescribeReservedInstancesListings",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeReservedInstancesListings",
            "method": "post",
            "documentation": "-- | Describes your account's Reserved Instance listings in the Reserved Instance\n-- Marketplace.\n--\n-- The Reserved Instance Marketplace matches sellers who want to resell\n-- Reserved Instance capacity that they no longer need with buyers who want to\n-- purchase additional capacity. Reserved Instances bought and sold through the\n-- Reserved Instance Marketplace work like any other Reserved Instances.\n--\n-- As a seller, you choose to list some or all of your Reserved Instances, and\n-- you specify the upfront price to receive for them. Your Reserved Instances\n-- are then listed in the Reserved Instance Marketplace and are available for\n-- purchase.\n--\n-- As a buyer, you specify the configuration of the Reserved Instance to\n-- purchase, and the Marketplace matches what you're searching for with what's\n-- available. The Marketplace first sells the lowest priced Reserved Instances\n-- to you, and continues to sell available Reserved Instance listings to you\n-- until your demand is met. You are charged based on the total price of all of\n-- the listings that you purchase.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html Reserved Instance Marketplace\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 31,
                "ctor": "describeReservedInstancesListings",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 27,
                "name": "DescribeReservedInstancesListings",
                "query": [
                    {
                        "field": "_drilReservedInstancesId",
                        "locationName": "reservedInstancesId",
                        "type": "field"
                    },
                    {
                        "field": "_drilReservedInstancesListingId",
                        "locationName": "reservedInstancesListingId",
                        "type": "field"
                    },
                    {
                        "field": "_drilFilters",
                        "locationName": "filters",
                        "type": "field"
                    }
                ],
                "locationPad": 27,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drilReservedInstancesId",
                        "name": "_drilReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | One or more Reserved Instance IDs.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drilReservedInstancesListingId",
                        "name": "_drilReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "-- | One or more Reserved Instance Listing IDs.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drilFilters",
                        "name": "_drilFilters",
                        "shape": "FilterList",
                        "locationName": "filters",
                        "documentation": "-- | One or more filters.\n--\n-- 'reserved-instances-id' - The ID of the Reserved Instances.\n--\n-- 'reserved-instances-listing-id' - The ID of the Reserved Instances listing.\n--\n-- 'status' - The status of the Reserved Instance listing ('pending' | 'active' | 'cancelled' | 'closed').\n--\n-- 'status-message' - The reason for the status.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drilFilters",
                        "name": "_drilFilters",
                        "shape": "FilterList",
                        "locationName": "filters",
                        "documentation": "-- | One or more filters.\n--\n-- 'reserved-instances-id' - The ID of the Reserved Instances.\n--\n-- 'reserved-instances-listing-id' - The ID of the Reserved Instances listing.\n--\n-- 'status' - The status of the Reserved Instance listing ('pending' | 'active' | 'cancelled' | 'closed').\n--\n-- 'status-message' - The reason for the status.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drilReservedInstancesId",
                        "name": "_drilReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | One or more Reserved Instance IDs.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drilReservedInstancesListingId",
                        "name": "_drilReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "-- | One or more Reserved Instance Listing IDs.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 36,
                "ctor": "describeReservedInstancesModificationsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeReservedInstancesModificationsResponse",
                "resultWrapper": null,
                "locationPad": 34,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drimrReservedInstancesModifications",
                        "name": "_drimrReservedInstancesModifications",
                        "shape": "ReservedInstancesModificationList",
                        "locationName": "reservedInstancesModificationsSet",
                        "documentation": "-- | The Reserved Instance modification information.",
                        "typeExposed": "[ReservedInstancesModification]",
                        "type": "List \"item\" ReservedInstancesModification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drimrNextToken",
                        "name": "_drimrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token for the next page of data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drimrNextToken",
                        "name": "_drimrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token for the next page of data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drimrReservedInstancesModifications",
                        "name": "_drimrReservedInstancesModifications",
                        "shape": "ReservedInstancesModificationList",
                        "locationName": "reservedInstancesModificationsSet",
                        "documentation": "-- | The Reserved Instance modification information.",
                        "typeExposed": "[ReservedInstancesModification]",
                        "type": "List \"item\" ReservedInstancesModification"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeReservedInstancesModifications.html",
            "namespace": "Network.AWS.EC2.DescribeReservedInstancesModifications",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": {
                "token": {
                    "input": "drimNextToken",
                    "outputRequired": false,
                    "output": "drimrNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "drimrReservedInstancesModifications"
            },
            "name": "DescribeReservedInstancesModifications",
            "method": "post",
            "documentation": "-- | Describes the modifications made to your Reserved Instances. If no parameter\n-- is specified, information about all your Reserved Instances modification\n-- requests is returned. If a modification ID is specified, only information\n-- about the specific modification is returned.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html Modifying Reserved Instances\u003e in the Amazon Elastic\n-- Compute Cloud User Guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 37,
                "ctor": "describeReservedInstancesModifications",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 32,
                "name": "DescribeReservedInstancesModifications",
                "query": [
                    {
                        "field": "_drimReservedInstancesModificationIds",
                        "locationName": "ReservedInstancesModificationId",
                        "type": "field"
                    },
                    {
                        "field": "_drimNextToken",
                        "locationName": "nextToken",
                        "type": "field"
                    },
                    {
                        "field": "_drimFilters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 32,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drimReservedInstancesModificationIds",
                        "name": "_drimReservedInstancesModificationIds",
                        "shape": "ReservedInstancesModificationIdStringList",
                        "locationName": "ReservedInstancesModificationId",
                        "documentation": "-- | IDs for the submitted modification request.",
                        "typeExposed": "[Text]",
                        "type": "List \"ReservedInstancesModificationId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drimNextToken",
                        "name": "_drimNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token for the next page of data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drimFilters",
                        "name": "_drimFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'client-token' - The idempotency token for the modification request.\n--\n-- 'create-date' - The time when the modification request was created.\n--\n-- 'effective-date' - The time when the modification becomes effective.\n--\n-- 'modification-result.reserved-instances-id' - The ID for the Reserved\n-- Instances created as part of the modification request. This ID is only\n-- available when the status of the modification is 'fulfilled'.\n--\n-- 'modification-result.target-configuration.availability-zone' - The\n-- Availability Zone for the new Reserved Instances.\n--\n-- 'modification-result.target-configuration.instance-count ' - The number of\n-- new Reserved Instances.\n--\n-- 'modification-result.target-configuration.instance-type' - The instance type\n-- of the new Reserved Instances.\n--\n-- 'modification-result.target-configuration.platform' - The network platform\n-- of the new Reserved Instances ('EC2-Classic' | 'EC2-VPC').\n--\n-- 'reserved-instances-id' - The ID of the Reserved Instances modified.\n--\n-- 'reserved-instances-modification-id' - The ID of the modification request.\n--\n-- 'status' - The status of the Reserved Instances modification request ('processing' | 'fulfilled' | 'failed').\n--\n-- 'status-message' - The reason for the status.\n--\n-- 'update-date' - The time when the modification request was last updated.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drimFilters",
                        "name": "_drimFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'client-token' - The idempotency token for the modification request.\n--\n-- 'create-date' - The time when the modification request was created.\n--\n-- 'effective-date' - The time when the modification becomes effective.\n--\n-- 'modification-result.reserved-instances-id' - The ID for the Reserved\n-- Instances created as part of the modification request. This ID is only\n-- available when the status of the modification is 'fulfilled'.\n--\n-- 'modification-result.target-configuration.availability-zone' - The\n-- Availability Zone for the new Reserved Instances.\n--\n-- 'modification-result.target-configuration.instance-count ' - The number of\n-- new Reserved Instances.\n--\n-- 'modification-result.target-configuration.instance-type' - The instance type\n-- of the new Reserved Instances.\n--\n-- 'modification-result.target-configuration.platform' - The network platform\n-- of the new Reserved Instances ('EC2-Classic' | 'EC2-VPC').\n--\n-- 'reserved-instances-id' - The ID of the Reserved Instances modified.\n--\n-- 'reserved-instances-modification-id' - The ID of the modification request.\n--\n-- 'status' - The status of the Reserved Instances modification request ('processing' | 'fulfilled' | 'failed').\n--\n-- 'status-message' - The reason for the status.\n--\n-- 'update-date' - The time when the modification request was last updated.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drimNextToken",
                        "name": "_drimNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token for the next page of data.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drimReservedInstancesModificationIds",
                        "name": "_drimReservedInstancesModificationIds",
                        "shape": "ReservedInstancesModificationIdStringList",
                        "locationName": "ReservedInstancesModificationId",
                        "documentation": "-- | IDs for the submitted modification request.",
                        "typeExposed": "[Text]",
                        "type": "List \"ReservedInstancesModificationId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 32,
                "ctor": "describeReservedInstancesOfferingsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeReservedInstancesOfferingsResponse",
                "resultWrapper": null,
                "locationPad": 30,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "driorReservedInstancesOfferings",
                        "name": "_driorReservedInstancesOfferings",
                        "shape": "ReservedInstancesOfferingList",
                        "locationName": "reservedInstancesOfferingsSet",
                        "documentation": "-- | A list of Reserved Instances offerings.",
                        "typeExposed": "[ReservedInstancesOffering]",
                        "type": "List \"item\" ReservedInstancesOffering"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "driorNextToken",
                        "name": "_driorNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The next paginated set of results to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "driorNextToken",
                        "name": "_driorNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The next paginated set of results to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "driorReservedInstancesOfferings",
                        "name": "_driorReservedInstancesOfferings",
                        "shape": "ReservedInstancesOfferingList",
                        "locationName": "reservedInstancesOfferingsSet",
                        "documentation": "-- | A list of Reserved Instances offerings.",
                        "typeExposed": "[ReservedInstancesOffering]",
                        "type": "List \"item\" ReservedInstancesOffering"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeReservedInstancesOfferings.html",
            "namespace": "Network.AWS.EC2.DescribeReservedInstancesOfferings",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": {
                "token": {
                    "input": "drioNextToken",
                    "outputRequired": false,
                    "output": "driorNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "driorReservedInstancesOfferings"
            },
            "name": "DescribeReservedInstancesOfferings",
            "method": "post",
            "documentation": "-- | Describes Reserved Instance offerings that are available for purchase. With\n-- Reserved Instances, you purchase the right to launch instances for a period\n-- of time. During that time period, you do not receive insufficient capacity\n-- errors, and you pay a lower usage rate than the rate charged for On-Demand\n-- instances for the actual time used.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html Reserved Instance Marketplace\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 33,
                "ctor": "describeReservedInstancesOfferings",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 28,
                "name": "DescribeReservedInstancesOfferings",
                "query": [
                    {
                        "field": "_drioDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_drioReservedInstancesOfferingIds",
                        "locationName": "ReservedInstancesOfferingId",
                        "type": "field"
                    },
                    {
                        "field": "_drioInstanceType",
                        "locationName": "InstanceType",
                        "type": "field"
                    },
                    {
                        "field": "_drioAvailabilityZone",
                        "locationName": "AvailabilityZone",
                        "type": "field"
                    },
                    {
                        "field": "_drioProductDescription",
                        "locationName": "ProductDescription",
                        "type": "field"
                    },
                    {
                        "field": "_drioFilters",
                        "locationName": "Filter",
                        "type": "field"
                    },
                    {
                        "field": "_drioInstanceTenancy",
                        "locationName": "instanceTenancy",
                        "type": "field"
                    },
                    {
                        "field": "_drioOfferingType",
                        "locationName": "offeringType",
                        "type": "field"
                    },
                    {
                        "field": "_drioNextToken",
                        "locationName": "nextToken",
                        "type": "field"
                    },
                    {
                        "field": "_drioMaxResults",
                        "locationName": "maxResults",
                        "type": "field"
                    },
                    {
                        "field": "_drioIncludeMarketplace",
                        "locationName": "IncludeMarketplace",
                        "type": "field"
                    },
                    {
                        "field": "_drioMinDuration",
                        "locationName": "MinDuration",
                        "type": "field"
                    },
                    {
                        "field": "_drioMaxDuration",
                        "locationName": "MaxDuration",
                        "type": "field"
                    },
                    {
                        "field": "_drioMaxInstanceCount",
                        "locationName": "MaxInstanceCount",
                        "type": "field"
                    }
                ],
                "locationPad": 28,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioDryRun",
                        "name": "_drioDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drioReservedInstancesOfferingIds",
                        "name": "_drioReservedInstancesOfferingIds",
                        "shape": "ReservedInstancesOfferingIdStringList",
                        "locationName": "ReservedInstancesOfferingId",
                        "documentation": "-- | One or more Reserved Instances offering IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"ReservedInstancesOfferingId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioInstanceType",
                        "name": "_drioInstanceType",
                        "shape": "InstanceType",
                        "locationName": "InstanceType",
                        "documentation": "-- | The instance type on which the Reserved Instance can be used. For more\n-- information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html Instance Types\u003e in the /Amazon Elastic Compute Cloud User Guide/\n-- .",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioAvailabilityZone",
                        "name": "_drioAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Availability Zone in which the Reserved Instance can be used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioProductDescription",
                        "name": "_drioProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "ProductDescription",
                        "documentation": "-- | The Reserved Instance description. Instances that include '(Amazon VPC)' in the\n-- description are for use with Amazon VPC.",
                        "typeExposed": "Maybe RIProductDescription",
                        "type": "Maybe RIProductDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drioFilters",
                        "name": "_drioFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availability-zone' - The Availability Zone where the Reserved Instance can\n-- be used.\n--\n-- 'duration' - The duration of the Reserved Instance (for example, one year or\n-- three years), in seconds ('31536000' | '94608000').\n--\n-- 'fixed-price' - The purchase price of the Reserved Instance (for example,\n-- 9800.0).\n--\n-- 'instance-type' - The instance type on which the Reserved Instance can be\n-- used.\n--\n-- 'marketplace' - Set to 'true' to show only Reserved Instance Marketplace\n-- offerings. When this filter is not used, which is the default behavior, all\n-- offerings from AWS and Reserved Instance Marketplace are listed.\n--\n-- 'product-description' - The description of the Reserved Instance ('Linux/UNIX'\n-- | 'Linux/UNIX (Amazon VPC)' | 'Windows' | 'Windows (Amazon VPC)').\n--\n-- 'reserved-instances-offering-id' - The Reserved Instances offering ID.\n--\n-- 'usage-price' - The usage price of the Reserved Instance, per hour (for\n-- example, 0.84).\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioInstanceTenancy",
                        "name": "_drioInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "-- | The tenancy of the Reserved Instance offering. A Reserved Instance with 'dedicated' tenancy runs on single-tenant hardware and can only be launched within a VPC.\n--\n-- Default: 'default'",
                        "typeExposed": "Maybe Tenancy",
                        "type": "Maybe Tenancy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioOfferingType",
                        "name": "_drioOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "-- | The Reserved Instance offering type. If you are using tools that predate the\n-- 2011-11-01 API version, you only have access to the 'Medium Utilization'\n-- Reserved Instance offering type.",
                        "typeExposed": "Maybe OfferingTypeValues",
                        "type": "Maybe OfferingTypeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioNextToken",
                        "name": "_drioNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token to use when requesting the next paginated set of offerings.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioMaxResults",
                        "name": "_drioMaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "-- | The maximum number of offerings to return. The maximum is 100.\n--\n-- Default: 100",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioIncludeMarketplace",
                        "name": "_drioIncludeMarketplace",
                        "shape": "Boolean",
                        "locationName": "IncludeMarketplace",
                        "documentation": "-- | Include Marketplace offerings in the response.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioMinDuration",
                        "name": "_drioMinDuration",
                        "shape": "Long",
                        "locationName": "MinDuration",
                        "documentation": "-- | The minimum duration (in seconds) to filter when searching for offerings.\n--\n-- Default: 2592000 (1 month)",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioMaxDuration",
                        "name": "_drioMaxDuration",
                        "shape": "Long",
                        "locationName": "MaxDuration",
                        "documentation": "-- | The maximum duration (in seconds) to filter when searching for offerings.\n--\n-- Default: 94608000 (3 years)",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioMaxInstanceCount",
                        "name": "_drioMaxInstanceCount",
                        "shape": "Integer",
                        "locationName": "MaxInstanceCount",
                        "documentation": "-- | The maximum number of instances to filter when searching for offerings.\n--\n-- Default: 20",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioAvailabilityZone",
                        "name": "_drioAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "-- | The Availability Zone in which the Reserved Instance can be used.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioDryRun",
                        "name": "_drioDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drioFilters",
                        "name": "_drioFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availability-zone' - The Availability Zone where the Reserved Instance can\n-- be used.\n--\n-- 'duration' - The duration of the Reserved Instance (for example, one year or\n-- three years), in seconds ('31536000' | '94608000').\n--\n-- 'fixed-price' - The purchase price of the Reserved Instance (for example,\n-- 9800.0).\n--\n-- 'instance-type' - The instance type on which the Reserved Instance can be\n-- used.\n--\n-- 'marketplace' - Set to 'true' to show only Reserved Instance Marketplace\n-- offerings. When this filter is not used, which is the default behavior, all\n-- offerings from AWS and Reserved Instance Marketplace are listed.\n--\n-- 'product-description' - The description of the Reserved Instance ('Linux/UNIX'\n-- | 'Linux/UNIX (Amazon VPC)' | 'Windows' | 'Windows (Amazon VPC)').\n--\n-- 'reserved-instances-offering-id' - The Reserved Instances offering ID.\n--\n-- 'usage-price' - The usage price of the Reserved Instance, per hour (for\n-- example, 0.84).\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioIncludeMarketplace",
                        "name": "_drioIncludeMarketplace",
                        "shape": "Boolean",
                        "locationName": "IncludeMarketplace",
                        "documentation": "-- | Include Marketplace offerings in the response.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioInstanceTenancy",
                        "name": "_drioInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "-- | The tenancy of the Reserved Instance offering. A Reserved Instance with 'dedicated' tenancy runs on single-tenant hardware and can only be launched within a VPC.\n--\n-- Default: 'default'",
                        "typeExposed": "Maybe Tenancy",
                        "type": "Maybe Tenancy"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioInstanceType",
                        "name": "_drioInstanceType",
                        "shape": "InstanceType",
                        "locationName": "InstanceType",
                        "documentation": "-- | The instance type on which the Reserved Instance can be used. For more\n-- information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html Instance Types\u003e in the /Amazon Elastic Compute Cloud User Guide/\n-- .",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioMaxDuration",
                        "name": "_drioMaxDuration",
                        "shape": "Long",
                        "locationName": "MaxDuration",
                        "documentation": "-- | The maximum duration (in seconds) to filter when searching for offerings.\n--\n-- Default: 94608000 (3 years)",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioMaxInstanceCount",
                        "name": "_drioMaxInstanceCount",
                        "shape": "Integer",
                        "locationName": "MaxInstanceCount",
                        "documentation": "-- | The maximum number of instances to filter when searching for offerings.\n--\n-- Default: 20",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioMaxResults",
                        "name": "_drioMaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "-- | The maximum number of offerings to return. The maximum is 100.\n--\n-- Default: 100",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioMinDuration",
                        "name": "_drioMinDuration",
                        "shape": "Long",
                        "locationName": "MinDuration",
                        "documentation": "-- | The minimum duration (in seconds) to filter when searching for offerings.\n--\n-- Default: 2592000 (1 month)",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioNextToken",
                        "name": "_drioNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token to use when requesting the next paginated set of offerings.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioOfferingType",
                        "name": "_drioOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "-- | The Reserved Instance offering type. If you are using tools that predate the\n-- 2011-11-01 API version, you only have access to the 'Medium Utilization'\n-- Reserved Instance offering type.",
                        "typeExposed": "Maybe OfferingTypeValues",
                        "type": "Maybe OfferingTypeValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drioProductDescription",
                        "name": "_drioProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "ProductDescription",
                        "documentation": "-- | The Reserved Instance description. Instances that include '(Amazon VPC)' in the\n-- description are for use with Amazon VPC.",
                        "typeExposed": "Maybe RIProductDescription",
                        "type": "Maybe RIProductDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drioReservedInstancesOfferingIds",
                        "name": "_drioReservedInstancesOfferingIds",
                        "shape": "ReservedInstancesOfferingIdStringList",
                        "locationName": "ReservedInstancesOfferingId",
                        "documentation": "-- | One or more Reserved Instances offering IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"ReservedInstancesOfferingId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeRouteTablesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "drtrRouteTables",
                    "name": "_drtrRouteTables",
                    "shape": "RouteTableList",
                    "locationName": "routeTableSet",
                    "documentation": "-- | Information about one or more route tables.",
                    "typeExposed": "[RouteTable]",
                    "type": "List \"item\" RouteTable"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeRouteTablesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drtrRouteTables",
                        "name": "_drtrRouteTables",
                        "shape": "RouteTableList",
                        "locationName": "routeTableSet",
                        "documentation": "-- | Information about one or more route tables.",
                        "typeExposed": "[RouteTable]",
                        "type": "List \"item\" RouteTable"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drtrRouteTables",
                        "name": "_drtrRouteTables",
                        "shape": "RouteTableList",
                        "locationName": "routeTableSet",
                        "documentation": "-- | Information about one or more route tables.",
                        "typeExposed": "[RouteTable]",
                        "type": "List \"item\" RouteTable"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeRouteTables.html",
            "namespace": "Network.AWS.EC2.DescribeRouteTables",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeRouteTables",
            "method": "post",
            "documentation": "-- | Describes one or more of your route tables.\n--\n-- For more information about route tables, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html Route Tables\u003e in the /AmazonVirtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "describeRouteTables",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DescribeRouteTables",
                "query": [
                    {
                        "field": "_drt2DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_drt2RouteTableIds",
                        "locationName": "RouteTableId",
                        "type": "field"
                    },
                    {
                        "field": "_drt2Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drt2DryRun",
                        "name": "_drt2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drt2RouteTableIds",
                        "name": "_drt2RouteTableIds",
                        "shape": "ValueStringList",
                        "locationName": "RouteTableId",
                        "documentation": "-- | One or more route table IDs.\n--\n-- Default: Describes all your route tables.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drt2Filters",
                        "name": "_drt2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'association.route-table-association-id' - The ID of an association ID for\n-- the route table.\n--\n-- 'association.route-table-id' - The ID of the route table involved in the\n-- association.\n--\n-- 'association.subnet-id' - The ID of the subnet involved in the association.\n--\n-- 'association.main' - Indicates whether the route table is the main route\n-- table for the VPC.\n--\n-- 'route-table-id' - The ID of the route table.\n--\n-- 'route.destination-cidr-block' - The CIDR range specified in a route in the\n-- table.\n--\n-- 'route.gateway-id' - The ID of a gateway specified in a route in the table.\n--\n-- 'route.instance-id' - The ID of an instance specified in a route in the\n-- table.\n--\n-- 'route.origin' - Describes how the route was created. 'CreateRouteTable'\n-- indicates that the route was automatically created when the route table was\n-- created; 'CreateRoute' indicates that the route was manually added to the route\n-- table; 'EnableVgwRoutePropagation' indicates that the route was propagated by\n-- route propagation.\n--\n-- 'route.state' - The state of a route in the route table ('active' | 'blackhole'). The blackhole state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, the specified NAT instance has been terminated, and so on).\n--\n--\n-- 'route.vpc-peering-connection-id' - The ID of a VPC peering connection\n-- specified in a route in the table.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-id' - The ID of the VPC for the route table.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drt2DryRun",
                        "name": "_drt2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drt2Filters",
                        "name": "_drt2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'association.route-table-association-id' - The ID of an association ID for\n-- the route table.\n--\n-- 'association.route-table-id' - The ID of the route table involved in the\n-- association.\n--\n-- 'association.subnet-id' - The ID of the subnet involved in the association.\n--\n-- 'association.main' - Indicates whether the route table is the main route\n-- table for the VPC.\n--\n-- 'route-table-id' - The ID of the route table.\n--\n-- 'route.destination-cidr-block' - The CIDR range specified in a route in the\n-- table.\n--\n-- 'route.gateway-id' - The ID of a gateway specified in a route in the table.\n--\n-- 'route.instance-id' - The ID of an instance specified in a route in the\n-- table.\n--\n-- 'route.origin' - Describes how the route was created. 'CreateRouteTable'\n-- indicates that the route was automatically created when the route table was\n-- created; 'CreateRoute' indicates that the route was manually added to the route\n-- table; 'EnableVgwRoutePropagation' indicates that the route was propagated by\n-- route propagation.\n--\n-- 'route.state' - The state of a route in the route table ('active' | 'blackhole'). The blackhole state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, the specified NAT instance has been terminated, and so on).\n--\n--\n-- 'route.vpc-peering-connection-id' - The ID of a VPC peering connection\n-- specified in a route in the table.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-id' - The ID of the VPC for the route table.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "drt2RouteTableIds",
                        "name": "_drt2RouteTableIds",
                        "shape": "ValueStringList",
                        "locationName": "RouteTableId",
                        "documentation": "-- | One or more route table IDs.\n--\n-- Default: Describes all your route tables.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeSecurityGroupsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dsgrSecurityGroups",
                    "name": "_dsgrSecurityGroups",
                    "shape": "SecurityGroupList",
                    "locationName": "securityGroupInfo",
                    "documentation": "-- | Information about one or more security groups.",
                    "typeExposed": "[SecurityGroup]",
                    "type": "List \"item\" SecurityGroup"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeSecurityGroupsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsgrSecurityGroups",
                        "name": "_dsgrSecurityGroups",
                        "shape": "SecurityGroupList",
                        "locationName": "securityGroupInfo",
                        "documentation": "-- | Information about one or more security groups.",
                        "typeExposed": "[SecurityGroup]",
                        "type": "List \"item\" SecurityGroup"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsgrSecurityGroups",
                        "name": "_dsgrSecurityGroups",
                        "shape": "SecurityGroupList",
                        "locationName": "securityGroupInfo",
                        "documentation": "-- | Information about one or more security groups.",
                        "typeExposed": "[SecurityGroup]",
                        "type": "List \"item\" SecurityGroup"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSecurityGroups.html",
            "namespace": "Network.AWS.EC2.DescribeSecurityGroups",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeSecurityGroups",
            "method": "post",
            "documentation": "-- | Describes one or more of your security groups.\n--\n-- A security group is for use with instances either in the EC2-Classic\n-- platform or in a specific VPC. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html Amazon EC2 SecurityGroups\u003e in the /Amazon Elastic Compute Cloud User Guide/ and \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html Security Groups forYour VPC\u003e in the /Amazon Virtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "describeSecurityGroups",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DescribeSecurityGroups",
                "query": [
                    {
                        "field": "_dsg1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dsg1GroupNames",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_dsg1GroupIds",
                        "locationName": "GroupId",
                        "type": "field"
                    },
                    {
                        "field": "_dsg1Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsg1DryRun",
                        "name": "_dsg1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsg1GroupNames",
                        "name": "_dsg1GroupNames",
                        "shape": "GroupNameStringList",
                        "locationName": "GroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] One or more security group names. You can specify\n-- either the security group name or the security group ID.\n--\n-- Default: Describes all your security groups.",
                        "typeExposed": "[Text]",
                        "type": "List \"GroupName\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsg1GroupIds",
                        "name": "_dsg1GroupIds",
                        "shape": "GroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": "-- | One or more security group IDs. Required for nondefault VPCs.\n--\n-- Default: Describes all your security groups.",
                        "typeExposed": "[Text]",
                        "type": "List \"groupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsg1Filters",
                        "name": "_dsg1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'description' - The description of the security group.\n--\n-- 'group-id' - The ID of the security group.\n--\n-- 'group-name' - The name of the security group.\n--\n-- 'ip-permission.cidr' - A CIDR range that has been granted permission.\n--\n-- 'ip-permission.from-port' - The start of port range for the TCP and UDP\n-- protocols, or an ICMP type number.\n--\n-- 'ip-permission.group-id' - The ID of a security group that has been granted\n-- permission.\n--\n-- 'ip-permission.group-name' - The name of a security group that has been\n-- granted permission.\n--\n-- 'ip-permission.protocol' - The IP protocol for the permission ('tcp' | 'udp' | 'icmp' or a protocol number).\n--\n-- 'ip-permission.to-port' - The end of port range for the TCP and UDP\n-- protocols, or an ICMP code.\n--\n-- 'ip-permission.user-id' - The ID of an AWS account that has been granted\n-- permission.\n--\n-- 'owner-id' - The AWS account ID of the owner of the security group.\n--\n-- 'tag-key' - The key of a tag assigned to the security group.\n--\n-- 'tag-value' - The value of a tag assigned to the security group.\n--\n-- 'vpc-id' - The ID of the VPC specified when the security group was created.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsg1DryRun",
                        "name": "_dsg1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsg1Filters",
                        "name": "_dsg1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'description' - The description of the security group.\n--\n-- 'group-id' - The ID of the security group.\n--\n-- 'group-name' - The name of the security group.\n--\n-- 'ip-permission.cidr' - A CIDR range that has been granted permission.\n--\n-- 'ip-permission.from-port' - The start of port range for the TCP and UDP\n-- protocols, or an ICMP type number.\n--\n-- 'ip-permission.group-id' - The ID of a security group that has been granted\n-- permission.\n--\n-- 'ip-permission.group-name' - The name of a security group that has been\n-- granted permission.\n--\n-- 'ip-permission.protocol' - The IP protocol for the permission ('tcp' | 'udp' | 'icmp' or a protocol number).\n--\n-- 'ip-permission.to-port' - The end of port range for the TCP and UDP\n-- protocols, or an ICMP code.\n--\n-- 'ip-permission.user-id' - The ID of an AWS account that has been granted\n-- permission.\n--\n-- 'owner-id' - The AWS account ID of the owner of the security group.\n--\n-- 'tag-key' - The key of a tag assigned to the security group.\n--\n-- 'tag-value' - The value of a tag assigned to the security group.\n--\n-- 'vpc-id' - The ID of the VPC specified when the security group was created.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsg1GroupIds",
                        "name": "_dsg1GroupIds",
                        "shape": "GroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": "-- | One or more security group IDs. Required for nondefault VPCs.\n--\n-- Default: Describes all your security groups.",
                        "typeExposed": "[Text]",
                        "type": "List \"groupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsg1GroupNames",
                        "name": "_dsg1GroupNames",
                        "shape": "GroupNameStringList",
                        "locationName": "GroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] One or more security group names. You can specify\n-- either the security group name or the security group ID.\n--\n-- Default: Describes all your security groups.",
                        "typeExposed": "[Text]",
                        "type": "List \"GroupName\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 28,
                "ctor": "describeSnapshotAttributeResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeSnapshotAttributeResponse",
                "resultWrapper": null,
                "locationPad": 23,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsarSnapshotId",
                        "name": "_dsarSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The ID of the Amazon EBS snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsarCreateVolumePermissions",
                        "name": "_dsarCreateVolumePermissions",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "createVolumePermission",
                        "documentation": "-- | A list of permissions for creating volumes from the snapshot.",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "List \"item\" CreateVolumePermission"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsarProductCodes",
                        "name": "_dsarProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | A list of product codes.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsarCreateVolumePermissions",
                        "name": "_dsarCreateVolumePermissions",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "createVolumePermission",
                        "documentation": "-- | A list of permissions for creating volumes from the snapshot.",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "List \"item\" CreateVolumePermission"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsarProductCodes",
                        "name": "_dsarProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | A list of product codes.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsarSnapshotId",
                        "name": "_dsarSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "-- | The ID of the Amazon EBS snapshot.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSnapshotAttribute.html",
            "namespace": "Network.AWS.EC2.DescribeSnapshotAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeSnapshotAttribute",
            "method": "post",
            "documentation": "-- | Describes the specified attribute of the specified snapshot. You can specify\n-- only one attribute at a time.\n--\n-- For more information about Amazon EBS snapshots, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html Amazon EBS Snapshots\u003e in\n-- the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "describeSnapshotAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dsaSnapshotId",
                        "name": "_dsaSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "-- | The ID of the Amazon EBS snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dsaAttribute",
                        "name": "_dsaAttribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The snapshot attribute you would like to view.",
                        "typeExposed": "SnapshotAttributeName",
                        "type": "SnapshotAttributeName"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DescribeSnapshotAttribute",
                "query": [
                    {
                        "field": "_dsaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dsaSnapshotId",
                        "locationName": "SnapshotId",
                        "type": "field"
                    },
                    {
                        "field": "_dsaAttribute",
                        "locationName": "Attribute",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsaDryRun",
                        "name": "_dsaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dsaAttribute",
                        "name": "_dsaAttribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The snapshot attribute you would like to view.",
                        "typeExposed": "SnapshotAttributeName",
                        "type": "SnapshotAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsaDryRun",
                        "name": "_dsaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dsaSnapshotId",
                        "name": "_dsaSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "-- | The ID of the Amazon EBS snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeSnapshotsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dsrSnapshots",
                    "name": "_dsrSnapshots",
                    "shape": "SnapshotList",
                    "locationName": "snapshotSet",
                    "documentation": null,
                    "typeExposed": "[Snapshot]",
                    "type": "List \"item\" Snapshot"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeSnapshotsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsrSnapshots",
                        "name": "_dsrSnapshots",
                        "shape": "SnapshotList",
                        "locationName": "snapshotSet",
                        "documentation": null,
                        "typeExposed": "[Snapshot]",
                        "type": "List \"item\" Snapshot"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsrSnapshots",
                        "name": "_dsrSnapshots",
                        "shape": "SnapshotList",
                        "locationName": "snapshotSet",
                        "documentation": null,
                        "typeExposed": "[Snapshot]",
                        "type": "List \"item\" Snapshot"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSnapshots.html",
            "namespace": "Network.AWS.EC2.DescribeSnapshots",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeSnapshots",
            "method": "post",
            "documentation": "-- | Describes one or more of the Amazon EBS snapshots available to you. Available\n-- snapshots include public snapshots available for any AWS account to launch,\n-- private snapshots that you own, and private snapshots owned by another AWS\n-- account but for which you've been given explicit create volume permissions.\n--\n-- The create volume permissions fall into the following categories:\n--\n-- /public/: The owner of the snapshot granted create volume permissions for\n-- the snapshot to the 'all' group. All AWS accounts have create volume\n-- permissions for these snapshots.  /explicit/: The owner of the snapshot granted\n-- create volume permissions to a specific AWS account.  /implicit/: An AWS\n-- account has implicit create volume permissions for all snapshots it owns.  The list of snapshots returned can be modified by specifying snapshot IDs, snapshot owners, or AWS accounts with create volume permissions. If no options are specified, Amazon EC2 returns all snapshots for which you have create volume permissions.\n--\n--\n-- If you specify one or more snapshot IDs, only snapshots that have the\n-- specified IDs are returned. If you specify an invalid snapshot ID, an error\n-- is returned. If you specify a snapshot ID for which you do not have access,\n-- it is not included in the returned results.\n--\n-- If you specify one or more snapshot owners, only snapshots from the\n-- specified owners and for which you have access are returned. The results can\n-- include the AWS account IDs of the specified owners, 'amazon' for snapshots\n-- owned by Amazon, or 'self' for snapshots that you own.\n--\n-- If you specify a list of restorable users, only snapshots with create\n-- snapshot permissions for those users are returned. You can specify AWS\n-- account IDs (if you own the snapshots), 'self' for snapshots for which you own\n-- or have explicit permissions, or 'all' for public snapshots.\n--\n-- For more information about Amazon EBS snapshots, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html Amazon EBS Snapshots\u003e in\n-- the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "describeSnapshots",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DescribeSnapshots",
                "query": [
                    {
                        "field": "_ds1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ds1SnapshotIds",
                        "locationName": "SnapshotId",
                        "type": "field"
                    },
                    {
                        "field": "_ds1OwnerIds",
                        "locationName": "Owner",
                        "type": "field"
                    },
                    {
                        "field": "_ds1RestorableByUserIds",
                        "locationName": "RestorableBy",
                        "type": "field"
                    },
                    {
                        "field": "_ds1Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ds1DryRun",
                        "name": "_ds1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ds1SnapshotIds",
                        "name": "_ds1SnapshotIds",
                        "shape": "SnapshotIdStringList",
                        "locationName": "SnapshotId",
                        "documentation": "-- | One or more snapshot IDs.\n--\n-- Default: Describes snapshots for which you have launch permissions.",
                        "typeExposed": "[Text]",
                        "type": "List \"SnapshotId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ds1OwnerIds",
                        "name": "_ds1OwnerIds",
                        "shape": "OwnerStringList",
                        "locationName": "Owner",
                        "documentation": "-- | Returns the snapshots owned by the specified owner. Multiple owners can be\n-- specified.",
                        "typeExposed": "[Text]",
                        "type": "List \"Owner\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ds1RestorableByUserIds",
                        "name": "_ds1RestorableByUserIds",
                        "shape": "RestorableByStringList",
                        "locationName": "RestorableBy",
                        "documentation": "-- | One or more AWS accounts IDs that can create volumes from the snapshot.",
                        "typeExposed": "[Text]",
                        "type": "List \"RestorableBy\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ds1Filters",
                        "name": "_ds1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'description' - A description of the snapshot.\n--\n-- 'owner-alias' - The AWS account alias (for example, 'amazon') that owns the\n-- snapshot.\n--\n-- 'owner-id' - The ID of the AWS account that owns the snapshot.\n--\n-- 'progress' - The progress of the snapshot, as a percentage (for example,\n-- 80%).\n--\n-- 'snapshot-id' - The snapshot ID.\n--\n-- 'start-time' - The time stamp when the snapshot was initiated.\n--\n-- 'status' - The status of the snapshot ('pending' | 'completed' | 'error').\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'volume-id' - The ID of the volume the snapshot is for.\n--\n-- 'volume-size' - The size of the volume, in GiB.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ds1DryRun",
                        "name": "_ds1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ds1Filters",
                        "name": "_ds1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'description' - A description of the snapshot.\n--\n-- 'owner-alias' - The AWS account alias (for example, 'amazon') that owns the\n-- snapshot.\n--\n-- 'owner-id' - The ID of the AWS account that owns the snapshot.\n--\n-- 'progress' - The progress of the snapshot, as a percentage (for example,\n-- 80%).\n--\n-- 'snapshot-id' - The snapshot ID.\n--\n-- 'start-time' - The time stamp when the snapshot was initiated.\n--\n-- 'status' - The status of the snapshot ('pending' | 'completed' | 'error').\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'volume-id' - The ID of the volume the snapshot is for.\n--\n-- 'volume-size' - The size of the volume, in GiB.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ds1OwnerIds",
                        "name": "_ds1OwnerIds",
                        "shape": "OwnerStringList",
                        "locationName": "Owner",
                        "documentation": "-- | Returns the snapshots owned by the specified owner. Multiple owners can be\n-- specified.",
                        "typeExposed": "[Text]",
                        "type": "List \"Owner\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ds1RestorableByUserIds",
                        "name": "_ds1RestorableByUserIds",
                        "shape": "RestorableByStringList",
                        "locationName": "RestorableBy",
                        "documentation": "-- | One or more AWS accounts IDs that can create volumes from the snapshot.",
                        "typeExposed": "[Text]",
                        "type": "List \"RestorableBy\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ds1SnapshotIds",
                        "name": "_ds1SnapshotIds",
                        "shape": "SnapshotIdStringList",
                        "locationName": "SnapshotId",
                        "documentation": "-- | One or more snapshot IDs.\n--\n-- Default: Describes snapshots for which you have launch permissions.",
                        "typeExposed": "[Text]",
                        "type": "List \"SnapshotId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeSpotDatafeedSubscriptionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "dsdsrSpotDatafeedSubscription",
                    "name": "_dsdsrSpotDatafeedSubscription",
                    "shape": "SpotDatafeedSubscription",
                    "locationName": "spotDatafeedSubscription",
                    "documentation": "-- | The Spot Instance datafeed subscription.",
                    "typeExposed": "Maybe SpotDatafeedSubscription",
                    "type": "Maybe SpotDatafeedSubscription"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeSpotDatafeedSubscriptionResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsdsrSpotDatafeedSubscription",
                        "name": "_dsdsrSpotDatafeedSubscription",
                        "shape": "SpotDatafeedSubscription",
                        "locationName": "spotDatafeedSubscription",
                        "documentation": "-- | The Spot Instance datafeed subscription.",
                        "typeExposed": "Maybe SpotDatafeedSubscription",
                        "type": "Maybe SpotDatafeedSubscription"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsdsrSpotDatafeedSubscription",
                        "name": "_dsdsrSpotDatafeedSubscription",
                        "shape": "SpotDatafeedSubscription",
                        "locationName": "spotDatafeedSubscription",
                        "documentation": "-- | The Spot Instance datafeed subscription.",
                        "typeExposed": "Maybe SpotDatafeedSubscription",
                        "type": "Maybe SpotDatafeedSubscription"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSpotDatafeedSubscription.html",
            "namespace": "Network.AWS.EC2.DescribeSpotDatafeedSubscription",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeSpotDatafeedSubscription",
            "method": "post",
            "documentation": "-- | Describes the datafeed for Spot Instances. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html SpotInstances\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "describeSpotDatafeedSubscription",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "dsdsDryRun",
                    "name": "_dsdsDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 7,
                "name": "DescribeSpotDatafeedSubscription",
                "query": [
                    {
                        "field": "_dsdsDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    }
                ],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsdsDryRun",
                        "name": "_dsdsDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsdsDryRun",
                        "name": "_dsdsDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeSpotInstanceRequestsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dsirrSpotInstanceRequests",
                    "name": "_dsirrSpotInstanceRequests",
                    "shape": "SpotInstanceRequestList",
                    "locationName": "spotInstanceRequestSet",
                    "documentation": "-- | One or more Spot Instance requests.",
                    "typeExposed": "[SpotInstanceRequest]",
                    "type": "List \"item\" SpotInstanceRequest"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeSpotInstanceRequestsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsirrSpotInstanceRequests",
                        "name": "_dsirrSpotInstanceRequests",
                        "shape": "SpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "-- | One or more Spot Instance requests.",
                        "typeExposed": "[SpotInstanceRequest]",
                        "type": "List \"item\" SpotInstanceRequest"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsirrSpotInstanceRequests",
                        "name": "_dsirrSpotInstanceRequests",
                        "shape": "SpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "-- | One or more Spot Instance requests.",
                        "typeExposed": "[SpotInstanceRequest]",
                        "type": "List \"item\" SpotInstanceRequest"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSpotInstanceRequests.html",
            "namespace": "Network.AWS.EC2.DescribeSpotInstanceRequests",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeSpotInstanceRequests",
            "method": "post",
            "documentation": "-- | Describes the Spot Instance requests that belong to your account. Spot\n-- Instances are instances that Amazon EC2 starts on your behalf when the\n-- maximum price that you specify exceeds the current Spot Price. Amazon EC2\n-- periodically sets the Spot Price based on available Spot Instance capacity\n-- and current Spot Instance requests. For more information about Spot\n-- Instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html Spot Instances\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- You can use 'DescribeSpotInstanceRequests' to find a running Spot Instance by\n-- examining the response. If the status of the Spot Instance is 'fulfilled', the\n-- instance ID appears in the response and contains the identifier of the\n-- instance. Alternatively, you can use 'DescribeInstances' with a filter to look\n-- for instances where the instance lifecycle is 'spot'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "describeSpotInstanceRequests",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "DescribeSpotInstanceRequests",
                "query": [
                    {
                        "field": "_dsirDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dsirSpotInstanceRequestIds",
                        "locationName": "SpotInstanceRequestId",
                        "type": "field"
                    },
                    {
                        "field": "_dsirFilters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 22,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsirDryRun",
                        "name": "_dsirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsirSpotInstanceRequestIds",
                        "name": "_dsirSpotInstanceRequestIds",
                        "shape": "SpotInstanceRequestIdList",
                        "locationName": "SpotInstanceRequestId",
                        "documentation": "-- | One or more Spot Instance request IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"SpotInstanceRequestId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsirFilters",
                        "name": "_dsirFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availability-zone-group' - The Availability Zone group.\n--\n-- 'create-time' - The time stamp when the Spot Instance request was created.\n--\n-- 'fault-code' - The fault code related to the request.\n--\n-- 'fault-message' - The fault message related to the request.\n--\n-- 'instance-id' - The ID of the instance that fulfilled the request.\n--\n-- 'launch-group' - The Spot Instance launch group.\n--\n-- 'launch.block-device-mapping.delete-on-termination' - Indicates whether the\n-- Amazon EBS volume is deleted on instance termination.\n--\n-- 'launch.block-device-mapping.device-name' - The device name for the Amazon\n-- EBS volume (for example, '/dev/sdh').\n--\n-- 'launch.block-device-mapping.snapshot-id' - The ID of the snapshot used for\n-- the Amazon EBS volume.\n--\n-- 'launch.block-device-mapping.volume-size' - The size of the Amazon EBS\n-- volume, in GiB.\n--\n-- 'launch.block-device-mapping.volume-type' - The type of the Amazon EBS\n-- volume ('gp2' | 'standard' | 'io1').\n--\n-- 'launch.group-id' - The security group for the instance.\n--\n-- 'launch.image-id' - The ID of the AMI.\n--\n-- 'launch.instance-type' - The type of instance (for example, 'm1.small').\n--\n-- 'launch.kernel-id' - The kernel ID.\n--\n-- 'launch.key-name' - The name of the key pair the instance launched with.\n--\n-- 'launch.monitoring-enabled' - Whether monitoring is enabled for the Spot\n-- Instance.\n--\n-- 'launch.ramdisk-id' - The RAM disk ID.\n--\n-- 'network-interface.network-interface-id' - The ID of the network interface.\n--\n-- 'network-interface.device-index' - The index of the device for the network\n-- interface attachment on the instance.\n--\n-- 'network-interface.subnet-id' - The ID of the subnet for the instance.\n--\n-- 'network-interface.description' - A description of the network interface.\n--\n-- 'network-interface.private-ip-address' - The primary private IP address of\n-- the network interface.\n--\n-- 'network-interface.delete-on-termination' - Indicates whether the network\n-- interface is deleted when the instance is terminated.\n--\n-- 'network-interface.group-id' - The ID of the security group associated with\n-- the network interface.\n--\n-- 'network-interface.group-name' - The name of the security group associated\n-- with the network interface.\n--\n-- 'network-interface.addresses.primary' - Indicates whether the IP address is\n-- the primary private IP address.\n--\n-- 'product-description' - The product description associated with the instance\n-- ('Linux/UNIX' | 'Windows').\n--\n-- 'spot-instance-request-id' - The Spot Instance request ID.\n--\n-- 'spot-price' - The maximum hourly price for any Spot Instance launched to\n-- fulfill the request.\n--\n-- 'state' - The state of the Spot Instance request ('open' | 'active' | 'closed' | 'cancelled' | 'failed'). Spot bid status information can help you track your Amazon EC2\n-- Spot Instance requests. For information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-bid-status.html Tracking Spot Requests with BidStatus Codes\u003e in the Amazon Elastic Compute Cloud User Guide.\n--\n-- 'status-code' - The short code describing the most recent evaluation of your\n-- Spot Instance request.\n--\n-- 'status-message' - The message explaining the status of the Spot Instance\n-- request.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'type' - The type of Spot Instance request ('one-time' | 'persistent').\n--\n-- 'launched-availability-zone' - The Availability Zone in which the bid is\n-- launched.\n--\n-- 'valid-from' - The start date of the request.\n--\n-- 'valid-until' - The end date of the request.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsirDryRun",
                        "name": "_dsirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsirFilters",
                        "name": "_dsirFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availability-zone-group' - The Availability Zone group.\n--\n-- 'create-time' - The time stamp when the Spot Instance request was created.\n--\n-- 'fault-code' - The fault code related to the request.\n--\n-- 'fault-message' - The fault message related to the request.\n--\n-- 'instance-id' - The ID of the instance that fulfilled the request.\n--\n-- 'launch-group' - The Spot Instance launch group.\n--\n-- 'launch.block-device-mapping.delete-on-termination' - Indicates whether the\n-- Amazon EBS volume is deleted on instance termination.\n--\n-- 'launch.block-device-mapping.device-name' - The device name for the Amazon\n-- EBS volume (for example, '/dev/sdh').\n--\n-- 'launch.block-device-mapping.snapshot-id' - The ID of the snapshot used for\n-- the Amazon EBS volume.\n--\n-- 'launch.block-device-mapping.volume-size' - The size of the Amazon EBS\n-- volume, in GiB.\n--\n-- 'launch.block-device-mapping.volume-type' - The type of the Amazon EBS\n-- volume ('gp2' | 'standard' | 'io1').\n--\n-- 'launch.group-id' - The security group for the instance.\n--\n-- 'launch.image-id' - The ID of the AMI.\n--\n-- 'launch.instance-type' - The type of instance (for example, 'm1.small').\n--\n-- 'launch.kernel-id' - The kernel ID.\n--\n-- 'launch.key-name' - The name of the key pair the instance launched with.\n--\n-- 'launch.monitoring-enabled' - Whether monitoring is enabled for the Spot\n-- Instance.\n--\n-- 'launch.ramdisk-id' - The RAM disk ID.\n--\n-- 'network-interface.network-interface-id' - The ID of the network interface.\n--\n-- 'network-interface.device-index' - The index of the device for the network\n-- interface attachment on the instance.\n--\n-- 'network-interface.subnet-id' - The ID of the subnet for the instance.\n--\n-- 'network-interface.description' - A description of the network interface.\n--\n-- 'network-interface.private-ip-address' - The primary private IP address of\n-- the network interface.\n--\n-- 'network-interface.delete-on-termination' - Indicates whether the network\n-- interface is deleted when the instance is terminated.\n--\n-- 'network-interface.group-id' - The ID of the security group associated with\n-- the network interface.\n--\n-- 'network-interface.group-name' - The name of the security group associated\n-- with the network interface.\n--\n-- 'network-interface.addresses.primary' - Indicates whether the IP address is\n-- the primary private IP address.\n--\n-- 'product-description' - The product description associated with the instance\n-- ('Linux/UNIX' | 'Windows').\n--\n-- 'spot-instance-request-id' - The Spot Instance request ID.\n--\n-- 'spot-price' - The maximum hourly price for any Spot Instance launched to\n-- fulfill the request.\n--\n-- 'state' - The state of the Spot Instance request ('open' | 'active' | 'closed' | 'cancelled' | 'failed'). Spot bid status information can help you track your Amazon EC2\n-- Spot Instance requests. For information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-bid-status.html Tracking Spot Requests with BidStatus Codes\u003e in the Amazon Elastic Compute Cloud User Guide.\n--\n-- 'status-code' - The short code describing the most recent evaluation of your\n-- Spot Instance request.\n--\n-- 'status-message' - The message explaining the status of the Spot Instance\n-- request.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'type' - The type of Spot Instance request ('one-time' | 'persistent').\n--\n-- 'launched-availability-zone' - The Availability Zone in which the bid is\n-- launched.\n--\n-- 'valid-from' - The start date of the request.\n--\n-- 'valid-until' - The end date of the request.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsirSpotInstanceRequestIds",
                        "name": "_dsirSpotInstanceRequestIds",
                        "shape": "SpotInstanceRequestIdList",
                        "locationName": "SpotInstanceRequestId",
                        "documentation": "-- | One or more Spot Instance request IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"SpotInstanceRequestId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 22,
                "ctor": "describeSpotPriceHistoryResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeSpotPriceHistoryResponse",
                "resultWrapper": null,
                "locationPad": 20,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsphrSpotPriceHistory",
                        "name": "_dsphrSpotPriceHistory",
                        "shape": "SpotPriceHistoryList",
                        "locationName": "spotPriceHistorySet",
                        "documentation": "-- | The historical Spot Prices.",
                        "typeExposed": "[SpotPrice]",
                        "type": "List \"item\" SpotPrice"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphrNextToken",
                        "name": "_dsphrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The string marking the next set of results. This is empty if there are no\n-- more results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphrNextToken",
                        "name": "_dsphrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The string marking the next set of results. This is empty if there are no\n-- more results.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsphrSpotPriceHistory",
                        "name": "_dsphrSpotPriceHistory",
                        "shape": "SpotPriceHistoryList",
                        "locationName": "spotPriceHistorySet",
                        "documentation": "-- | The historical Spot Prices.",
                        "typeExposed": "[SpotPrice]",
                        "type": "List \"item\" SpotPrice"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSpotPriceHistory.html",
            "namespace": "Network.AWS.EC2.DescribeSpotPriceHistory",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": {
                "token": {
                    "input": "dsphNextToken",
                    "outputRequired": false,
                    "output": "dsphrNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dsphrSpotPriceHistory"
            },
            "name": "DescribeSpotPriceHistory",
            "method": "post",
            "documentation": "-- | Describes the Spot Price history. Spot Instances are instances that Amazon\n-- EC2 starts on your behalf when the maximum price that you specify exceeds the\n-- current Spot Price. Amazon EC2 periodically sets the Spot Price based on\n-- available Spot Instance capacity and current Spot Instance requests. For more\n-- information about Spot Instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html Spot Instances\u003e in the /Amazon ElasticCompute Cloud User Guide/.\n--\n-- When you specify an Availability Zone, this operation describes the price\n-- history for the specified Availability Zone with the most recent set of\n-- prices listed first. If you don't specify an Availability Zone, you get the\n-- prices across all Availability Zones, starting with the most recent set.\n-- However, if you're using an API version earlier than 2011-05-15, you get the\n-- lowest price across the region for the specified time period. The prices\n-- returned are listed in chronological order, from the oldest to the most\n-- recent.\n--\n-- When you specify the start and end time options, this operation returns two\n-- pieces of data: the prices of the instance types within the time range that\n-- you specified and the time when the price changed. The price is valid within\n-- the time period that you specified; the response merely indicates the last\n-- time that the price changed.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 24,
                "ctor": "describeSpotPriceHistory",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "DescribeSpotPriceHistory",
                "query": [
                    {
                        "field": "_dsphDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dsphStartTime",
                        "locationName": "startTime",
                        "type": "field"
                    },
                    {
                        "field": "_dsphEndTime",
                        "locationName": "endTime",
                        "type": "field"
                    },
                    {
                        "field": "_dsphInstanceTypes",
                        "locationName": "InstanceType",
                        "type": "field"
                    },
                    {
                        "field": "_dsphProductDescriptions",
                        "locationName": "ProductDescription",
                        "type": "field"
                    },
                    {
                        "field": "_dsphFilters",
                        "locationName": "Filter",
                        "type": "field"
                    },
                    {
                        "field": "_dsphAvailabilityZone",
                        "locationName": "availabilityZone",
                        "type": "field"
                    },
                    {
                        "field": "_dsphMaxResults",
                        "locationName": "maxResults",
                        "type": "field"
                    },
                    {
                        "field": "_dsphNextToken",
                        "locationName": "nextToken",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphDryRun",
                        "name": "_dsphDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphStartTime",
                        "name": "_dsphStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "-- | The start date and time of the Spot Price history data.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphEndTime",
                        "name": "_dsphEndTime",
                        "shape": "DateTime",
                        "locationName": "endTime",
                        "documentation": "-- | The end date and time of the Spot Price history data.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsphInstanceTypes",
                        "name": "_dsphInstanceTypes",
                        "shape": "InstanceTypeList",
                        "locationName": "InstanceType",
                        "documentation": "-- | One or more instance types.",
                        "typeExposed": "[InstanceType]",
                        "type": "List \"InstanceType\" InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsphProductDescriptions",
                        "name": "_dsphProductDescriptions",
                        "shape": "ProductDescriptionList",
                        "locationName": "ProductDescription",
                        "documentation": "-- | One or more basic product descriptions.",
                        "typeExposed": "[Text]",
                        "type": "List \"ProductDescription\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsphFilters",
                        "name": "_dsphFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availability-zone' - The Availability Zone for which prices should be\n-- returned.\n--\n-- 'instance-type' - The type of instance (for example, 'm1.small').\n--\n-- 'product-description' - The product description for the Spot Price ('Linux/UNIX' | 'SUSE Linux' | 'Windows' | 'Linux/UNIX (Amazon VPC)' | 'SUSE Linux (Amazon VPC)' | 'Windows (Amazon VPC)').\n--\n-- 'spot-price' - The Spot Price. The value must match exactly (or use\n-- wildcards; greater than or less than comparison is not supported).\n--\n-- 'timestamp' - The timestamp of the Spot Price history (for example,\n-- 2010-08-16T05:06:11.000Z). You can use wildcards (* and ?). Greater than or\n-- less than comparison is not supported.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphAvailabilityZone",
                        "name": "_dsphAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphMaxResults",
                        "name": "_dsphMaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "-- | The number of rows to return.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphNextToken",
                        "name": "_dsphNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The next set of rows to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphAvailabilityZone",
                        "name": "_dsphAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphDryRun",
                        "name": "_dsphDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphEndTime",
                        "name": "_dsphEndTime",
                        "shape": "DateTime",
                        "locationName": "endTime",
                        "documentation": "-- | The end date and time of the Spot Price history data.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsphFilters",
                        "name": "_dsphFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availability-zone' - The Availability Zone for which prices should be\n-- returned.\n--\n-- 'instance-type' - The type of instance (for example, 'm1.small').\n--\n-- 'product-description' - The product description for the Spot Price ('Linux/UNIX' | 'SUSE Linux' | 'Windows' | 'Linux/UNIX (Amazon VPC)' | 'SUSE Linux (Amazon VPC)' | 'Windows (Amazon VPC)').\n--\n-- 'spot-price' - The Spot Price. The value must match exactly (or use\n-- wildcards; greater than or less than comparison is not supported).\n--\n-- 'timestamp' - The timestamp of the Spot Price history (for example,\n-- 2010-08-16T05:06:11.000Z). You can use wildcards (* and ?). Greater than or\n-- less than comparison is not supported.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsphInstanceTypes",
                        "name": "_dsphInstanceTypes",
                        "shape": "InstanceTypeList",
                        "locationName": "InstanceType",
                        "documentation": "-- | One or more instance types.",
                        "typeExposed": "[InstanceType]",
                        "type": "List \"InstanceType\" InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphMaxResults",
                        "name": "_dsphMaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "-- | The number of rows to return.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphNextToken",
                        "name": "_dsphNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The next set of rows to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsphProductDescriptions",
                        "name": "_dsphProductDescriptions",
                        "shape": "ProductDescriptionList",
                        "locationName": "ProductDescription",
                        "documentation": "-- | One or more basic product descriptions.",
                        "typeExposed": "[Text]",
                        "type": "List \"ProductDescription\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsphStartTime",
                        "name": "_dsphStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "-- | The start date and time of the Spot Price history data.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeSubnetsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dsrSubnets",
                    "name": "_dsrSubnets",
                    "shape": "SubnetList",
                    "locationName": "subnetSet",
                    "documentation": "-- | Information about one or more subnets.",
                    "typeExposed": "[Subnet]",
                    "type": "List \"item\" Subnet"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeSubnetsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsrSubnets",
                        "name": "_dsrSubnets",
                        "shape": "SubnetList",
                        "locationName": "subnetSet",
                        "documentation": "-- | Information about one or more subnets.",
                        "typeExposed": "[Subnet]",
                        "type": "List \"item\" Subnet"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsrSubnets",
                        "name": "_dsrSubnets",
                        "shape": "SubnetList",
                        "locationName": "subnetSet",
                        "documentation": "-- | Information about one or more subnets.",
                        "typeExposed": "[Subnet]",
                        "type": "List \"item\" Subnet"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeSubnets.html",
            "namespace": "Network.AWS.EC2.DescribeSubnets",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeSubnets",
            "method": "post",
            "documentation": "-- | Describes one or more of your subnets.\n--\n-- For more information about subnets, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html Your VPC and Subnets\u003e in the /AmazonVirtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "describeSubnets",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DescribeSubnets",
                "query": [
                    {
                        "field": "_dsDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dsSubnetIds",
                        "locationName": "SubnetId",
                        "type": "field"
                    },
                    {
                        "field": "_dsFilters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsDryRun",
                        "name": "_dsDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsSubnetIds",
                        "name": "_dsSubnetIds",
                        "shape": "SubnetIdStringList",
                        "locationName": "SubnetId",
                        "documentation": "-- | One or more subnet IDs.\n--\n-- Default: Describes all your subnets.",
                        "typeExposed": "[Text]",
                        "type": "List \"SubnetId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsFilters",
                        "name": "_dsFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availabilityZone' - The Availability Zone for the subnet. You can also use 'availability-zone' as the filter name.\n--\n-- 'available-ip-address-count' - The number of IP addresses in the subnet that\n-- are available.\n--\n-- 'cidrBlock' - The CIDR block of the subnet. The CIDR block you specify must\n-- exactly match the subnet's CIDR block for information to be returned for the\n-- subnet. You can also use 'cidr' or 'cidr-block' as the filter names.\n--\n-- 'defaultForAz' - Indicates whether this is the default subnet for the\n-- Availability Zone. You can also use 'default-for-az' as the filter name.\n--\n-- 'state' - The state of the subnet ('pending' | 'available').\n--\n-- 'subnet-id' - The ID of the subnet.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-id' - The ID of the VPC for the subnet.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dsDryRun",
                        "name": "_dsDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsFilters",
                        "name": "_dsFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'availabilityZone' - The Availability Zone for the subnet. You can also use 'availability-zone' as the filter name.\n--\n-- 'available-ip-address-count' - The number of IP addresses in the subnet that\n-- are available.\n--\n-- 'cidrBlock' - The CIDR block of the subnet. The CIDR block you specify must\n-- exactly match the subnet's CIDR block for information to be returned for the\n-- subnet. You can also use 'cidr' or 'cidr-block' as the filter names.\n--\n-- 'defaultForAz' - Indicates whether this is the default subnet for the\n-- Availability Zone. You can also use 'default-for-az' as the filter name.\n--\n-- 'state' - The state of the subnet ('pending' | 'available').\n--\n-- 'subnet-id' - The ID of the subnet.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-id' - The ID of the VPC for the subnet.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dsSubnetIds",
                        "name": "_dsSubnetIds",
                        "shape": "SubnetIdStringList",
                        "locationName": "SubnetId",
                        "documentation": "-- | One or more subnet IDs.\n--\n-- Default: Describes all your subnets.",
                        "typeExposed": "[Text]",
                        "type": "List \"SubnetId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 13,
                "ctor": "describeTagsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeTagsResponse",
                "resultWrapper": null,
                "locationPad": 10,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dtrTags",
                        "name": "_dtrTags",
                        "shape": "TagDescriptionList",
                        "locationName": "tagSet",
                        "documentation": "-- | A list of tags.",
                        "typeExposed": "[TagDescription]",
                        "type": "List \"item\" TagDescription"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dtrNextToken",
                        "name": "_dtrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token to use when requesting the next set of items. If there are no\n-- additional items to return, the string is empty.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dtrNextToken",
                        "name": "_dtrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token to use when requesting the next set of items. If there are no\n-- additional items to return, the string is empty.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dtrTags",
                        "name": "_dtrTags",
                        "shape": "TagDescriptionList",
                        "locationName": "tagSet",
                        "documentation": "-- | A list of tags.",
                        "typeExposed": "[TagDescription]",
                        "type": "List \"item\" TagDescription"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeTags.html",
            "namespace": "Network.AWS.EC2.DescribeTags",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": {
                "token": {
                    "input": "dtNextToken",
                    "outputRequired": false,
                    "output": "dtrNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dtrTags"
            },
            "name": "DescribeTags",
            "method": "post",
            "documentation": "-- | Describes one or more of the tags for your EC2 resources.\n--\n-- For more information about tags, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html Tagging Your Resources\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "describeTags",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DescribeTags",
                "query": [
                    {
                        "field": "_dtDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dtFilters",
                        "locationName": "Filter",
                        "type": "field"
                    },
                    {
                        "field": "_dtMaxResults",
                        "locationName": "maxResults",
                        "type": "field"
                    },
                    {
                        "field": "_dtNextToken",
                        "locationName": "nextToken",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dtDryRun",
                        "name": "_dtDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dtFilters",
                        "name": "_dtFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'key' - The tag key.\n--\n-- 'resource-id' - The resource ID.\n--\n-- 'resource-type' - The resource type ('customer-gateway' | 'dhcp-options' | 'image'\n-- | 'instance' | 'internet-gateway' | 'network-acl' | 'network-interface' | 'reserved-instances' | 'route-table' | 'security-group' | 'snapshot' | 'spot-instances-request' | 'subnet'\n-- | 'volume' | 'vpc' | 'vpn-connection' | 'vpn-gateway').\n--\n-- 'value' - The tag value.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dtMaxResults",
                        "name": "_dtMaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "-- | The maximum number of items to return for this call. The call also returns a\n-- token that you can specify in a subsequent call to get the next set of\n-- results. If the value is greater than 1000, we return only 1000 items.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dtNextToken",
                        "name": "_dtNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token for the next set of items to return. (You received this token from\n-- a prior call.)",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dtDryRun",
                        "name": "_dtDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dtFilters",
                        "name": "_dtFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'key' - The tag key.\n--\n-- 'resource-id' - The resource ID.\n--\n-- 'resource-type' - The resource type ('customer-gateway' | 'dhcp-options' | 'image'\n-- | 'instance' | 'internet-gateway' | 'network-acl' | 'network-interface' | 'reserved-instances' | 'route-table' | 'security-group' | 'snapshot' | 'spot-instances-request' | 'subnet'\n-- | 'volume' | 'vpc' | 'vpn-connection' | 'vpn-gateway').\n--\n-- 'value' - The tag value.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dtMaxResults",
                        "name": "_dtMaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "-- | The maximum number of items to return for this call. The call also returns a\n-- token that you can specify in a subsequent call to get the next set of\n-- results. If the value is greater than 1000, we return only 1000 items.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dtNextToken",
                        "name": "_dtNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The token for the next set of items to return. (You received this token from\n-- a prior call.)",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 17,
                "ctor": "describeVolumeAttributeResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeVolumeAttributeResponse",
                "resultWrapper": null,
                "locationPad": 13,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvarVolumeId",
                        "name": "_dvarVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvarAutoEnableIO",
                        "name": "_dvarAutoEnableIO",
                        "shape": "AttributeBooleanValue",
                        "locationName": "autoEnableIO",
                        "documentation": "-- | The state of 'autoEnableIO' attribute.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvarProductCodes",
                        "name": "_dvarProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | A list of product codes.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvarAutoEnableIO",
                        "name": "_dvarAutoEnableIO",
                        "shape": "AttributeBooleanValue",
                        "locationName": "autoEnableIO",
                        "documentation": "-- | The state of 'autoEnableIO' attribute.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvarProductCodes",
                        "name": "_dvarProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "-- | A list of product codes.",
                        "typeExposed": "[ProductCode]",
                        "type": "List \"item\" ProductCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvarVolumeId",
                        "name": "_dvarVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVolumeAttribute.html",
            "namespace": "Network.AWS.EC2.DescribeVolumeAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeVolumeAttribute",
            "method": "post",
            "documentation": "-- | Describes the specified attribute of the specified volume. You can specify\n-- only one attribute at a time.\n--\n-- For more information about Amazon EBS volumes, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html Amazon EBS Volumes\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "describeVolumeAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvaVolumeId",
                        "name": "_dvaVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DescribeVolumeAttribute",
                "query": [
                    {
                        "field": "_dvaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dvaVolumeId",
                        "locationName": "VolumeId",
                        "type": "field"
                    },
                    {
                        "field": "_dvaAttribute",
                        "locationName": "Attribute",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvaDryRun",
                        "name": "_dvaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvaAttribute",
                        "name": "_dvaAttribute",
                        "shape": "VolumeAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The instance attribute.",
                        "typeExposed": "Maybe VolumeAttributeName",
                        "type": "Maybe VolumeAttributeName"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvaAttribute",
                        "name": "_dvaAttribute",
                        "shape": "VolumeAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The instance attribute.",
                        "typeExposed": "Maybe VolumeAttributeName",
                        "type": "Maybe VolumeAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvaDryRun",
                        "name": "_dvaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvaVolumeId",
                        "name": "_dvaVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "describeVolumeStatusResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeVolumeStatusResponse",
                "resultWrapper": null,
                "locationPad": 16,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvsrVolumeStatuses",
                        "name": "_dvsrVolumeStatuses",
                        "shape": "VolumeStatusList",
                        "locationName": "volumeStatusSet",
                        "documentation": "-- | A list of volumes.",
                        "typeExposed": "[VolumeStatusItem]",
                        "type": "List \"item\" VolumeStatusItem"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvsrNextToken",
                        "name": "_dvsrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The next paginated set of results to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvsrNextToken",
                        "name": "_dvsrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The next paginated set of results to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvsrVolumeStatuses",
                        "name": "_dvsrVolumeStatuses",
                        "shape": "VolumeStatusList",
                        "locationName": "volumeStatusSet",
                        "documentation": "-- | A list of volumes.",
                        "typeExposed": "[VolumeStatusItem]",
                        "type": "List \"item\" VolumeStatusItem"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVolumeStatus.html",
            "namespace": "Network.AWS.EC2.DescribeVolumeStatus",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": {
                "token": {
                    "input": "dvsNextToken",
                    "outputRequired": false,
                    "output": "dvsrNextToken",
                    "inputRequired": false
                },
                "type": "next",
                "resultKey": "dvsrVolumeStatuses"
            },
            "name": "DescribeVolumeStatus",
            "method": "post",
            "documentation": "-- | Describes the status of the specified volumes. Volume status provides the\n-- result of the checks performed on your volumes to determine events that can\n-- impair the performance of your volumes. The performance of a volume can be\n-- affected if an issue occurs on the volume's underlying host. If the volume's\n-- underlying host experiences a power outage or system issue, after the system\n-- is restored, there could be data inconsistencies on the volume. Volume events\n-- notify you if this occurs. Volume actions notify you if any action needs to\n-- be taken in response to the event.\n--\n-- The 'DescribeVolumeStatus' operation provides the following information about\n-- the specified volumes:\n--\n-- /Status/: Reflects the current status of the volume. The possible values are 'ok'\n-- , 'impaired' , 'warning', or 'insufficient-data'. If all checks pass, the overall\n-- status of the volume is 'ok'. If the check fails, the overall status is 'impaired'\n-- . If the status is 'insufficient-data', then the checks may still be taking\n-- place on your volume at the time. We recommend that you retry the request.\n-- For more information on volume status, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html Monitoring the Status of YourVolumes\u003e.\n--\n-- /Events/: Reflect the cause of a volume status and may require you to take\n-- action. For example, if your volume returns an 'impaired' status, then the\n-- volume event might be 'potential-data-inconsistency'. This means that your\n-- volume has been affected by an issue with the underlying host, has all I/O\n-- operations disabled, and may have inconsistent data.\n--\n-- /Actions/: Reflect the actions you may have to take in response to an event.\n-- For example, if the status of the volume is 'impaired' and the volume event\n-- shows 'potential-data-inconsistency', then the action shows 'enable-volume-io'.\n-- This means that you may want to enable the I/O operations for the volume by\n-- calling the 'EnableVolumeIO' action and then check the volume for data\n-- consistency.\n--\n-- Volume status is based on the volume status checks, and does not reflect\n-- the volume state. Therefore, volume status does not indicate volumes in the 'error' state (for example, when a volume is incapable of accepting I/O.)\n--\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "describeVolumeStatus",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DescribeVolumeStatus",
                "query": [
                    {
                        "field": "_dvsDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dvsVolumeIds",
                        "locationName": "VolumeId",
                        "type": "field"
                    },
                    {
                        "field": "_dvsFilters",
                        "locationName": "Filter",
                        "type": "field"
                    },
                    {
                        "field": "_dvsNextToken",
                        "locationName": "NextToken",
                        "type": "field"
                    },
                    {
                        "field": "_dvsMaxResults",
                        "locationName": "MaxResults",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvsDryRun",
                        "name": "_dvsDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvsVolumeIds",
                        "name": "_dvsVolumeIds",
                        "shape": "VolumeIdStringList",
                        "locationName": "VolumeId",
                        "documentation": "-- | One or more volume IDs.\n--\n-- Default: Describes all your volumes.",
                        "typeExposed": "[Text]",
                        "type": "List \"VolumeId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvsFilters",
                        "name": "_dvsFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'action.code' - The action code for the event (for example, 'enable-volume-io').\n--\n--\n-- 'action.description' - A description of the action.\n--\n-- 'action.event-id' - The event ID associated with the action.\n--\n-- 'availability-zone' - The Availability Zone of the instance.\n--\n-- 'event.description' - A description of the event.\n--\n-- 'event.event-id' - The event ID.\n--\n-- 'event.event-type' - The event type (for 'io-enabled': 'passed' | 'failed'; for 'io-performance': 'io-performance:degraded' | 'io-performance:severely-degraded' | 'io-performance:stalled').\n--\n-- 'event.not-after' - The latest end time for the event.\n--\n-- 'event.not-before' - The earliest start time for the event.\n--\n-- 'volume-status.details-name' - The cause for 'volume-status.status' ('io-enabled'\n-- | 'io-performance').\n--\n-- 'volume-status.details-status' - The status of 'volume-status.details-name'\n-- (for 'io-enabled': 'passed' | 'failed'; for 'io-performance': 'normal' | 'degraded' | 'severely-degraded' | 'stalled').\n--\n-- 'volume-status.status' - The status of the volume ('ok' | 'impaired' | 'warning' | 'insufficient-data').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvsNextToken",
                        "name": "_dvsNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | The next paginated set of results to return using the pagination token\n-- returned by a previous call.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvsMaxResults",
                        "name": "_dvsMaxResults",
                        "shape": "Integer",
                        "locationName": "MaxResults",
                        "documentation": "-- | The maximum number of paginated volume items per response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvsDryRun",
                        "name": "_dvsDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvsFilters",
                        "name": "_dvsFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'action.code' - The action code for the event (for example, 'enable-volume-io').\n--\n--\n-- 'action.description' - A description of the action.\n--\n-- 'action.event-id' - The event ID associated with the action.\n--\n-- 'availability-zone' - The Availability Zone of the instance.\n--\n-- 'event.description' - A description of the event.\n--\n-- 'event.event-id' - The event ID.\n--\n-- 'event.event-type' - The event type (for 'io-enabled': 'passed' | 'failed'; for 'io-performance': 'io-performance:degraded' | 'io-performance:severely-degraded' | 'io-performance:stalled').\n--\n-- 'event.not-after' - The latest end time for the event.\n--\n-- 'event.not-before' - The earliest start time for the event.\n--\n-- 'volume-status.details-name' - The cause for 'volume-status.status' ('io-enabled'\n-- | 'io-performance').\n--\n-- 'volume-status.details-status' - The status of 'volume-status.details-name'\n-- (for 'io-enabled': 'passed' | 'failed'; for 'io-performance': 'normal' | 'degraded' | 'severely-degraded' | 'stalled').\n--\n-- 'volume-status.status' - The status of the volume ('ok' | 'impaired' | 'warning' | 'insufficient-data').\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvsMaxResults",
                        "name": "_dvsMaxResults",
                        "shape": "Integer",
                        "locationName": "MaxResults",
                        "documentation": "-- | The maximum number of paginated volume items per response.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvsNextToken",
                        "name": "_dvsNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "-- | The next paginated set of results to return using the pagination token\n-- returned by a previous call.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvsVolumeIds",
                        "name": "_dvsVolumeIds",
                        "shape": "VolumeIdStringList",
                        "locationName": "VolumeId",
                        "documentation": "-- | One or more volume IDs.\n--\n-- Default: Describes all your volumes.",
                        "typeExposed": "[Text]",
                        "type": "List \"VolumeId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 13,
                "ctor": "describeVolumesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeVolumesResponse",
                "resultWrapper": null,
                "locationPad": 10,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvrVolumes",
                        "name": "_dvrVolumes",
                        "shape": "VolumeList",
                        "locationName": "volumeSet",
                        "documentation": null,
                        "typeExposed": "[Volume]",
                        "type": "List \"item\" Volume"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrNextToken",
                        "name": "_dvrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The 'NextToken' value to include in a future 'DescribeVolumes' request. When the\n-- results of a 'DescribeVolumes' request exceed 'MaxResults', this value can be\n-- used to retrieve the next page of results. This value is 'null' when there are\n-- no more results to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrNextToken",
                        "name": "_dvrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The 'NextToken' value to include in a future 'DescribeVolumes' request. When the\n-- results of a 'DescribeVolumes' request exceed 'MaxResults', this value can be\n-- used to retrieve the next page of results. This value is 'null' when there are\n-- no more results to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvrVolumes",
                        "name": "_dvrVolumes",
                        "shape": "VolumeList",
                        "locationName": "volumeSet",
                        "documentation": null,
                        "typeExposed": "[Volume]",
                        "type": "List \"item\" Volume"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVolumes.html",
            "namespace": "Network.AWS.EC2.DescribeVolumes",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeVolumes",
            "method": "post",
            "documentation": "-- | Describes the specified Amazon EBS volumes.\n--\n-- If you are describing a long list of volumes, you can paginate the output to\n-- make the list more manageable. The 'MaxResults' parameter sets the maximum\n-- number of results returned in a single page. If the list of results exceeds\n-- your 'MaxResults' value, then that number of results is returned along with a 'NextToken' value that can be passed to a subsequent 'DescribeVolumes' request to retrieve\n-- the remaining results.\n--\n-- For more information about Amazon EBS volumes, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html Amazon EBS Volumes\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "describeVolumes",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DescribeVolumes",
                "query": [
                    {
                        "field": "_dv2DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dv2VolumeIds",
                        "locationName": "VolumeId",
                        "type": "field"
                    },
                    {
                        "field": "_dv2Filters",
                        "locationName": "Filter",
                        "type": "field"
                    },
                    {
                        "field": "_dv2NextToken",
                        "locationName": "nextToken",
                        "type": "field"
                    },
                    {
                        "field": "_dv2MaxResults",
                        "locationName": "maxResults",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv2DryRun",
                        "name": "_dv2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dv2VolumeIds",
                        "name": "_dv2VolumeIds",
                        "shape": "VolumeIdStringList",
                        "locationName": "VolumeId",
                        "documentation": "-- | One or more volume IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"VolumeId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dv2Filters",
                        "name": "_dv2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'attachment.attach-time' - The time stamp when the attachment initiated.\n--\n-- 'attachment.delete-on-termination' - Whether the volume is deleted on\n-- instance termination.\n--\n-- 'attachment.device' - The device name that is exposed to the instance (for\n-- example, '/dev/sda1').\n--\n-- 'attachment.instance-id' - The ID of the instance the volume is attached to.\n--\n-- 'attachment.status' - The attachment state ('attaching' | 'attached' | 'detaching'\n-- | 'detached').\n--\n-- 'availability-zone' - The Availability Zone in which the volume was created.\n--\n-- 'create-time' - The time stamp when the volume was created.\n--\n-- 'encrypted' - The encryption status of the volume.\n--\n-- 'size' - The size of the volume, in GiB.\n--\n-- 'snapshot-id' - The snapshot from which the volume was created.\n--\n-- 'status' - The status of the volume ('creating' | 'available' | 'in-use' | 'deleting'\n-- | 'deleted' | 'error').\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'volume-id' - The volume ID.\n--\n-- 'volume-type' - The Amazon EBS volume type. This can be 'gp2' for General\n-- Purpose (SSD) volumes, 'io1' for Provisioned IOPS (SSD) volumes, or 'standard'\n-- for Magnetic volumes.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv2NextToken",
                        "name": "_dv2NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The 'NextToken' value returned from a previous paginated 'DescribeVolumes'\n-- request where 'MaxResults' was used and the results exceeded the value of that\n-- parameter. Pagination continues from the end of the previous results that\n-- returned the 'NextToken' value. This value is 'null' when there are no more\n-- results to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv2MaxResults",
                        "name": "_dv2MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "-- | The maximum number of volume results returned by 'DescribeVolumes' in paginated\n-- output. When this parameter is used, 'DescribeVolumes' only returns 'MaxResults'\n-- results in a single page along with a 'NextToken' response element. The\n-- remaining results of the initial request can be seen by sending another 'DescribeVolumes' request with the returned 'NextToken' value. This value can be between 5 and\n-- 1000; if 'MaxResults' is given a value larger than 1000, only 1000 results are\n-- returned. If this parameter is not used, then 'DescribeVolumes' returns all\n-- results.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv2DryRun",
                        "name": "_dv2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dv2Filters",
                        "name": "_dv2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'attachment.attach-time' - The time stamp when the attachment initiated.\n--\n-- 'attachment.delete-on-termination' - Whether the volume is deleted on\n-- instance termination.\n--\n-- 'attachment.device' - The device name that is exposed to the instance (for\n-- example, '/dev/sda1').\n--\n-- 'attachment.instance-id' - The ID of the instance the volume is attached to.\n--\n-- 'attachment.status' - The attachment state ('attaching' | 'attached' | 'detaching'\n-- | 'detached').\n--\n-- 'availability-zone' - The Availability Zone in which the volume was created.\n--\n-- 'create-time' - The time stamp when the volume was created.\n--\n-- 'encrypted' - The encryption status of the volume.\n--\n-- 'size' - The size of the volume, in GiB.\n--\n-- 'snapshot-id' - The snapshot from which the volume was created.\n--\n-- 'status' - The status of the volume ('creating' | 'available' | 'in-use' | 'deleting'\n-- | 'deleted' | 'error').\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'volume-id' - The volume ID.\n--\n-- 'volume-type' - The Amazon EBS volume type. This can be 'gp2' for General\n-- Purpose (SSD) volumes, 'io1' for Provisioned IOPS (SSD) volumes, or 'standard'\n-- for Magnetic volumes.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv2MaxResults",
                        "name": "_dv2MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "-- | The maximum number of volume results returned by 'DescribeVolumes' in paginated\n-- output. When this parameter is used, 'DescribeVolumes' only returns 'MaxResults'\n-- results in a single page along with a 'NextToken' response element. The\n-- remaining results of the initial request can be seen by sending another 'DescribeVolumes' request with the returned 'NextToken' value. This value can be between 5 and\n-- 1000; if 'MaxResults' is given a value larger than 1000, only 1000 results are\n-- returned. If this parameter is not used, then 'DescribeVolumes' returns all\n-- results.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv2NextToken",
                        "name": "_dv2NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "-- | The 'NextToken' value returned from a previous paginated 'DescribeVolumes'\n-- request where 'MaxResults' was used and the results exceeded the value of that\n-- parameter. Pagination continues from the end of the previous results that\n-- returned the 'NextToken' value. This value is 'null' when there are no more\n-- results to return.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dv2VolumeIds",
                        "name": "_dv2VolumeIds",
                        "shape": "VolumeIdStringList",
                        "locationName": "VolumeId",
                        "documentation": "-- | One or more volume IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"VolumeId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 23,
                "ctor": "describeVpcAttributeResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeVpcAttributeResponse",
                "resultWrapper": null,
                "locationPad": 19,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvarVpcId",
                        "name": "_dvarVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvarEnableDnsSupport",
                        "name": "_dvarEnableDnsSupport",
                        "shape": "AttributeBooleanValue",
                        "locationName": "enableDnsSupport",
                        "documentation": "-- | Indicates whether DNS resolution is enabled for the VPC. If this attribute is 'true', the Amazon DNS server resolves DNS hostnames for your instances to\n-- their corresponding IP addresses; otherwise, it does not.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvarEnableDnsHostnames",
                        "name": "_dvarEnableDnsHostnames",
                        "shape": "AttributeBooleanValue",
                        "locationName": "enableDnsHostnames",
                        "documentation": "-- | Indicates whether the instances launched in the VPC get DNS hostnames. If\n-- this attribute is 'true', instances in the VPC get DNS hostnames; otherwise,\n-- they do not.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvarEnableDnsHostnames",
                        "name": "_dvarEnableDnsHostnames",
                        "shape": "AttributeBooleanValue",
                        "locationName": "enableDnsHostnames",
                        "documentation": "-- | Indicates whether the instances launched in the VPC get DNS hostnames. If\n-- this attribute is 'true', instances in the VPC get DNS hostnames; otherwise,\n-- they do not.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvarEnableDnsSupport",
                        "name": "_dvarEnableDnsSupport",
                        "shape": "AttributeBooleanValue",
                        "locationName": "enableDnsSupport",
                        "documentation": "-- | Indicates whether DNS resolution is enabled for the VPC. If this attribute is 'true', the Amazon DNS server resolves DNS hostnames for your instances to\n-- their corresponding IP addresses; otherwise, it does not.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvarVpcId",
                        "name": "_dvarVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpcAttribute.html",
            "namespace": "Network.AWS.EC2.DescribeVpcAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeVpcAttribute",
            "method": "post",
            "documentation": "-- | Describes the specified attribute of the specified VPC. You can specify only\n-- one attribute at a time.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "describeVpcAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dva1VpcId",
                        "name": "_dva1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DescribeVpcAttribute",
                "query": [
                    {
                        "field": "_dva1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dva1VpcId",
                        "locationName": "VpcId",
                        "type": "field"
                    },
                    {
                        "field": "_dva1Attribute",
                        "locationName": "Attribute",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dva1DryRun",
                        "name": "_dva1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dva1Attribute",
                        "name": "_dva1Attribute",
                        "shape": "VpcAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The VPC attribute.",
                        "typeExposed": "Maybe VpcAttributeName",
                        "type": "Maybe VpcAttributeName"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dva1Attribute",
                        "name": "_dva1Attribute",
                        "shape": "VpcAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The VPC attribute.",
                        "typeExposed": "Maybe VpcAttributeName",
                        "type": "Maybe VpcAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dva1DryRun",
                        "name": "_dva1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dva1VpcId",
                        "name": "_dva1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeVpcPeeringConnectionsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dvpcrVpcPeeringConnections",
                    "name": "_dvpcrVpcPeeringConnections",
                    "shape": "VpcPeeringConnectionList",
                    "locationName": "vpcPeeringConnectionSet",
                    "documentation": "-- | Information about the VPC peering connections.",
                    "typeExposed": "[VpcPeeringConnection]",
                    "type": "List \"item\" VpcPeeringConnection"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeVpcPeeringConnectionsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvpcrVpcPeeringConnections",
                        "name": "_dvpcrVpcPeeringConnections",
                        "shape": "VpcPeeringConnectionList",
                        "locationName": "vpcPeeringConnectionSet",
                        "documentation": "-- | Information about the VPC peering connections.",
                        "typeExposed": "[VpcPeeringConnection]",
                        "type": "List \"item\" VpcPeeringConnection"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvpcrVpcPeeringConnections",
                        "name": "_dvpcrVpcPeeringConnections",
                        "shape": "VpcPeeringConnectionList",
                        "locationName": "vpcPeeringConnectionSet",
                        "documentation": "-- | Information about the VPC peering connections.",
                        "typeExposed": "[VpcPeeringConnection]",
                        "type": "List \"item\" VpcPeeringConnection"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpcPeeringConnections.html",
            "namespace": "Network.AWS.EC2.DescribeVpcPeeringConnections",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeVpcPeeringConnections",
            "method": "post",
            "documentation": "-- | Describes one or more of your VPC peering connections.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 29,
                "ctor": "describeVpcPeeringConnections",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "DescribeVpcPeeringConnections",
                "query": [
                    {
                        "field": "_dvpc1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dvpc1VpcPeeringConnectionIds",
                        "locationName": "VpcPeeringConnectionId",
                        "type": "field"
                    },
                    {
                        "field": "_dvpc1Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvpc1DryRun",
                        "name": "_dvpc1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvpc1VpcPeeringConnectionIds",
                        "name": "_dvpc1VpcPeeringConnectionIds",
                        "shape": "ValueStringList",
                        "locationName": "VpcPeeringConnectionId",
                        "documentation": "-- | One or more VPC peering connection IDs.\n--\n-- Default: Describes all your VPC peering connections.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvpc1Filters",
                        "name": "_dvpc1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'accepter-vpc-info.cidr-block' - The CIDR block of the peer VPC.\n--\n-- 'accepter-vpc-info.owner-id' - The AWS account ID of the owner of the peer\n-- VPC.\n--\n-- 'accepter-vpc-info.vpc-id' - The ID of the peer VPC.\n--\n-- 'expiration-time' - The expiration date and time for the VPC peering\n-- connection.\n--\n-- 'requester-vpc-info.cidr-block' - The CIDR block of the requester's VPC.\n--\n-- 'requester-vpc-info.owner-id' - The AWS account ID of the owner of the\n-- requester VPC.\n--\n-- 'requester-vpc-info.vpc-id' - The ID of the requester VPC.\n--\n-- 'status-code' - The status of the VPC peering connection ('pending-acceptance'\n-- | 'failed' | 'expired' | 'provisioning' | 'active' | 'deleted' | 'rejected').\n--\n-- 'status-message' - A message that provides more information about the status\n-- of the VPC peering connection, if applicable.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-peering-connection-id' - The ID of the VPC peering connection.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvpc1DryRun",
                        "name": "_dvpc1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvpc1Filters",
                        "name": "_dvpc1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'accepter-vpc-info.cidr-block' - The CIDR block of the peer VPC.\n--\n-- 'accepter-vpc-info.owner-id' - The AWS account ID of the owner of the peer\n-- VPC.\n--\n-- 'accepter-vpc-info.vpc-id' - The ID of the peer VPC.\n--\n-- 'expiration-time' - The expiration date and time for the VPC peering\n-- connection.\n--\n-- 'requester-vpc-info.cidr-block' - The CIDR block of the requester's VPC.\n--\n-- 'requester-vpc-info.owner-id' - The AWS account ID of the owner of the\n-- requester VPC.\n--\n-- 'requester-vpc-info.vpc-id' - The ID of the requester VPC.\n--\n-- 'status-code' - The status of the VPC peering connection ('pending-acceptance'\n-- | 'failed' | 'expired' | 'provisioning' | 'active' | 'deleted' | 'rejected').\n--\n-- 'status-message' - A message that provides more information about the status\n-- of the VPC peering connection, if applicable.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-peering-connection-id' - The ID of the VPC peering connection.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvpc1VpcPeeringConnectionIds",
                        "name": "_dvpc1VpcPeeringConnectionIds",
                        "shape": "ValueStringList",
                        "locationName": "VpcPeeringConnectionId",
                        "documentation": "-- | One or more VPC peering connection IDs.\n--\n-- Default: Describes all your VPC peering connections.",
                        "typeExposed": "[Text]",
                        "type": "List \"item\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeVpcsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dvrVpcs",
                    "name": "_dvrVpcs",
                    "shape": "VpcList",
                    "locationName": "vpcSet",
                    "documentation": "-- | Information about one or more VPCs.",
                    "typeExposed": "[Vpc]",
                    "type": "List \"item\" Vpc"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeVpcsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvrVpcs",
                        "name": "_dvrVpcs",
                        "shape": "VpcList",
                        "locationName": "vpcSet",
                        "documentation": "-- | Information about one or more VPCs.",
                        "typeExposed": "[Vpc]",
                        "type": "List \"item\" Vpc"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvrVpcs",
                        "name": "_dvrVpcs",
                        "shape": "VpcList",
                        "locationName": "vpcSet",
                        "documentation": "-- | Information about one or more VPCs.",
                        "typeExposed": "[Vpc]",
                        "type": "List \"item\" Vpc"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpcs.html",
            "namespace": "Network.AWS.EC2.DescribeVpcs",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeVpcs",
            "method": "post",
            "documentation": "-- | Describes one or more of your VPCs.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 11,
                "ctor": "describeVpcs",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 7,
                "name": "DescribeVpcs",
                "query": [
                    {
                        "field": "_dv1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dv1VpcIds",
                        "locationName": "VpcId",
                        "type": "field"
                    },
                    {
                        "field": "_dv1Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 7,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv1DryRun",
                        "name": "_dv1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dv1VpcIds",
                        "name": "_dv1VpcIds",
                        "shape": "VpcIdStringList",
                        "locationName": "VpcId",
                        "documentation": "-- | One or more VPC IDs.\n--\n-- Default: Describes all your VPCs.",
                        "typeExposed": "[Text]",
                        "type": "List \"VpcId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dv1Filters",
                        "name": "_dv1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'cidr' - The CIDR block of the VPC. The CIDR block you specify must exactly\n-- match the VPC's CIDR block for information to be returned for the VPC. Must\n-- contain the slash followed by one or two digits (for example, '/28').\n--\n-- 'dhcp-options-id' - The ID of a set of DHCP options.\n--\n-- 'isDefault' - Indicates whether the VPC is the default VPC.\n--\n-- 'state' - The state of the VPC ('pending' | 'available').\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-id' - The ID of the VPC.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dv1DryRun",
                        "name": "_dv1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dv1Filters",
                        "name": "_dv1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'cidr' - The CIDR block of the VPC. The CIDR block you specify must exactly\n-- match the VPC's CIDR block for information to be returned for the VPC. Must\n-- contain the slash followed by one or two digits (for example, '/28').\n--\n-- 'dhcp-options-id' - The ID of a set of DHCP options.\n--\n-- 'isDefault' - Indicates whether the VPC is the default VPC.\n--\n-- 'state' - The state of the VPC ('pending' | 'available').\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'vpc-id' - The ID of the VPC.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dv1VpcIds",
                        "name": "_dv1VpcIds",
                        "shape": "VpcIdStringList",
                        "locationName": "VpcId",
                        "documentation": "-- | One or more VPC IDs.\n--\n-- Default: Describes all your VPCs.",
                        "typeExposed": "[Text]",
                        "type": "List \"VpcId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeVpnConnectionsResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dvcrVpnConnections",
                    "name": "_dvcrVpnConnections",
                    "shape": "VpnConnectionList",
                    "locationName": "vpnConnectionSet",
                    "documentation": "-- | Information about one or more VPN connections.",
                    "typeExposed": "[VpnConnection]",
                    "type": "List \"item\" VpnConnection"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeVpnConnectionsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvcrVpnConnections",
                        "name": "_dvcrVpnConnections",
                        "shape": "VpnConnectionList",
                        "locationName": "vpnConnectionSet",
                        "documentation": "-- | Information about one or more VPN connections.",
                        "typeExposed": "[VpnConnection]",
                        "type": "List \"item\" VpnConnection"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvcrVpnConnections",
                        "name": "_dvcrVpnConnections",
                        "shape": "VpnConnectionList",
                        "locationName": "vpnConnectionSet",
                        "documentation": "-- | Information about one or more VPN connections.",
                        "typeExposed": "[VpnConnection]",
                        "type": "List \"item\" VpnConnection"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpnConnections.html",
            "namespace": "Network.AWS.EC2.DescribeVpnConnections",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeVpnConnections",
            "method": "post",
            "documentation": "-- | Describes one or more of your VPN connections.\n--\n-- For more information about VPN connections, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html Adding a Hardware VirtualPrivate Gateway to Your VPC\u003e in the /Amazon Virtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 21,
                "ctor": "describeVpnConnections",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "DescribeVpnConnections",
                "query": [
                    {
                        "field": "_dvc1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dvc1VpnConnectionIds",
                        "locationName": "VpnConnectionId",
                        "type": "field"
                    },
                    {
                        "field": "_dvc1Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 16,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvc1DryRun",
                        "name": "_dvc1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvc1VpnConnectionIds",
                        "name": "_dvc1VpnConnectionIds",
                        "shape": "VpnConnectionIdStringList",
                        "locationName": "VpnConnectionId",
                        "documentation": "-- | One or more VPN connection IDs.\n--\n-- Default: Describes your VPN connections.",
                        "typeExposed": "[Text]",
                        "type": "List \"VpnConnectionId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvc1Filters",
                        "name": "_dvc1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'customer-gateway-configuration' - The configuration information for the\n-- customer gateway.\n--\n-- 'customer-gateway-id' - The ID of a customer gateway associated with the VPN\n-- connection.\n--\n-- 'state' - The state of the VPN connection ('pending' | 'available' | 'deleting' | 'deleted').\n--\n-- 'option.static-routes-only' - Indicates whether the connection has static\n-- routes only. Used for devices that do not support Border Gateway Protocol\n-- (BGP).\n--\n-- 'route.destination-cidr-block' - The destination CIDR block. This\n-- corresponds to the subnet used in a customer data center.\n--\n-- 'bgp-asn' - The BGP Autonomous System Number (ASN) associated with a BGP\n-- device.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'type' - The type of VPN connection. Currently the only supported type is 'ipsec.1'.\n--\n-- 'vpn-connection-id' - The ID of the VPN connection.\n--\n-- 'vpn-gateway-id' - The ID of a virtual private gateway associated with the\n-- VPN connection.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvc1DryRun",
                        "name": "_dvc1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvc1Filters",
                        "name": "_dvc1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'customer-gateway-configuration' - The configuration information for the\n-- customer gateway.\n--\n-- 'customer-gateway-id' - The ID of a customer gateway associated with the VPN\n-- connection.\n--\n-- 'state' - The state of the VPN connection ('pending' | 'available' | 'deleting' | 'deleted').\n--\n-- 'option.static-routes-only' - Indicates whether the connection has static\n-- routes only. Used for devices that do not support Border Gateway Protocol\n-- (BGP).\n--\n-- 'route.destination-cidr-block' - The destination CIDR block. This\n-- corresponds to the subnet used in a customer data center.\n--\n-- 'bgp-asn' - The BGP Autonomous System Number (ASN) associated with a BGP\n-- device.\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'type' - The type of VPN connection. Currently the only supported type is 'ipsec.1'.\n--\n-- 'vpn-connection-id' - The ID of the VPN connection.\n--\n-- 'vpn-gateway-id' - The ID of a virtual private gateway associated with the\n-- VPN connection.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvc1VpnConnectionIds",
                        "name": "_dvc1VpnConnectionIds",
                        "shape": "VpnConnectionIdStringList",
                        "locationName": "VpnConnectionId",
                        "documentation": "-- | One or more VPN connection IDs.\n--\n-- Default: Describes your VPN connections.",
                        "typeExposed": "[Text]",
                        "type": "List \"VpnConnectionId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "describeVpnGatewaysResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "dvgrVpnGateways",
                    "name": "_dvgrVpnGateways",
                    "shape": "VpnGatewayList",
                    "locationName": "vpnGatewaySet",
                    "documentation": "-- | Information about one or more virtual private gateways.",
                    "typeExposed": "[VpnGateway]",
                    "type": "List \"item\" VpnGateway"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DescribeVpnGatewaysResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvgrVpnGateways",
                        "name": "_dvgrVpnGateways",
                        "shape": "VpnGatewayList",
                        "locationName": "vpnGatewaySet",
                        "documentation": "-- | Information about one or more virtual private gateways.",
                        "typeExposed": "[VpnGateway]",
                        "type": "List \"item\" VpnGateway"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvgrVpnGateways",
                        "name": "_dvgrVpnGateways",
                        "shape": "VpnGatewayList",
                        "locationName": "vpnGatewaySet",
                        "documentation": "-- | Information about one or more virtual private gateways.",
                        "typeExposed": "[VpnGateway]",
                        "type": "List \"item\" VpnGateway"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DescribeVpnGateways.html",
            "namespace": "Network.AWS.EC2.DescribeVpnGateways",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DescribeVpnGateways",
            "method": "post",
            "documentation": "-- | Describes one or more of your virtual private gateways.\n--\n-- For more information about virtual private gateways, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html Adding an IPsecHardware VPN to Your VPC\u003e in the /Amazon Virtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "describeVpnGateways",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DescribeVpnGateways",
                "query": [
                    {
                        "field": "_dvg2DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dvg2VpnGatewayIds",
                        "locationName": "VpnGatewayId",
                        "type": "field"
                    },
                    {
                        "field": "_dvg2Filters",
                        "locationName": "Filter",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvg2DryRun",
                        "name": "_dvg2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvg2VpnGatewayIds",
                        "name": "_dvg2VpnGatewayIds",
                        "shape": "VpnGatewayIdStringList",
                        "locationName": "VpnGatewayId",
                        "documentation": "-- | One or more virtual private gateway IDs.\n--\n-- Default: Describes all your virtual private gateways.",
                        "typeExposed": "[Text]",
                        "type": "List \"VpnGatewayId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvg2Filters",
                        "name": "_dvg2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'attachment.state' - The current state of the attachment between the gateway\n-- and the VPC ('attaching' | 'attached' | 'detaching' | 'detached').\n--\n-- 'attachment.vpc-id' - The ID of an attached VPC.\n--\n-- 'availability-zone' - The Availability Zone for the virtual private gateway.\n--\n-- 'state' - The state of the virtual private gateway ('pending' | 'available' | 'deleting' | 'deleted').\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'type' - The type of virtual private gateway. Currently the only supported\n-- type is 'ipsec.1'.\n--\n-- 'vpn-gateway-id' - The ID of the virtual private gateway.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvg2DryRun",
                        "name": "_dvg2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvg2Filters",
                        "name": "_dvg2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "-- | One or more filters.\n--\n-- 'attachment.state' - The current state of the attachment between the gateway\n-- and the VPC ('attaching' | 'attached' | 'detaching' | 'detached').\n--\n-- 'attachment.vpc-id' - The ID of an attached VPC.\n--\n-- 'availability-zone' - The Availability Zone for the virtual private gateway.\n--\n-- 'state' - The state of the virtual private gateway ('pending' | 'available' | 'deleting' | 'deleted').\n--\n-- 'tag':/key/=/value/ - The key/value combination of a tag assigned to the\n-- resource.\n--\n-- 'tag-key' - The key of a tag assigned to the resource. This filter is\n-- independent of the 'tag-value' filter. For example, if you use both the filter\n-- \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources\n-- assigned both the tag key Purpose (regardless of what the tag's value is),\n-- and the tag value X (regardless of what the tag's key is). If you want to\n-- list only resources where Purpose is X, see the 'tag':/key/=/value/ filter.\n--\n-- 'tag-value' - The value of a tag assigned to the resource. This filter is\n-- independent of the 'tag-key' filter.\n--\n-- 'type' - The type of virtual private gateway. Currently the only supported\n-- type is 'ipsec.1'.\n--\n-- 'vpn-gateway-id' - The ID of the virtual private gateway.\n--\n--",
                        "typeExposed": "[Filter]",
                        "type": "List \"Filter\" Filter"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "dvg2VpnGatewayIds",
                        "name": "_dvg2VpnGatewayIds",
                        "shape": "VpnGatewayIdStringList",
                        "locationName": "VpnGatewayId",
                        "documentation": "-- | One or more virtual private gateway IDs.\n--\n-- Default: Describes all your virtual private gateways.",
                        "typeExposed": "[Text]",
                        "type": "List \"VpnGatewayId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "detachInternetGatewayResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DetachInternetGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DetachInternetGateway.html",
            "namespace": "Network.AWS.EC2.DetachInternetGateway",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DetachInternetGateway",
            "method": "post",
            "documentation": "-- | Detaches an Internet gateway from a VPC, disabling connectivity between the\n-- Internet and the VPC. The VPC must not contain any running instances with\n-- Elastic IP addresses.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 21,
                "ctor": "detachInternetGateway",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "digInternetGatewayId",
                        "name": "_digInternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "-- | The ID of the Internet gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "digVpcId",
                        "name": "_digVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "DetachInternetGateway",
                "query": [
                    {
                        "field": "_digDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_digInternetGatewayId",
                        "locationName": "internetGatewayId",
                        "type": "field"
                    },
                    {
                        "field": "_digVpcId",
                        "locationName": "vpcId",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "digDryRun",
                        "name": "_digDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "digDryRun",
                        "name": "_digDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "digInternetGatewayId",
                        "name": "_digInternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "-- | The ID of the Internet gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "digVpcId",
                        "name": "_digVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "detachNetworkInterfaceResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DetachNetworkInterfaceResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DetachNetworkInterface.html",
            "namespace": "Network.AWS.EC2.DetachNetworkInterface",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DetachNetworkInterface",
            "method": "post",
            "documentation": "-- | Detaches a network interface from an instance.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "detachNetworkInterface",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dniAttachmentId",
                        "name": "_dniAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "-- | The ID of the attachment.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DetachNetworkInterface",
                "query": [
                    {
                        "field": "_dniDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dniAttachmentId",
                        "locationName": "attachmentId",
                        "type": "field"
                    },
                    {
                        "field": "_dniForce",
                        "locationName": "force",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniDryRun",
                        "name": "_dniDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniForce",
                        "name": "_dniForce",
                        "shape": "Boolean",
                        "locationName": "force",
                        "documentation": "-- | Specifies whether to force a detachment.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dniAttachmentId",
                        "name": "_dniAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "-- | The ID of the attachment.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniDryRun",
                        "name": "_dniDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dniForce",
                        "name": "_dniForce",
                        "shape": "Boolean",
                        "locationName": "force",
                        "documentation": "-- | Specifies whether to force a detachment.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 23,
                "ctor": "detachVolumeResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "DetachVolumeResponse",
                "resultWrapper": null,
                "locationPad": 20,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrVolumeId",
                        "name": "_dvrVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrInstanceId",
                        "name": "_dvrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrDevice",
                        "name": "_dvrDevice",
                        "shape": "String",
                        "locationName": "device",
                        "documentation": "-- | The device name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrState",
                        "name": "_dvrState",
                        "shape": "VolumeAttachmentState",
                        "locationName": "status",
                        "documentation": "-- | The attachment state of the volume.",
                        "typeExposed": "Maybe VolumeAttachmentState",
                        "type": "Maybe VolumeAttachmentState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrAttachTime",
                        "name": "_dvrAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The time stamp when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrDeleteOnTermination",
                        "name": "_dvrDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the Amazon EBS volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrAttachTime",
                        "name": "_dvrAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "-- | The time stamp when the attachment initiated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrDeleteOnTermination",
                        "name": "_dvrDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "-- | Indicates whether the Amazon EBS volume is deleted on instance termination.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrDevice",
                        "name": "_dvrDevice",
                        "shape": "String",
                        "locationName": "device",
                        "documentation": "-- | The device name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrInstanceId",
                        "name": "_dvrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrState",
                        "name": "_dvrState",
                        "shape": "VolumeAttachmentState",
                        "locationName": "status",
                        "documentation": "-- | The attachment state of the volume.",
                        "typeExposed": "Maybe VolumeAttachmentState",
                        "type": "Maybe VolumeAttachmentState"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvrVolumeId",
                        "name": "_dvrVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DetachVolume.html",
            "namespace": "Network.AWS.EC2.DetachVolume",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DetachVolume",
            "method": "post",
            "documentation": "-- | Detaches an Amazon EBS volume from an instance. Make sure to unmount any file\n-- systems on the device within your operating system before detaching the\n-- volume. Failure to do so results in the volume being stuck in a busy state\n-- while detaching.\n--\n-- If an Amazon EBS volume is the root device of an instance, it can't be\n-- detached while the instance is running. To detach the root volume, stop the\n-- instance first.\n--\n-- If the root volume is detached from an instance with an AWS Marketplace\n-- product code, then the AWS Marketplace product codes from that volume are no\n-- longer associated with the instance.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html Detaching an Amazon EBS Volume\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "detachVolume",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvVolumeId",
                        "name": "_dvVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DetachVolume",
                "query": [
                    {
                        "field": "_dvDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dvVolumeId",
                        "locationName": "VolumeId",
                        "type": "field"
                    },
                    {
                        "field": "_dvInstanceId",
                        "locationName": "InstanceId",
                        "type": "field"
                    },
                    {
                        "field": "_dvDevice",
                        "locationName": "Device",
                        "type": "field"
                    },
                    {
                        "field": "_dvForce",
                        "locationName": "Force",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvDryRun",
                        "name": "_dvDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvInstanceId",
                        "name": "_dvInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvDevice",
                        "name": "_dvDevice",
                        "shape": "String",
                        "locationName": "Device",
                        "documentation": "-- | The device name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvForce",
                        "name": "_dvForce",
                        "shape": "Boolean",
                        "locationName": "Force",
                        "documentation": "-- | Forces detachment if the previous detachment attempt did not occur cleanly\n-- (for example, logging into an instance, unmounting the volume, and detaching\n-- normally). This option can lead to data loss or a corrupted file system. Use\n-- this option only as a last resort to detach a volume from a failed instance.\n-- The instance won't have an opportunity to flush file system caches or file\n-- system metadata. If you use this option, you must perform file system check\n-- and repair procedures.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvDevice",
                        "name": "_dvDevice",
                        "shape": "String",
                        "locationName": "Device",
                        "documentation": "-- | The device name.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvDryRun",
                        "name": "_dvDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvForce",
                        "name": "_dvForce",
                        "shape": "Boolean",
                        "locationName": "Force",
                        "documentation": "-- | Forces detachment if the previous detachment attempt did not occur cleanly\n-- (for example, logging into an instance, unmounting the volume, and detaching\n-- normally). This option can lead to data loss or a corrupted file system. Use\n-- this option only as a last resort to detach a volume from a failed instance.\n-- The instance won't have an opportunity to flush file system caches or file\n-- system metadata. If you use this option, you must perform file system check\n-- and repair procedures.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvInstanceId",
                        "name": "_dvInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvVolumeId",
                        "name": "_dvVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "detachVpnGatewayResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DetachVpnGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DetachVpnGateway.html",
            "namespace": "Network.AWS.EC2.DetachVpnGateway",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DetachVpnGateway",
            "method": "post",
            "documentation": "-- | Detaches a virtual private gateway from a VPC. You do this if you're planning\n-- to turn off the VPC and not use it anymore. You can confirm a virtual private\n-- gateway has been completely detached from a VPC by describing the virtual\n-- private gateway (any attachments to the virtual private gateway are also\n-- described).\n--\n-- You must wait for the attachment's state to switch to 'detached' before you\n-- can delete the VPC or attach a different VPC to the virtual private gateway.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "detachVpnGateway",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvg1VpnGatewayId",
                        "name": "_dvg1VpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvg1VpcId",
                        "name": "_dvg1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DetachVpnGateway",
                "query": [
                    {
                        "field": "_dvg1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_dvg1VpnGatewayId",
                        "locationName": "VpnGatewayId",
                        "type": "field"
                    },
                    {
                        "field": "_dvg1VpcId",
                        "locationName": "VpcId",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvg1DryRun",
                        "name": "_dvg1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "dvg1DryRun",
                        "name": "_dvg1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvg1VpcId",
                        "name": "_dvg1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvg1VpnGatewayId",
                        "name": "_dvg1VpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "disableVgwRoutePropagationResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DisableVgwRoutePropagationResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DisableVgwRoutePropagation.html",
            "namespace": "Network.AWS.EC2.DisableVgwRoutePropagation",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DisableVgwRoutePropagation",
            "method": "post",
            "documentation": "-- | Disables a virtual private gateway (VGW) from propagating routes to a\n-- specified route table of a VPC.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "disableVgwRoutePropagation",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvrpRouteTableId",
                        "name": "_dvrpRouteTableId",
                        "shape": "String",
                        "locationName": "RouteTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvrpGatewayId",
                        "name": "_dvrpGatewayId",
                        "shape": "String",
                        "locationName": "GatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DisableVgwRoutePropagation",
                "query": [
                    {
                        "field": "_dvrpRouteTableId",
                        "locationName": "RouteTableId",
                        "type": "field"
                    },
                    {
                        "field": "_dvrpGatewayId",
                        "locationName": "GatewayId",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvrpGatewayId",
                        "name": "_dvrpGatewayId",
                        "shape": "String",
                        "locationName": "GatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "dvrpRouteTableId",
                        "name": "_dvrpRouteTableId",
                        "shape": "String",
                        "locationName": "RouteTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "disassociateAddressResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DisassociateAddressResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DisassociateAddress.html",
            "namespace": "Network.AWS.EC2.DisassociateAddress",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DisassociateAddress",
            "method": "post",
            "documentation": "-- | Disassociates an Elastic IP address from the instance or network interface\n-- it's associated with.\n--\n-- An Elastic IP address is for use in either the EC2-Classic platform or in a\n-- VPC. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html Elastic IP Addresses\u003e in the /Amazon ElasticCompute Cloud User Guide/.\n--\n-- This is an idempotent operation. If you perform the operation more than\n-- once, Amazon EC2 doesn't return an error.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "disassociateAddress",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "DisassociateAddress",
                "query": [
                    {
                        "field": "_da1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_da1PublicIp",
                        "locationName": "PublicIp",
                        "type": "field"
                    },
                    {
                        "field": "_da1AssociationId",
                        "locationName": "AssociationId",
                        "type": "field"
                    }
                ],
                "locationPad": 14,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "da1DryRun",
                        "name": "_da1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "da1PublicIp",
                        "name": "_da1PublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "-- | [EC2-Classic] The Elastic IP address. Required for EC2-Classic.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "da1AssociationId",
                        "name": "_da1AssociationId",
                        "shape": "String",
                        "locationName": "AssociationId",
                        "documentation": "-- | [EC2-VPC] The association ID. Required for EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "da1AssociationId",
                        "name": "_da1AssociationId",
                        "shape": "String",
                        "locationName": "AssociationId",
                        "documentation": "-- | [EC2-VPC] The association ID. Required for EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "da1DryRun",
                        "name": "_da1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "da1PublicIp",
                        "name": "_da1PublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "-- | [EC2-Classic] The Elastic IP address. Required for EC2-Classic.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "disassociateRouteTableResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DisassociateRouteTableResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-DisassociateRouteTable.html",
            "namespace": "Network.AWS.EC2.DisassociateRouteTable",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "DisassociateRouteTable",
            "method": "post",
            "documentation": "-- | Disassociates a subnet from a route table.\n--\n-- After you perform this action, the subnet no longer uses the routes in the\n-- route table. Instead, it uses the routes in the VPC's main route table. For\n-- more information about route tables, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html Route Tables\u003e in the /Amazon VirtualPrivate Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "disassociateRouteTable",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "drtAssociationId",
                        "name": "_drtAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The association ID representing the current association between the route\n-- table and subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "DisassociateRouteTable",
                "query": [
                    {
                        "field": "_drtDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_drtAssociationId",
                        "locationName": "associationId",
                        "type": "field"
                    }
                ],
                "locationPad": 14,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drtDryRun",
                        "name": "_drtDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "drtAssociationId",
                        "name": "_drtAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The association ID representing the current association between the route\n-- table and subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "drtDryRun",
                        "name": "_drtDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "enableVgwRoutePropagationResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "EnableVgwRoutePropagationResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-EnableVgwRoutePropagation.html",
            "namespace": "Network.AWS.EC2.EnableVgwRoutePropagation",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "EnableVgwRoutePropagation",
            "method": "post",
            "documentation": "-- | Enables a virtual private gateway (VGW) to propagate routes to the specified\n-- route table of a VPC.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "enableVgwRoutePropagation",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "evrpRouteTableId",
                        "name": "_evrpRouteTableId",
                        "shape": "String",
                        "locationName": "RouteTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "evrpGatewayId",
                        "name": "_evrpGatewayId",
                        "shape": "String",
                        "locationName": "GatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "EnableVgwRoutePropagation",
                "query": [
                    {
                        "field": "_evrpRouteTableId",
                        "locationName": "RouteTableId",
                        "type": "field"
                    },
                    {
                        "field": "_evrpGatewayId",
                        "locationName": "GatewayId",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "evrpGatewayId",
                        "name": "_evrpGatewayId",
                        "shape": "String",
                        "locationName": "GatewayId",
                        "documentation": "-- | The ID of the virtual private gateway.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "evrpRouteTableId",
                        "name": "_evrpRouteTableId",
                        "shape": "String",
                        "locationName": "RouteTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "enableVolumeIOResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "EnableVolumeIOResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-EnableVolumeIO.html",
            "namespace": "Network.AWS.EC2.EnableVolumeIO",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "EnableVolumeIO",
            "method": "post",
            "documentation": "-- | Enables I/O operations for a volume that had I/O operations disabled because\n-- the data on the volume was potentially inconsistent.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "enableVolumeIO",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "evioVolumeId",
                        "name": "_evioVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "EnableVolumeIO",
                "query": [
                    {
                        "field": "_evioDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_evioVolumeId",
                        "locationName": "volumeId",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "evioDryRun",
                        "name": "_evioDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "evioDryRun",
                        "name": "_evioDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "evioVolumeId",
                        "name": "_evioVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "getConsoleOutputResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetConsoleOutputResponse",
                "resultWrapper": null,
                "locationPad": 11,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gcorInstanceId",
                        "name": "_gcorInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gcorTimestamp",
                        "name": "_gcorTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "-- | The time the output was last updated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gcorOutput",
                        "name": "_gcorOutput",
                        "shape": "String",
                        "locationName": "output",
                        "documentation": "-- | The console output, Base64 encoded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gcorInstanceId",
                        "name": "_gcorInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gcorOutput",
                        "name": "_gcorOutput",
                        "shape": "String",
                        "locationName": "output",
                        "documentation": "-- | The console output, Base64 encoded.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gcorTimestamp",
                        "name": "_gcorTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "-- | The time the output was last updated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-GetConsoleOutput.html",
            "namespace": "Network.AWS.EC2.GetConsoleOutput",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "GetConsoleOutput",
            "method": "post",
            "documentation": "-- | Gets the console output for the specified instance.\n--\n-- Instances do not have a physical monitor through which you can view their\n-- console output. They also lack physical controls that allow you to power up,\n-- reboot, or shut them down. To allow these actions, we provide them through\n-- the Amazon EC2 API and command line interface.\n--\n-- Instance console output is buffered and posted shortly after instance boot,\n-- reboot, and termination. Amazon EC2 preserves the most recent 64 KB output\n-- which is available for at least one hour after the most recent post.\n--\n-- For Linux/Unix instances, the instance console output displays the exact\n-- console output that would normally be displayed on a physical monitor\n-- attached to a machine. This output is buffered because the instance produces\n-- it and then posts it to a store where the instance's owner can retrieve it.\n--\n-- For Windows instances, the instance console output displays the last three\n-- system event log errors.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "getConsoleOutput",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "gcoInstanceId",
                        "name": "_gcoInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "GetConsoleOutput",
                "query": [
                    {
                        "field": "_gcoDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_gcoInstanceId",
                        "locationName": "InstanceId",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gcoDryRun",
                        "name": "_gcoDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gcoDryRun",
                        "name": "_gcoDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "gcoInstanceId",
                        "name": "_gcoInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 17,
                "ctor": "getPasswordDataResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetPasswordDataResponse",
                "resultWrapper": null,
                "locationPad": 13,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gpdrInstanceId",
                        "name": "_gpdrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the Windows instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gpdrTimestamp",
                        "name": "_gpdrTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "-- | The time the data was last updated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gpdrPasswordData",
                        "name": "_gpdrPasswordData",
                        "shape": "String",
                        "locationName": "passwordData",
                        "documentation": "-- | The password of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gpdrInstanceId",
                        "name": "_gpdrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the Windows instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gpdrPasswordData",
                        "name": "_gpdrPasswordData",
                        "shape": "String",
                        "locationName": "passwordData",
                        "documentation": "-- | The password of the instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gpdrTimestamp",
                        "name": "_gpdrTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "-- | The time the data was last updated.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-GetPasswordData.html",
            "namespace": "Network.AWS.EC2.GetPasswordData",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "GetPasswordData",
            "method": "post",
            "documentation": "-- | Retrieves the encrypted administrator password for an instance running\n-- Windows.\n--\n-- The Windows password is generated at boot if the 'EC2Config' service plugin, 'Ec2SetPassword', is enabled. This usually only happens the first time an AMI is launched,\n-- and then 'Ec2SetPassword' is automatically disabled. The password is not\n-- generated for rebundled AMIs unless 'Ec2SetPassword' is enabled before bundling.\n--\n-- The password is encrypted using the key pair that you specified when you\n-- launched the instance. You must provide the corresponding key pair file.\n--\n-- Password generation and encryption takes a few moments. We recommend that\n-- you wait up to 15 minutes after launching an instance before trying to\n-- retrieve the generated password.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "getPasswordData",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "gpdInstanceId",
                        "name": "_gpdInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the Windows instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "GetPasswordData",
                "query": [
                    {
                        "field": "_gpdDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_gpdInstanceId",
                        "locationName": "InstanceId",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gpdDryRun",
                        "name": "_gpdDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "gpdDryRun",
                        "name": "_gpdDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "gpdInstanceId",
                        "name": "_gpdInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "-- | The ID of the Windows instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "importInstanceResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "iirConversionTask",
                    "name": "_iirConversionTask",
                    "shape": "ConversionTask",
                    "locationName": "conversionTask",
                    "documentation": null,
                    "typeExposed": "Maybe ConversionTask",
                    "type": "Maybe ConversionTask"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ImportInstanceResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iirConversionTask",
                        "name": "_iirConversionTask",
                        "shape": "ConversionTask",
                        "locationName": "conversionTask",
                        "documentation": null,
                        "typeExposed": "Maybe ConversionTask",
                        "type": "Maybe ConversionTask"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iirConversionTask",
                        "name": "_iirConversionTask",
                        "shape": "ConversionTask",
                        "locationName": "conversionTask",
                        "documentation": null,
                        "typeExposed": "Maybe ConversionTask",
                        "type": "Maybe ConversionTask"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ImportInstance.html",
            "namespace": "Network.AWS.EC2.ImportInstance",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ImportInstance",
            "method": "post",
            "documentation": "-- | Creates an import instance task using metadata from the specified disk image.\n-- After importing the image, you then upload it using the ec2-import-volume\n-- command in the EC2 command line tools. For more information, see Using the\n-- Command Line Tools to Import Your Virtual Machine to Amazon EC2 in the Amazon\n-- Elastic Compute Cloud User Guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "importInstance",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iiPlatform",
                        "name": "_iiPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "-- | The instance operating system.",
                        "typeExposed": "PlatformValues",
                        "type": "PlatformValues"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "ImportInstance",
                "query": [
                    {
                        "field": "_iiDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_iiDescription",
                        "locationName": "description",
                        "type": "field"
                    },
                    {
                        "field": "_iiLaunchSpecification",
                        "locationName": "launchSpecification",
                        "type": "field"
                    },
                    {
                        "field": "_iiDiskImages",
                        "locationName": "diskImage",
                        "type": "field"
                    },
                    {
                        "field": "_iiPlatform",
                        "locationName": "platform",
                        "type": "field"
                    }
                ],
                "locationPad": 20,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iiDryRun",
                        "name": "_iiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iiDescription",
                        "name": "_iiDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description for the instance being imported.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iiLaunchSpecification",
                        "name": "_iiLaunchSpecification",
                        "shape": "ImportInstanceLaunchSpecification",
                        "locationName": "launchSpecification",
                        "documentation": "",
                        "typeExposed": "Maybe ImportInstanceLaunchSpecification",
                        "type": "Maybe ImportInstanceLaunchSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iiDiskImages",
                        "name": "_iiDiskImages",
                        "shape": "DiskImageList",
                        "locationName": "diskImage",
                        "documentation": null,
                        "typeExposed": "[DiskImage]",
                        "type": "List \"diskImage\" DiskImage"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iiDescription",
                        "name": "_iiDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description for the instance being imported.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "iiDiskImages",
                        "name": "_iiDiskImages",
                        "shape": "DiskImageList",
                        "locationName": "diskImage",
                        "documentation": null,
                        "typeExposed": "[DiskImage]",
                        "type": "List \"diskImage\" DiskImage"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iiDryRun",
                        "name": "_iiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "iiLaunchSpecification",
                        "name": "_iiLaunchSpecification",
                        "shape": "ImportInstanceLaunchSpecification",
                        "locationName": "launchSpecification",
                        "documentation": "",
                        "typeExposed": "Maybe ImportInstanceLaunchSpecification",
                        "type": "Maybe ImportInstanceLaunchSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "iiPlatform",
                        "name": "_iiPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "-- | The instance operating system.",
                        "typeExposed": "PlatformValues",
                        "type": "PlatformValues"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "importKeyPairResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ImportKeyPairResponse",
                "resultWrapper": null,
                "locationPad": 15,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ikprKeyName",
                        "name": "_ikprKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The key pair name you provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ikprKeyFingerprint",
                        "name": "_ikprKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "-- | The MD5 public key fingerprint as specified in section 4 of RFC 4716.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ikprKeyFingerprint",
                        "name": "_ikprKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "-- | The MD5 public key fingerprint as specified in section 4 of RFC 4716.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ikprKeyName",
                        "name": "_ikprKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | The key pair name you provided.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ImportKeyPair.html",
            "namespace": "Network.AWS.EC2.ImportKeyPair",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ImportKeyPair",
            "method": "post",
            "documentation": "-- | Imports the public key from an RSA key pair that you created with a\n-- third-party tool. Compare this with 'CreateKeyPair', in which AWS creates the\n-- key pair and gives the keys to you (AWS keeps a copy of the public key). With\n-- ImportKeyPair, you create the key pair and give AWS just the public key. The\n-- private key is never transferred between you and AWS.\n--\n-- For more information about key pairs, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html Key Pairs\u003e in the /Amazon ElasticCompute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 21,
                "ctor": "importKeyPair",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ikpKeyName",
                        "name": "_ikpKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | A unique name for the key pair.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ikpPublicKeyMaterial",
                        "name": "_ikpPublicKeyMaterial",
                        "shape": "Blob",
                        "locationName": "publicKeyMaterial",
                        "documentation": "-- | The public key. You must base64 encode the public key material before sending\n-- it to AWS.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 18,
                "name": "ImportKeyPair",
                "query": [
                    {
                        "field": "_ikpDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ikpKeyName",
                        "locationName": "keyName",
                        "type": "field"
                    },
                    {
                        "field": "_ikpPublicKeyMaterial",
                        "locationName": "publicKeyMaterial",
                        "type": "field"
                    }
                ],
                "locationPad": 18,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ikpDryRun",
                        "name": "_ikpDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ikpDryRun",
                        "name": "_ikpDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ikpKeyName",
                        "name": "_ikpKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "-- | A unique name for the key pair.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ikpPublicKeyMaterial",
                        "name": "_ikpPublicKeyMaterial",
                        "shape": "Blob",
                        "locationName": "publicKeyMaterial",
                        "documentation": "-- | The public key. You must base64 encode the public key material before sending\n-- it to AWS.",
                        "typeExposed": "Base64",
                        "type": "Base64"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "importVolumeResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "ivrConversionTask",
                    "name": "_ivrConversionTask",
                    "shape": "ConversionTask",
                    "locationName": "conversionTask",
                    "documentation": null,
                    "typeExposed": "Maybe ConversionTask",
                    "type": "Maybe ConversionTask"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ImportVolumeResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ivrConversionTask",
                        "name": "_ivrConversionTask",
                        "shape": "ConversionTask",
                        "locationName": "conversionTask",
                        "documentation": null,
                        "typeExposed": "Maybe ConversionTask",
                        "type": "Maybe ConversionTask"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ivrConversionTask",
                        "name": "_ivrConversionTask",
                        "shape": "ConversionTask",
                        "locationName": "conversionTask",
                        "documentation": null,
                        "typeExposed": "Maybe ConversionTask",
                        "type": "Maybe ConversionTask"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ImportVolume.html",
            "namespace": "Network.AWS.EC2.ImportVolume",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ImportVolume",
            "method": "post",
            "documentation": "-- | Creates an import volume task using metadata from the specified disk image.\n-- After importing the image, you then upload it using the ec2-import-volume\n-- command in the Amazon EC2 command-line interface (CLI) tools. For more\n-- information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UploadingYourInstancesandVolumes.html Using the Command Line Tools to Import Your Virtual Machineto Amazon EC2\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "importVolume",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivAvailabilityZone",
                        "name": "_ivAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone for the resulting Amazon EBS volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivImage",
                        "name": "_ivImage",
                        "shape": "DiskImageDetail",
                        "locationName": "image",
                        "documentation": null,
                        "typeExposed": "DiskImageDetail",
                        "type": "DiskImageDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivVolume",
                        "name": "_ivVolume",
                        "shape": "VolumeDetail",
                        "locationName": "volume",
                        "documentation": null,
                        "typeExposed": "VolumeDetail",
                        "type": "VolumeDetail"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "ImportVolume",
                "query": [
                    {
                        "field": "_ivDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ivAvailabilityZone",
                        "locationName": "availabilityZone",
                        "type": "field"
                    },
                    {
                        "field": "_ivImage",
                        "locationName": "image",
                        "type": "field"
                    },
                    {
                        "field": "_ivDescription",
                        "locationName": "description",
                        "type": "field"
                    },
                    {
                        "field": "_ivVolume",
                        "locationName": "volume",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ivDryRun",
                        "name": "_ivDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ivDescription",
                        "name": "_ivDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | An optional description for the volume being imported.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivAvailabilityZone",
                        "name": "_ivAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "-- | The Availability Zone for the resulting Amazon EBS volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ivDescription",
                        "name": "_ivDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | An optional description for the volume being imported.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ivDryRun",
                        "name": "_ivDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivImage",
                        "name": "_ivImage",
                        "shape": "DiskImageDetail",
                        "locationName": "image",
                        "documentation": null,
                        "typeExposed": "DiskImageDetail",
                        "type": "DiskImageDetail"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ivVolume",
                        "name": "_ivVolume",
                        "shape": "VolumeDetail",
                        "locationName": "volume",
                        "documentation": null,
                        "typeExposed": "VolumeDetail",
                        "type": "VolumeDetail"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "modifyImageAttributeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ModifyImageAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyImageAttribute.html",
            "namespace": "Network.AWS.EC2.ModifyImageAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ModifyImageAttribute",
            "method": "post",
            "documentation": "-- | Modifies the specified attribute of the specified AMI. You can specify only\n-- one attribute at a time.\n--\n-- AWS Marketplace product codes cannot be modified. Images with an AWS\n-- Marketplace product code cannot be made public.\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "modifyImageAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "miaImageId",
                        "name": "_miaImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "ModifyImageAttribute",
                "query": [
                    {
                        "field": "_miaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_miaImageId",
                        "locationName": "ImageId",
                        "type": "field"
                    },
                    {
                        "field": "_miaAttribute",
                        "locationName": "Attribute",
                        "type": "field"
                    },
                    {
                        "field": "_miaOperationType",
                        "locationName": "OperationType",
                        "type": "field"
                    },
                    {
                        "field": "_miaUserIds",
                        "locationName": "UserId",
                        "type": "field"
                    },
                    {
                        "field": "_miaUserGroups",
                        "locationName": "UserGroup",
                        "type": "field"
                    },
                    {
                        "field": "_miaProductCodes",
                        "locationName": "ProductCode",
                        "type": "field"
                    },
                    {
                        "field": "_miaValue",
                        "locationName": "Value",
                        "type": "field"
                    },
                    {
                        "field": "_miaLaunchPermission",
                        "locationName": "LaunchPermission",
                        "type": "field"
                    },
                    {
                        "field": "_miaDescription",
                        "locationName": "Description",
                        "type": "field"
                    }
                ],
                "locationPad": 17,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaDryRun",
                        "name": "_miaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaAttribute",
                        "name": "_miaAttribute",
                        "shape": "String",
                        "locationName": "Attribute",
                        "documentation": "-- | The name of the attribute to modify.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaOperationType",
                        "name": "_miaOperationType",
                        "shape": "String",
                        "locationName": "OperationType",
                        "documentation": "-- | The operation type.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "miaUserIds",
                        "name": "_miaUserIds",
                        "shape": "UserIdStringList",
                        "locationName": "UserId",
                        "documentation": "-- | One or more AWS account IDs. This is only valid when modifying the 'launchPermission' attribute.",
                        "typeExposed": "[Text]",
                        "type": "List \"UserId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "miaUserGroups",
                        "name": "_miaUserGroups",
                        "shape": "UserGroupStringList",
                        "locationName": "UserGroup",
                        "documentation": "-- | One or more user groups. This is only valid when modifying the 'launchPermission' attribute.",
                        "typeExposed": "[Text]",
                        "type": "List \"UserGroup\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "miaProductCodes",
                        "name": "_miaProductCodes",
                        "shape": "ProductCodeStringList",
                        "locationName": "ProductCode",
                        "documentation": "-- | One or more product codes. After you add a product code to an AMI, it can't\n-- be removed. This is only valid when modifying the 'productCodes' attribute.",
                        "typeExposed": "[Text]",
                        "type": "List \"ProductCode\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaValue",
                        "name": "_miaValue",
                        "shape": "String",
                        "locationName": "Value",
                        "documentation": "-- | The value of the attribute being modified. This is only valid when modifying\n-- the 'description' attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaLaunchPermission",
                        "name": "_miaLaunchPermission",
                        "shape": "LaunchPermissionModifications",
                        "locationName": "LaunchPermission",
                        "documentation": "",
                        "typeExposed": "Maybe LaunchPermissionModifications",
                        "type": "Maybe LaunchPermissionModifications"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaDescription",
                        "name": "_miaDescription",
                        "shape": "AttributeValue",
                        "locationName": "Description",
                        "documentation": "-- | A description for the AMI.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaAttribute",
                        "name": "_miaAttribute",
                        "shape": "String",
                        "locationName": "Attribute",
                        "documentation": "-- | The name of the attribute to modify.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaDescription",
                        "name": "_miaDescription",
                        "shape": "AttributeValue",
                        "locationName": "Description",
                        "documentation": "-- | A description for the AMI.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaDryRun",
                        "name": "_miaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "miaImageId",
                        "name": "_miaImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaLaunchPermission",
                        "name": "_miaLaunchPermission",
                        "shape": "LaunchPermissionModifications",
                        "locationName": "LaunchPermission",
                        "documentation": "",
                        "typeExposed": "Maybe LaunchPermissionModifications",
                        "type": "Maybe LaunchPermissionModifications"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaOperationType",
                        "name": "_miaOperationType",
                        "shape": "String",
                        "locationName": "OperationType",
                        "documentation": "-- | The operation type.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "miaProductCodes",
                        "name": "_miaProductCodes",
                        "shape": "ProductCodeStringList",
                        "locationName": "ProductCode",
                        "documentation": "-- | One or more product codes. After you add a product code to an AMI, it can't\n-- be removed. This is only valid when modifying the 'productCodes' attribute.",
                        "typeExposed": "[Text]",
                        "type": "List \"ProductCode\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "miaUserGroups",
                        "name": "_miaUserGroups",
                        "shape": "UserGroupStringList",
                        "locationName": "UserGroup",
                        "documentation": "-- | One or more user groups. This is only valid when modifying the 'launchPermission' attribute.",
                        "typeExposed": "[Text]",
                        "type": "List \"UserGroup\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "miaUserIds",
                        "name": "_miaUserIds",
                        "shape": "UserIdStringList",
                        "locationName": "UserId",
                        "documentation": "-- | One or more AWS account IDs. This is only valid when modifying the 'launchPermission' attribute.",
                        "typeExposed": "[Text]",
                        "type": "List \"UserId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miaValue",
                        "name": "_miaValue",
                        "shape": "String",
                        "locationName": "Value",
                        "documentation": "-- | The value of the attribute being modified. This is only valid when modifying\n-- the 'description' attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "modifyInstanceAttributeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ModifyInstanceAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyInstanceAttribute.html",
            "namespace": "Network.AWS.EC2.ModifyInstanceAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ModifyInstanceAttribute",
            "method": "post",
            "documentation": "-- | Modifies the specified attribute of the specified instance. You can specify\n-- only one attribute at a time.\n--\n-- To modify some attributes, the instance must be stopped. For more\n-- information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html Modifying Attributes of a Stopped Instance\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 38,
                "ctor": "modifyInstanceAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "mia1InstanceId",
                        "name": "_mia1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 34,
                "name": "ModifyInstanceAttribute",
                "query": [
                    {
                        "field": "_mia1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_mia1InstanceId",
                        "locationName": "instanceId",
                        "type": "field"
                    },
                    {
                        "field": "_mia1Attribute",
                        "locationName": "attribute",
                        "type": "field"
                    },
                    {
                        "field": "_mia1Value",
                        "locationName": "value",
                        "type": "field"
                    },
                    {
                        "field": "_mia1BlockDeviceMappings",
                        "locationName": "blockDeviceMapping",
                        "type": "field"
                    },
                    {
                        "field": "_mia1SourceDestCheck",
                        "locationName": "SourceDestCheck",
                        "type": "field"
                    },
                    {
                        "field": "_mia1DisableApiTermination",
                        "locationName": "disableApiTermination",
                        "type": "field"
                    },
                    {
                        "field": "_mia1InstanceType",
                        "locationName": "instanceType",
                        "type": "field"
                    },
                    {
                        "field": "_mia1Kernel",
                        "locationName": "kernel",
                        "type": "field"
                    },
                    {
                        "field": "_mia1Ramdisk",
                        "locationName": "ramdisk",
                        "type": "field"
                    },
                    {
                        "field": "_mia1UserData",
                        "locationName": "userData",
                        "type": "field"
                    },
                    {
                        "field": "_mia1InstanceInitiatedShutdownBehavior",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "type": "field"
                    },
                    {
                        "field": "_mia1Groups",
                        "locationName": "GroupId",
                        "type": "field"
                    },
                    {
                        "field": "_mia1EbsOptimized",
                        "locationName": "ebsOptimized",
                        "type": "field"
                    },
                    {
                        "field": "_mia1SriovNetSupport",
                        "locationName": "sriovNetSupport",
                        "type": "field"
                    }
                ],
                "locationPad": 34,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1DryRun",
                        "name": "_mia1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1Attribute",
                        "name": "_mia1Attribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "-- | The name of the attribute.",
                        "typeExposed": "Maybe InstanceAttributeName",
                        "type": "Maybe InstanceAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1Value",
                        "name": "_mia1Value",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "-- | A new value for the attribute. Use only with the 'kernel', 'ramdisk', 'userData', 'disableApiTermination', or 'intanceInitiateShutdownBehavior' attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mia1BlockDeviceMappings",
                        "name": "_mia1BlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingSpecificationList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | Modifies the 'DeleteOnTermination' attribute for volumes that are currently\n-- attached. The volume must be owned by the caller. If no value is specified\n-- for 'DeleteOnTermination', the default is 'true' and the volume is deleted when\n-- the instance is terminated.\n--\n-- To add instance store volumes to an Amazon EBS-backed instance, you must add\n-- them when you launch the instance. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM Updating theBlock Device Mapping when Launching an Instance\u003e in the /Amazon Elastic ComputeCloud User Guide/.",
                        "typeExposed": "[InstanceBlockDeviceMappingSpecification]",
                        "type": "List \"item\" InstanceBlockDeviceMappingSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1SourceDestCheck",
                        "name": "_mia1SourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "SourceDestCheck",
                        "documentation": "-- | Specifies whether source/destination checking is enabled. A value of 'true'\n-- means that checking is enabled, and 'false' means checking is disabled. This\n-- value must be 'false' for a NAT instance to perform NAT.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1DisableApiTermination",
                        "name": "_mia1DisableApiTermination",
                        "shape": "AttributeBooleanValue",
                        "locationName": "disableApiTermination",
                        "documentation": "-- | If the value is 'true', you can't terminate the instance using the Amazon EC2\n-- console, CLI, or API; otherwise, you can.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1InstanceType",
                        "name": "_mia1InstanceType",
                        "shape": "AttributeValue",
                        "locationName": "instanceType",
                        "documentation": "-- | Changes the instance type to the specified value. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html Instance Types\u003e. If the instance type is not valid, the error returned is 'InvalidInstanceAttributeValue'.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1Kernel",
                        "name": "_mia1Kernel",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "-- | Changes the instance's kernel to the specified value. We recommend that you\n-- use PV-GRUB instead of kernels and RAM disks. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html PV-GRUB\u003e.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1Ramdisk",
                        "name": "_mia1Ramdisk",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "-- | Changes the instance's RAM disk to the specified value. We recommend that you\n-- use PV-GRUB instead of kernels and RAM disks. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html PV-GRUB\u003e.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1UserData",
                        "name": "_mia1UserData",
                        "shape": "BlobAttributeValue",
                        "locationName": "userData",
                        "documentation": "-- | Changes the instance's user data to the specified value.",
                        "typeExposed": "Maybe BlobAttributeValue",
                        "type": "Maybe BlobAttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1InstanceInitiatedShutdownBehavior",
                        "name": "_mia1InstanceInitiatedShutdownBehavior",
                        "shape": "AttributeValue",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "-- | Specifies whether an instance stops or terminates when you initiate shutdown\n-- from the instance (using the operating system command for system shutdown).",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mia1Groups",
                        "name": "_mia1Groups",
                        "shape": "GroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": "-- | [EC2-VPC] Changes the security groups of the instance. You must specify at\n-- least one security group, even if it's just the default security group for\n-- the VPC. You must specify the security group ID, not the security group name.\n--\n-- For example, if you want the instance to be in sg-1a1a1a1a and sg-9b9b9b9b,\n-- specify 'GroupId.1=sg-1a1a1a1a' and 'GroupId.2=sg-9b9b9b9b'.",
                        "typeExposed": "[Text]",
                        "type": "List \"groupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1EbsOptimized",
                        "name": "_mia1EbsOptimized",
                        "shape": "AttributeBooleanValue",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Specifies whether the instance is optimized for EBS I/O. This optimization\n-- provides dedicated throughput to Amazon EBS and an optimized configuration\n-- stack to provide optimal EBS I/O performance. This optimization isn't\n-- available with all instance types. Additional usage charges apply when using\n-- an EBS Optimized instance.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1SriovNetSupport",
                        "name": "_mia1SriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": "-- | Set to 'simple' to enable enhanced networking for the instance.\n--\n-- There is no way to disable enhanced networking at this time.\n--\n-- This option is supported only for HVM instances. Specifying this option with\n-- a PV instance can make it unreachable.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1Attribute",
                        "name": "_mia1Attribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "-- | The name of the attribute.",
                        "typeExposed": "Maybe InstanceAttributeName",
                        "type": "Maybe InstanceAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mia1BlockDeviceMappings",
                        "name": "_mia1BlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingSpecificationList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "-- | Modifies the 'DeleteOnTermination' attribute for volumes that are currently\n-- attached. The volume must be owned by the caller. If no value is specified\n-- for 'DeleteOnTermination', the default is 'true' and the volume is deleted when\n-- the instance is terminated.\n--\n-- To add instance store volumes to an Amazon EBS-backed instance, you must add\n-- them when you launch the instance. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM Updating theBlock Device Mapping when Launching an Instance\u003e in the /Amazon Elastic ComputeCloud User Guide/.",
                        "typeExposed": "[InstanceBlockDeviceMappingSpecification]",
                        "type": "List \"item\" InstanceBlockDeviceMappingSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1DisableApiTermination",
                        "name": "_mia1DisableApiTermination",
                        "shape": "AttributeBooleanValue",
                        "locationName": "disableApiTermination",
                        "documentation": "-- | If the value is 'true', you can't terminate the instance using the Amazon EC2\n-- console, CLI, or API; otherwise, you can.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1DryRun",
                        "name": "_mia1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1EbsOptimized",
                        "name": "_mia1EbsOptimized",
                        "shape": "AttributeBooleanValue",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Specifies whether the instance is optimized for EBS I/O. This optimization\n-- provides dedicated throughput to Amazon EBS and an optimized configuration\n-- stack to provide optimal EBS I/O performance. This optimization isn't\n-- available with all instance types. Additional usage charges apply when using\n-- an EBS Optimized instance.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mia1Groups",
                        "name": "_mia1Groups",
                        "shape": "GroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": "-- | [EC2-VPC] Changes the security groups of the instance. You must specify at\n-- least one security group, even if it's just the default security group for\n-- the VPC. You must specify the security group ID, not the security group name.\n--\n-- For example, if you want the instance to be in sg-1a1a1a1a and sg-9b9b9b9b,\n-- specify 'GroupId.1=sg-1a1a1a1a' and 'GroupId.2=sg-9b9b9b9b'.",
                        "typeExposed": "[Text]",
                        "type": "List \"groupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "mia1InstanceId",
                        "name": "_mia1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1InstanceInitiatedShutdownBehavior",
                        "name": "_mia1InstanceInitiatedShutdownBehavior",
                        "shape": "AttributeValue",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "-- | Specifies whether an instance stops or terminates when you initiate shutdown\n-- from the instance (using the operating system command for system shutdown).",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1InstanceType",
                        "name": "_mia1InstanceType",
                        "shape": "AttributeValue",
                        "locationName": "instanceType",
                        "documentation": "-- | Changes the instance type to the specified value. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html Instance Types\u003e. If the instance type is not valid, the error returned is 'InvalidInstanceAttributeValue'.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1Kernel",
                        "name": "_mia1Kernel",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "-- | Changes the instance's kernel to the specified value. We recommend that you\n-- use PV-GRUB instead of kernels and RAM disks. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html PV-GRUB\u003e.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1Ramdisk",
                        "name": "_mia1Ramdisk",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "-- | Changes the instance's RAM disk to the specified value. We recommend that you\n-- use PV-GRUB instead of kernels and RAM disks. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html PV-GRUB\u003e.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1SourceDestCheck",
                        "name": "_mia1SourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "SourceDestCheck",
                        "documentation": "-- | Specifies whether source/destination checking is enabled. A value of 'true'\n-- means that checking is enabled, and 'false' means checking is disabled. This\n-- value must be 'false' for a NAT instance to perform NAT.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1SriovNetSupport",
                        "name": "_mia1SriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": "-- | Set to 'simple' to enable enhanced networking for the instance.\n--\n-- There is no way to disable enhanced networking at this time.\n--\n-- This option is supported only for HVM instances. Specifying this option with\n-- a PV instance can make it unreachable.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1UserData",
                        "name": "_mia1UserData",
                        "shape": "BlobAttributeValue",
                        "locationName": "userData",
                        "documentation": "-- | Changes the instance's user data to the specified value.",
                        "typeExposed": "Maybe BlobAttributeValue",
                        "type": "Maybe BlobAttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mia1Value",
                        "name": "_mia1Value",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "-- | A new value for the attribute. Use only with the 'kernel', 'ramdisk', 'userData', 'disableApiTermination', or 'intanceInitiateShutdownBehavior' attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "modifyNetworkInterfaceAttributeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ModifyNetworkInterfaceAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyNetworkInterfaceAttribute.html",
            "namespace": "Network.AWS.EC2.ModifyNetworkInterfaceAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ModifyNetworkInterfaceAttribute",
            "method": "post",
            "documentation": "-- | Modifies the specified network interface attribute. You can specify only one\n-- attribute at a time.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "modifyNetworkInterfaceAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "mniaNetworkInterfaceId",
                        "name": "_mniaNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "ModifyNetworkInterfaceAttribute",
                "query": [
                    {
                        "field": "_mniaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_mniaNetworkInterfaceId",
                        "locationName": "networkInterfaceId",
                        "type": "field"
                    },
                    {
                        "field": "_mniaDescription",
                        "locationName": "description",
                        "type": "field"
                    },
                    {
                        "field": "_mniaSourceDestCheck",
                        "locationName": "sourceDestCheck",
                        "type": "field"
                    },
                    {
                        "field": "_mniaGroups",
                        "locationName": "SecurityGroupId",
                        "type": "field"
                    },
                    {
                        "field": "_mniaAttachment",
                        "locationName": "attachment",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mniaDryRun",
                        "name": "_mniaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mniaDescription",
                        "name": "_mniaDescription",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "-- | A description for the network interface.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mniaSourceDestCheck",
                        "name": "_mniaSourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Indicates whether source/destination checking is enabled. A value of 'true'\n-- means checking is enabled, and 'false' means checking is disabled. This value\n-- must be 'false' for a NAT instance to perform NAT. For more information, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html NAT Instances\u003e in the /Amazon Virtual Private Cloud User Guide/.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mniaGroups",
                        "name": "_mniaGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "-- | Changes the security groups for the network interface. The new set of groups\n-- you specify replaces the current set. You must specify at least one group,\n-- even if it's just the default security group in the VPC. You must specify the\n-- ID of the security group, not the name.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mniaAttachment",
                        "name": "_mniaAttachment",
                        "shape": "NetworkInterfaceAttachmentChanges",
                        "locationName": "attachment",
                        "documentation": "-- | Information about the interface attachment. If modifying the 'delete on\n-- termination' attribute, you must specify the ID of the interface attachment.",
                        "typeExposed": "Maybe NetworkInterfaceAttachmentChanges",
                        "type": "Maybe NetworkInterfaceAttachmentChanges"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mniaAttachment",
                        "name": "_mniaAttachment",
                        "shape": "NetworkInterfaceAttachmentChanges",
                        "locationName": "attachment",
                        "documentation": "-- | Information about the interface attachment. If modifying the 'delete on\n-- termination' attribute, you must specify the ID of the interface attachment.",
                        "typeExposed": "Maybe NetworkInterfaceAttachmentChanges",
                        "type": "Maybe NetworkInterfaceAttachmentChanges"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mniaDescription",
                        "name": "_mniaDescription",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "-- | A description for the network interface.",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mniaDryRun",
                        "name": "_mniaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mniaGroups",
                        "name": "_mniaGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "-- | Changes the security groups for the network interface. The new set of groups\n-- you specify replaces the current set. You must specify at least one group,\n-- even if it's just the default security group in the VPC. You must specify the\n-- ID of the security group, not the name.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "mniaNetworkInterfaceId",
                        "name": "_mniaNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mniaSourceDestCheck",
                        "name": "_mniaSourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | Indicates whether source/destination checking is enabled. A value of 'true'\n-- means checking is enabled, and 'false' means checking is disabled. This value\n-- must be 'false' for a NAT instance to perform NAT. For more information, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html NAT Instances\u003e in the /Amazon Virtual Private Cloud User Guide/.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "modifyReservedInstancesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "mrirReservedInstancesModificationId",
                    "name": "_mrirReservedInstancesModificationId",
                    "shape": "String",
                    "locationName": "reservedInstancesModificationId",
                    "documentation": "-- | The ID for the modification.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ModifyReservedInstancesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mrirReservedInstancesModificationId",
                        "name": "_mrirReservedInstancesModificationId",
                        "shape": "String",
                        "locationName": "reservedInstancesModificationId",
                        "documentation": "-- | The ID for the modification.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mrirReservedInstancesModificationId",
                        "name": "_mrirReservedInstancesModificationId",
                        "shape": "String",
                        "locationName": "reservedInstancesModificationId",
                        "documentation": "-- | The ID for the modification.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyReservedInstances.html",
            "namespace": "Network.AWS.EC2.ModifyReservedInstances",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ModifyReservedInstances",
            "method": "post",
            "documentation": "-- | Modifies the Availability Zone, instance count, instance type, or network\n-- platform (EC2-Classic or EC2-VPC) of your Reserved Instances. The Reserved\n-- Instances to be modified must be identical, except for Availability Zone,\n-- network platform, and instance type.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html Modifying Reserved Instances\u003e in the Amazon Elastic\n-- Compute Cloud User Guide.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 24,
                "ctor": "modifyReservedInstances",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 42,
                "name": "ModifyReservedInstances",
                "query": [
                    {
                        "field": "_mriClientToken",
                        "locationName": "clientToken",
                        "type": "field"
                    },
                    {
                        "field": "_mriReservedInstancesIds",
                        "locationName": "ReservedInstancesId",
                        "type": "field"
                    },
                    {
                        "field": "_mriTargetConfigurations",
                        "locationName": "ReservedInstancesConfigurationSetItemType",
                        "type": "field"
                    }
                ],
                "locationPad": 42,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mriClientToken",
                        "name": "_mriClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | A unique, case-sensitive token you provide to ensure idempotency of your\n-- modification request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mriReservedInstancesIds",
                        "name": "_mriReservedInstancesIds",
                        "shape": "ReservedInstancesIdStringList",
                        "locationName": "ReservedInstancesId",
                        "documentation": "-- | The IDs of the Reserved Instances to modify.",
                        "typeExposed": "[Text]",
                        "type": "List \"ReservedInstancesId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mriTargetConfigurations",
                        "name": "_mriTargetConfigurations",
                        "shape": "ReservedInstancesConfigurationList",
                        "locationName": "ReservedInstancesConfigurationSetItemType",
                        "documentation": "-- | The configuration settings for the Reserved Instances to modify.",
                        "typeExposed": "[ReservedInstancesConfiguration]",
                        "type": "List \"item\" ReservedInstancesConfiguration"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mriClientToken",
                        "name": "_mriClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | A unique, case-sensitive token you provide to ensure idempotency of your\n-- modification request.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mriReservedInstancesIds",
                        "name": "_mriReservedInstancesIds",
                        "shape": "ReservedInstancesIdStringList",
                        "locationName": "ReservedInstancesId",
                        "documentation": "-- | The IDs of the Reserved Instances to modify.",
                        "typeExposed": "[Text]",
                        "type": "List \"ReservedInstancesId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mriTargetConfigurations",
                        "name": "_mriTargetConfigurations",
                        "shape": "ReservedInstancesConfigurationList",
                        "locationName": "ReservedInstancesConfigurationSetItemType",
                        "documentation": "-- | The configuration settings for the Reserved Instances to modify.",
                        "typeExposed": "[ReservedInstancesConfiguration]",
                        "type": "List \"item\" ReservedInstancesConfiguration"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "modifySnapshotAttributeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ModifySnapshotAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifySnapshotAttribute.html",
            "namespace": "Network.AWS.EC2.ModifySnapshotAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ModifySnapshotAttribute",
            "method": "post",
            "documentation": "-- | Adds or removes permission settings for the specified snapshot. You may add\n-- or remove specified AWS account IDs from a snapshot's list of create volume\n-- permissions, but you cannot do both in a single API call. If you need to both\n-- add and remove account IDs for a snapshot, you must use multiple API calls.\n--\n-- For more information on modifying snapshot permissions, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html Sharing Snapshots\u003e\n-- in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- Snapshots with AWS Marketplace product codes cannot be made public.\n--\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 26,
                "ctor": "modifySnapshotAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "msaSnapshotId",
                        "name": "_msaSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "-- | The ID of the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "ModifySnapshotAttribute",
                "query": [
                    {
                        "field": "_msaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_msaSnapshotId",
                        "locationName": "SnapshotId",
                        "type": "field"
                    },
                    {
                        "field": "_msaAttribute",
                        "locationName": "Attribute",
                        "type": "field"
                    },
                    {
                        "field": "_msaOperationType",
                        "locationName": "OperationType",
                        "type": "field"
                    },
                    {
                        "field": "_msaUserIds",
                        "locationName": "UserId",
                        "type": "field"
                    },
                    {
                        "field": "_msaGroupNames",
                        "locationName": "UserGroup",
                        "type": "field"
                    },
                    {
                        "field": "_msaCreateVolumePermission",
                        "locationName": "CreateVolumePermission",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "msaDryRun",
                        "name": "_msaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "msaAttribute",
                        "name": "_msaAttribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The snapshot attribute to modify.",
                        "typeExposed": "Maybe SnapshotAttributeName",
                        "type": "Maybe SnapshotAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "msaOperationType",
                        "name": "_msaOperationType",
                        "shape": "String",
                        "locationName": "OperationType",
                        "documentation": "-- | The type of operation to perform to the attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "msaUserIds",
                        "name": "_msaUserIds",
                        "shape": "UserIdStringList",
                        "locationName": "UserId",
                        "documentation": "-- | The account ID to modify for the snapshot.",
                        "typeExposed": "[Text]",
                        "type": "List \"UserId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "msaGroupNames",
                        "name": "_msaGroupNames",
                        "shape": "GroupNameStringList",
                        "locationName": "UserGroup",
                        "documentation": "-- | The group to modify for the snapshot.",
                        "typeExposed": "[Text]",
                        "type": "List \"GroupName\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "msaCreateVolumePermission",
                        "name": "_msaCreateVolumePermission",
                        "shape": "CreateVolumePermissionModifications",
                        "locationName": "CreateVolumePermission",
                        "documentation": "-- | A JSON representation of the snapshot attribute modification.",
                        "typeExposed": "Maybe CreateVolumePermissionModifications",
                        "type": "Maybe CreateVolumePermissionModifications"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "msaAttribute",
                        "name": "_msaAttribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The snapshot attribute to modify.",
                        "typeExposed": "Maybe SnapshotAttributeName",
                        "type": "Maybe SnapshotAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "msaCreateVolumePermission",
                        "name": "_msaCreateVolumePermission",
                        "shape": "CreateVolumePermissionModifications",
                        "locationName": "CreateVolumePermission",
                        "documentation": "-- | A JSON representation of the snapshot attribute modification.",
                        "typeExposed": "Maybe CreateVolumePermissionModifications",
                        "type": "Maybe CreateVolumePermissionModifications"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "msaDryRun",
                        "name": "_msaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "msaGroupNames",
                        "name": "_msaGroupNames",
                        "shape": "GroupNameStringList",
                        "locationName": "UserGroup",
                        "documentation": "-- | The group to modify for the snapshot.",
                        "typeExposed": "[Text]",
                        "type": "List \"GroupName\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "msaOperationType",
                        "name": "_msaOperationType",
                        "shape": "String",
                        "locationName": "OperationType",
                        "documentation": "-- | The type of operation to perform to the attribute.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "msaSnapshotId",
                        "name": "_msaSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "-- | The ID of the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "msaUserIds",
                        "name": "_msaUserIds",
                        "shape": "UserIdStringList",
                        "locationName": "UserId",
                        "documentation": "-- | The account ID to modify for the snapshot.",
                        "typeExposed": "[Text]",
                        "type": "List \"UserId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "modifySubnetAttributeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ModifySubnetAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifySubnetAttribute.html",
            "namespace": "Network.AWS.EC2.ModifySubnetAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ModifySubnetAttribute",
            "method": "post",
            "documentation": "-- | Modifies a subnet attribute.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "modifySubnetAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "msaSubnetId",
                        "name": "_msaSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "ModifySubnetAttribute",
                "query": [
                    {
                        "field": "_msaSubnetId",
                        "locationName": "subnetId",
                        "type": "field"
                    },
                    {
                        "field": "_msaMapPublicIpOnLaunch",
                        "locationName": "MapPublicIpOnLaunch",
                        "type": "field"
                    }
                ],
                "locationPad": 20,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "msaMapPublicIpOnLaunch",
                        "name": "_msaMapPublicIpOnLaunch",
                        "shape": "AttributeBooleanValue",
                        "locationName": "MapPublicIpOnLaunch",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "msaMapPublicIpOnLaunch",
                        "name": "_msaMapPublicIpOnLaunch",
                        "shape": "AttributeBooleanValue",
                        "locationName": "MapPublicIpOnLaunch",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "msaSubnetId",
                        "name": "_msaSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "-- | The ID of the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "modifyVolumeAttributeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ModifyVolumeAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyVolumeAttribute.html",
            "namespace": "Network.AWS.EC2.ModifyVolumeAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ModifyVolumeAttribute",
            "method": "post",
            "documentation": "-- | Modifies a volume attribute.\n--\n-- By default, all I/O operations for the volume are suspended when the data on\n-- the volume is determined to be potentially inconsistent, to prevent\n-- undetectable, latent data corruption. The I/O access to the volume can be\n-- resumed by first enabling I/O access and then checking the data consistency\n-- on your volume.\n--\n-- You can change the default behavior to resume I/O operations. We recommend\n-- that you change this only for boot volumes or for volumes that are stateless\n-- or disposable.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 16,
                "ctor": "modifyVolumeAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "mvaVolumeId",
                        "name": "_mvaVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "ModifyVolumeAttribute",
                "query": [
                    {
                        "field": "_mvaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_mvaVolumeId",
                        "locationName": "VolumeId",
                        "type": "field"
                    },
                    {
                        "field": "_mvaAutoEnableIO",
                        "locationName": "AutoEnableIO",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mvaDryRun",
                        "name": "_mvaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mvaAutoEnableIO",
                        "name": "_mvaAutoEnableIO",
                        "shape": "AttributeBooleanValue",
                        "locationName": "AutoEnableIO",
                        "documentation": "-- | Indicates whether the volume should be auto-enabled for I/O operations.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mvaAutoEnableIO",
                        "name": "_mvaAutoEnableIO",
                        "shape": "AttributeBooleanValue",
                        "locationName": "AutoEnableIO",
                        "documentation": "-- | Indicates whether the volume should be auto-enabled for I/O operations.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mvaDryRun",
                        "name": "_mvaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "mvaVolumeId",
                        "name": "_mvaVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "-- | The ID of the volume.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "modifyVpcAttributeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ModifyVpcAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ModifyVpcAttribute.html",
            "namespace": "Network.AWS.EC2.ModifyVpcAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ModifyVpcAttribute",
            "method": "post",
            "documentation": "-- | Modifies the specified attribute of the specified VPC.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 22,
                "ctor": "modifyVpcAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "mvaVpcId",
                        "name": "_mvaVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "ModifyVpcAttribute",
                "query": [
                    {
                        "field": "_mvaVpcId",
                        "locationName": "vpcId",
                        "type": "field"
                    },
                    {
                        "field": "_mvaEnableDnsSupport",
                        "locationName": "EnableDnsSupport",
                        "type": "field"
                    },
                    {
                        "field": "_mvaEnableDnsHostnames",
                        "locationName": "EnableDnsHostnames",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mvaEnableDnsSupport",
                        "name": "_mvaEnableDnsSupport",
                        "shape": "AttributeBooleanValue",
                        "locationName": "EnableDnsSupport",
                        "documentation": "-- | Indicates whether the DNS resolution is supported for the VPC. If enabled,\n-- queries to the Amazon provided DNS server at the 169.254.169.253 IP address,\n-- or the reserved IP address at the base of the VPC network range \"plus two\"\n-- will succeed. If disabled, the Amazon provided DNS service in the VPC that\n-- resolves public DNS hostnames to IP addresses is not enabled.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mvaEnableDnsHostnames",
                        "name": "_mvaEnableDnsHostnames",
                        "shape": "AttributeBooleanValue",
                        "locationName": "EnableDnsHostnames",
                        "documentation": "-- | Indicates whether the instances launched in the VPC get DNS hostnames. If\n-- enabled, instances in the VPC get DNS hostnames; otherwise, they do not.\n--\n-- You can only enable DNS hostnames if you also enable DNS support.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mvaEnableDnsHostnames",
                        "name": "_mvaEnableDnsHostnames",
                        "shape": "AttributeBooleanValue",
                        "locationName": "EnableDnsHostnames",
                        "documentation": "-- | Indicates whether the instances launched in the VPC get DNS hostnames. If\n-- enabled, instances in the VPC get DNS hostnames; otherwise, they do not.\n--\n-- You can only enable DNS hostnames if you also enable DNS support.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "mvaEnableDnsSupport",
                        "name": "_mvaEnableDnsSupport",
                        "shape": "AttributeBooleanValue",
                        "locationName": "EnableDnsSupport",
                        "documentation": "-- | Indicates whether the DNS resolution is supported for the VPC. If enabled,\n-- queries to the Amazon provided DNS server at the 169.254.169.253 IP address,\n-- or the reserved IP address at the base of the VPC network range \"plus two\"\n-- will succeed. If disabled, the Amazon provided DNS service in the VPC that\n-- resolves public DNS hostnames to IP addresses is not enabled.",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "mvaVpcId",
                        "name": "_mvaVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "-- | The ID of the VPC.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "monitorInstancesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "mirInstanceMonitorings",
                    "name": "_mirInstanceMonitorings",
                    "shape": "InstanceMonitoringList",
                    "locationName": "instancesSet",
                    "documentation": "-- | Monitoring information for one or more instances.",
                    "typeExposed": "[InstanceMonitoring]",
                    "type": "List \"item\" InstanceMonitoring"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "MonitorInstancesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mirInstanceMonitorings",
                        "name": "_mirInstanceMonitorings",
                        "shape": "InstanceMonitoringList",
                        "locationName": "instancesSet",
                        "documentation": "-- | Monitoring information for one or more instances.",
                        "typeExposed": "[InstanceMonitoring]",
                        "type": "List \"item\" InstanceMonitoring"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "mirInstanceMonitorings",
                        "name": "_mirInstanceMonitorings",
                        "shape": "InstanceMonitoringList",
                        "locationName": "instancesSet",
                        "documentation": "-- | Monitoring information for one or more instances.",
                        "typeExposed": "[InstanceMonitoring]",
                        "type": "List \"item\" InstanceMonitoring"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-MonitorInstances.html",
            "namespace": "Network.AWS.EC2.MonitorInstances",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "MonitorInstances",
            "method": "post",
            "documentation": "-- | Enables monitoring for a running instance. For more information about\n-- monitoring instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html Monitoring Your Instances and Volumes\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "monitorInstances",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "MonitorInstances",
                "query": [
                    {
                        "field": "_miDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_miInstanceIds",
                        "locationName": "InstanceId",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miDryRun",
                        "name": "_miDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "miInstanceIds",
                        "name": "_miInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "miDryRun",
                        "name": "_miDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "miInstanceIds",
                        "name": "_miInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "purchaseReservedInstancesOfferingResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "priorReservedInstancesId",
                    "name": "_priorReservedInstancesId",
                    "shape": "String",
                    "locationName": "reservedInstancesId",
                    "documentation": "-- | The IDs of the purchased Reserved Instances.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "PurchaseReservedInstancesOfferingResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "priorReservedInstancesId",
                        "name": "_priorReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The IDs of the purchased Reserved Instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "priorReservedInstancesId",
                        "name": "_priorReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "-- | The IDs of the purchased Reserved Instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-PurchaseReservedInstancesOffering.html",
            "namespace": "Network.AWS.EC2.PurchaseReservedInstancesOffering",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "PurchaseReservedInstancesOffering",
            "method": "post",
            "documentation": "-- | Purchases a Reserved Instance for use with your account. With Amazon EC2\n-- Reserved Instances, you obtain a capacity reservation for a certain instance\n-- configuration over a specified period of time. You pay a lower usage rate\n-- than with On-Demand instances for the time that you actually use the capacity\n-- reservation.\n--\n-- Use 'DescribeReservedInstancesOfferings' to get a list of Reserved Instance\n-- offerings that match your specifications. After you've purchased a Reserved\n-- Instance, you can check for your new Reserved Instance with 'DescribeReservedInstances'.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html Reserved Instances\u003e and \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html Reserved InstanceMarketplace\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 32,
                "ctor": "purchaseReservedInstancesOffering",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "prioReservedInstancesOfferingId",
                        "name": "_prioReservedInstancesOfferingId",
                        "shape": "String",
                        "locationName": "ReservedInstancesOfferingId",
                        "documentation": "-- | The ID of the Reserved Instance offering to purchase.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "prioInstanceCount",
                        "name": "_prioInstanceCount",
                        "shape": "Integer",
                        "locationName": "InstanceCount",
                        "documentation": "-- | The number of Reserved Instances to purchase.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 28,
                "name": "PurchaseReservedInstancesOffering",
                "query": [
                    {
                        "field": "_prioDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_prioReservedInstancesOfferingId",
                        "locationName": "ReservedInstancesOfferingId",
                        "type": "field"
                    },
                    {
                        "field": "_prioInstanceCount",
                        "locationName": "InstanceCount",
                        "type": "field"
                    },
                    {
                        "field": "_prioLimitPrice",
                        "locationName": "limitPrice",
                        "type": "field"
                    }
                ],
                "locationPad": 28,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "prioDryRun",
                        "name": "_prioDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "prioLimitPrice",
                        "name": "_prioLimitPrice",
                        "shape": "ReservedInstanceLimitPrice",
                        "locationName": "limitPrice",
                        "documentation": "-- | Specified for Reserved Instance Marketplace offerings to limit the total\n-- order and ensure that the Reserved Instances are not purchased at unexpected\n-- prices.",
                        "typeExposed": "Maybe ReservedInstanceLimitPrice",
                        "type": "Maybe ReservedInstanceLimitPrice"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "prioDryRun",
                        "name": "_prioDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "prioInstanceCount",
                        "name": "_prioInstanceCount",
                        "shape": "Integer",
                        "locationName": "InstanceCount",
                        "documentation": "-- | The number of Reserved Instances to purchase.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "prioLimitPrice",
                        "name": "_prioLimitPrice",
                        "shape": "ReservedInstanceLimitPrice",
                        "locationName": "limitPrice",
                        "documentation": "-- | Specified for Reserved Instance Marketplace offerings to limit the total\n-- order and ensure that the Reserved Instances are not purchased at unexpected\n-- prices.",
                        "typeExposed": "Maybe ReservedInstanceLimitPrice",
                        "type": "Maybe ReservedInstanceLimitPrice"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "prioReservedInstancesOfferingId",
                        "name": "_prioReservedInstancesOfferingId",
                        "shape": "String",
                        "locationName": "ReservedInstancesOfferingId",
                        "documentation": "-- | The ID of the Reserved Instance offering to purchase.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "rebootInstancesResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RebootInstancesResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RebootInstances.html",
            "namespace": "Network.AWS.EC2.RebootInstances",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "RebootInstances",
            "method": "post",
            "documentation": "-- | Requests a reboot of one or more instances. This operation is asynchronous;\n-- it only queues a request to reboot the specified instances. The operation\n-- succeeds if the instances are valid and belong to you. Requests to reboot\n-- terminated instances are ignored.\n--\n-- If a Linux/Unix instance does not cleanly shut down within four minutes,\n-- Amazon EC2 performs a hard reboot.\n--\n-- For more information about troubleshooting, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html Getting Console Output andRebooting Instances\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "rebootInstances",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "RebootInstances",
                "query": [
                    {
                        "field": "_ri2DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ri2InstanceIds",
                        "locationName": "InstanceId",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri2DryRun",
                        "name": "_ri2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ri2InstanceIds",
                        "name": "_ri2InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri2DryRun",
                        "name": "_ri2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ri2InstanceIds",
                        "name": "_ri2InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "registerImageResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "rirImageId",
                    "name": "_rirImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "-- | The ID of the newly registered AMI.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "RegisterImageResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rirImageId",
                        "name": "_rirImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the newly registered AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rirImageId",
                        "name": "_rirImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "-- | The ID of the newly registered AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RegisterImage.html",
            "namespace": "Network.AWS.EC2.RegisterImage",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "RegisterImage",
            "method": "post",
            "documentation": "-- | Registers an AMI. When you're creating an AMI, this is the final step you\n-- must complete before you can launch an instance from the AMI. For more\n-- information about creating AMIs, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html Creating Your Own AMIs\u003e in the /AmazonElastic Compute Cloud User Guide/.\n--\n-- For Amazon EBS-backed instances, 'CreateImage' creates and registers the AMI\n-- in a single request, so you don't have to register the AMI yourself.\n--\n-- You can also use 'RegisterImage' to create an Amazon EBS-backed AMI from a\n-- snapshot of a root device volume. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_LaunchingInstanceFromSnapshot.html Launching anInstance from a Snapshot\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- If needed, you can deregister an AMI at any time. Any modifications you make\n-- to an AMI backed by an instance store volume invalidates its registration. If\n-- you make changes to an image, deregister the previous image and register the\n-- new image.\n--\n-- You can't register an image where a secondary (non-root) snapshot has AWS\n-- Marketplace product codes.\n--",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "registerImage",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ri1Name",
                        "name": "_ri1Name",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "-- | A name for your AMI.\n--\n-- Constraints: 3-128 alphanumeric characters, parentheses (()), square\n-- brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single\n-- quotes ('), at-signs (@), or underscores(_)",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "RegisterImage",
                "query": [
                    {
                        "field": "_ri1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ri1ImageLocation",
                        "locationName": "ImageLocation",
                        "type": "field"
                    },
                    {
                        "field": "_ri1Name",
                        "locationName": "name",
                        "type": "field"
                    },
                    {
                        "field": "_ri1Description",
                        "locationName": "description",
                        "type": "field"
                    },
                    {
                        "field": "_ri1Architecture",
                        "locationName": "architecture",
                        "type": "field"
                    },
                    {
                        "field": "_ri1KernelId",
                        "locationName": "kernelId",
                        "type": "field"
                    },
                    {
                        "field": "_ri1RamdiskId",
                        "locationName": "ramdiskId",
                        "type": "field"
                    },
                    {
                        "field": "_ri1RootDeviceName",
                        "locationName": "rootDeviceName",
                        "type": "field"
                    },
                    {
                        "field": "_ri1BlockDeviceMappings",
                        "locationName": "BlockDeviceMapping",
                        "type": "field"
                    },
                    {
                        "field": "_ri1VirtualizationType",
                        "locationName": "virtualizationType",
                        "type": "field"
                    },
                    {
                        "field": "_ri1SriovNetSupport",
                        "locationName": "sriovNetSupport",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1DryRun",
                        "name": "_ri1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1ImageLocation",
                        "name": "_ri1ImageLocation",
                        "shape": "String",
                        "locationName": "ImageLocation",
                        "documentation": "-- | The full path to your AMI manifest in Amazon S3 storage.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1Description",
                        "name": "_ri1Description",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description for your AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1Architecture",
                        "name": "_ri1Architecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "-- | The architecture of the AMI.\n--\n-- Default: For Amazon EBS-backed AMIs, 'i386'. For instance store-backed AMIs,\n-- the architecture specified in the manifest file.",
                        "typeExposed": "Maybe ArchitectureValues",
                        "type": "Maybe ArchitectureValues"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1KernelId",
                        "name": "_ri1KernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "-- | The ID of the kernel.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1RamdiskId",
                        "name": "_ri1RamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "-- | The ID of the RAM disk.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1RootDeviceName",
                        "name": "_ri1RootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "-- | The name of the root device (for example, '/dev/sda1', or 'xvda').",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ri1BlockDeviceMappings",
                        "name": "_ri1BlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "BlockDeviceMapping",
                        "documentation": "-- | One or more block device mapping entries.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"BlockDeviceMapping\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1VirtualizationType",
                        "name": "_ri1VirtualizationType",
                        "shape": "String",
                        "locationName": "virtualizationType",
                        "documentation": "-- | The type of virtualization.\n--\n-- Default: 'paravirtual'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1SriovNetSupport",
                        "name": "_ri1SriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "-- | Set to 'simple' to enable enhanced networking for the AMI and any instances\n-- that you launch from the AMI.\n--\n-- There is no way to disable enhanced networking at this time.\n--\n-- This option is supported only for HVM AMIs. Specifying this option with a PV\n-- AMI can make instances launched from the AMI unreachable.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1Architecture",
                        "name": "_ri1Architecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "-- | The architecture of the AMI.\n--\n-- Default: For Amazon EBS-backed AMIs, 'i386'. For instance store-backed AMIs,\n-- the architecture specified in the manifest file.",
                        "typeExposed": "Maybe ArchitectureValues",
                        "type": "Maybe ArchitectureValues"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "ri1BlockDeviceMappings",
                        "name": "_ri1BlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "BlockDeviceMapping",
                        "documentation": "-- | One or more block device mapping entries.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"BlockDeviceMapping\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1Description",
                        "name": "_ri1Description",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | A description for your AMI.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1DryRun",
                        "name": "_ri1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1ImageLocation",
                        "name": "_ri1ImageLocation",
                        "shape": "String",
                        "locationName": "ImageLocation",
                        "documentation": "-- | The full path to your AMI manifest in Amazon S3 storage.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1KernelId",
                        "name": "_ri1KernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "-- | The ID of the kernel.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ri1Name",
                        "name": "_ri1Name",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "-- | A name for your AMI.\n--\n-- Constraints: 3-128 alphanumeric characters, parentheses (()), square\n-- brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single\n-- quotes ('), at-signs (@), or underscores(_)",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1RamdiskId",
                        "name": "_ri1RamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "-- | The ID of the RAM disk.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1RootDeviceName",
                        "name": "_ri1RootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "-- | The name of the root device (for example, '/dev/sda1', or 'xvda').",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1SriovNetSupport",
                        "name": "_ri1SriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "-- | Set to 'simple' to enable enhanced networking for the AMI and any instances\n-- that you launch from the AMI.\n--\n-- There is no way to disable enhanced networking at this time.\n--\n-- This option is supported only for HVM AMIs. Specifying this option with a PV\n-- AMI can make instances launched from the AMI unreachable.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ri1VirtualizationType",
                        "name": "_ri1VirtualizationType",
                        "shape": "String",
                        "locationName": "virtualizationType",
                        "documentation": "-- | The type of virtualization.\n--\n-- Default: 'paravirtual'",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "rejectVpcPeeringConnectionResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "rvpcrReturn",
                    "name": "_rvpcrReturn",
                    "shape": "Boolean",
                    "locationName": "return",
                    "documentation": "-- | Returns 'true' if the request succeeds; otherwise, it returns an error.",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "RejectVpcPeeringConnectionResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rvpcrReturn",
                        "name": "_rvpcrReturn",
                        "shape": "Boolean",
                        "locationName": "return",
                        "documentation": "-- | Returns 'true' if the request succeeds; otherwise, it returns an error.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rvpcrReturn",
                        "name": "_rvpcrReturn",
                        "shape": "Boolean",
                        "locationName": "return",
                        "documentation": "-- | Returns 'true' if the request succeeds; otherwise, it returns an error.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RejectVpcPeeringConnection.html",
            "namespace": "Network.AWS.EC2.RejectVpcPeeringConnection",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "RejectVpcPeeringConnection",
            "method": "post",
            "documentation": "-- | Rejects a VPC peering connection request. The VPC peering connection must be\n-- in the 'pending-acceptance' state. Use the 'DescribeVpcPeeringConnections'\n-- request to view your outstanding VPC peering connection requests. To delete\n-- an active VPC peering connection, or to delete a VPC peering connection\n-- request that you initiated, use 'DeleteVpcPeeringConnection'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "rejectVpcPeeringConnection",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rvpcVpcPeeringConnectionId",
                        "name": "_rvpcVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of the VPC peering connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "RejectVpcPeeringConnection",
                "query": [
                    {
                        "field": "_rvpcDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_rvpcVpcPeeringConnectionId",
                        "locationName": "vpcPeeringConnectionId",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rvpcDryRun",
                        "name": "_rvpcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rvpcDryRun",
                        "name": "_rvpcDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rvpcVpcPeeringConnectionId",
                        "name": "_rvpcVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of the VPC peering connection.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "releaseAddressResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ReleaseAddressResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReleaseAddress.html",
            "namespace": "Network.AWS.EC2.ReleaseAddress",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ReleaseAddress",
            "method": "post",
            "documentation": "-- | Releases the specified Elastic IP address.\n--\n-- After releasing an Elastic IP address, it is released to the IP address pool\n-- and might be unavailable to you. Be sure to update your DNS records and any\n-- servers or devices that communicate with the address. If you attempt to\n-- release an Elastic IP address that you already released, you'll get an 'AuthFailure' error if the address is already allocated to another AWS account.\n--\n-- [EC2-Classic, default VPC] Releasing an Elastic IP address automatically\n-- disassociates it from any instance that it's associated with. To disassociate\n-- an Elastic IP address without releasing it, use 'DisassociateAddress'.\n--\n-- [Nondefault VPC] You must use 'DisassociateAddress' to disassociate the\n-- Elastic IP address before you try to release it. Otherwise, Amazon EC2\n-- returns an error ('InvalidIPAddress.InUse').",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "releaseAddress",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "ReleaseAddress",
                "query": [
                    {
                        "field": "_raDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_raPublicIp",
                        "locationName": "PublicIp",
                        "type": "field"
                    },
                    {
                        "field": "_raAllocationId",
                        "locationName": "AllocationId",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "raDryRun",
                        "name": "_raDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "raPublicIp",
                        "name": "_raPublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "-- | [EC2-Classic] The Elastic IP address. Required for EC2-Classic.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "raAllocationId",
                        "name": "_raAllocationId",
                        "shape": "String",
                        "locationName": "AllocationId",
                        "documentation": "-- | [EC2-VPC] The allocation ID. Required for EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "raAllocationId",
                        "name": "_raAllocationId",
                        "shape": "String",
                        "locationName": "AllocationId",
                        "documentation": "-- | [EC2-VPC] The allocation ID. Required for EC2-VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "raDryRun",
                        "name": "_raDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "raPublicIp",
                        "name": "_raPublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "-- | [EC2-Classic] The Elastic IP address. Required for EC2-Classic.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "replaceNetworkAclAssociationResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "rnaarNewAssociationId",
                    "name": "_rnaarNewAssociationId",
                    "shape": "String",
                    "locationName": "newAssociationId",
                    "documentation": "-- | The ID of the new association.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ReplaceNetworkAclAssociationResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rnaarNewAssociationId",
                        "name": "_rnaarNewAssociationId",
                        "shape": "String",
                        "locationName": "newAssociationId",
                        "documentation": "-- | The ID of the new association.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rnaarNewAssociationId",
                        "name": "_rnaarNewAssociationId",
                        "shape": "String",
                        "locationName": "newAssociationId",
                        "documentation": "-- | The ID of the new association.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReplaceNetworkAclAssociation.html",
            "namespace": "Network.AWS.EC2.ReplaceNetworkAclAssociation",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ReplaceNetworkAclAssociation",
            "method": "post",
            "documentation": "-- | Changes which network ACL a subnet is associated with. By default when you\n-- create a subnet, it's automatically associated with the default network ACL.\n-- For more information about network ACLs, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html Network ACLs\u003e in the /AmazonVirtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "replaceNetworkAclAssociation",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaaAssociationId",
                        "name": "_rnaaAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The ID of the current association between the original network ACL and the\n-- subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaaNetworkAclId",
                        "name": "_rnaaNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the new network ACL to associate with the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "ReplaceNetworkAclAssociation",
                "query": [
                    {
                        "field": "_rnaaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_rnaaAssociationId",
                        "locationName": "associationId",
                        "type": "field"
                    },
                    {
                        "field": "_rnaaNetworkAclId",
                        "locationName": "networkAclId",
                        "type": "field"
                    }
                ],
                "locationPad": 14,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rnaaDryRun",
                        "name": "_rnaaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaaAssociationId",
                        "name": "_rnaaAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The ID of the current association between the original network ACL and the\n-- subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rnaaDryRun",
                        "name": "_rnaaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaaNetworkAclId",
                        "name": "_rnaaNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the new network ACL to associate with the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "replaceNetworkAclEntryResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ReplaceNetworkAclEntryResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReplaceNetworkAclEntry.html",
            "namespace": "Network.AWS.EC2.ReplaceNetworkAclEntry",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ReplaceNetworkAclEntry",
            "method": "post",
            "documentation": "-- | Replaces an entry (rule) in a network ACL. For more information about network\n-- ACLs, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html Network ACLs\u003e in the /Amazon Virtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "replaceNetworkAclEntry",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeNetworkAclId",
                        "name": "_rnaeNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the ACL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeRuleNumber",
                        "name": "_rnaeRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "-- | The rule number of the entry to replace.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeProtocol",
                        "name": "_rnaeProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "-- | The IP protocol. You can specify 'all' or '-1' to mean all protocols.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeRuleAction",
                        "name": "_rnaeRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "-- | Indicates whether to allow or deny the traffic that matches the rule.",
                        "typeExposed": "RuleAction",
                        "type": "RuleAction"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeEgress",
                        "name": "_rnaeEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "-- | Indicates whether to replace the egress rule.\n--\n-- Default: If no value is specified, we replace the ingress rule.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeCidrBlock",
                        "name": "_rnaeCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The network range to allow or deny, in CIDR notation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "ReplaceNetworkAclEntry",
                "query": [
                    {
                        "field": "_rnaeDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_rnaeNetworkAclId",
                        "locationName": "networkAclId",
                        "type": "field"
                    },
                    {
                        "field": "_rnaeRuleNumber",
                        "locationName": "ruleNumber",
                        "type": "field"
                    },
                    {
                        "field": "_rnaeProtocol",
                        "locationName": "protocol",
                        "type": "field"
                    },
                    {
                        "field": "_rnaeRuleAction",
                        "locationName": "ruleAction",
                        "type": "field"
                    },
                    {
                        "field": "_rnaeEgress",
                        "locationName": "egress",
                        "type": "field"
                    },
                    {
                        "field": "_rnaeCidrBlock",
                        "locationName": "cidrBlock",
                        "type": "field"
                    },
                    {
                        "field": "_rnaeIcmpTypeCode",
                        "locationName": "Icmp",
                        "type": "field"
                    },
                    {
                        "field": "_rnaePortRange",
                        "locationName": "portRange",
                        "type": "field"
                    }
                ],
                "locationPad": 13,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rnaeDryRun",
                        "name": "_rnaeDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rnaeIcmpTypeCode",
                        "name": "_rnaeIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "Icmp",
                        "documentation": "-- | ICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP) for\n-- the protocol.",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rnaePortRange",
                        "name": "_rnaePortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "-- | TCP or UDP protocols: The range of ports the rule applies to. Required if\n-- specifying 6 (TCP) or 17 (UDP) for the protocol.",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeCidrBlock",
                        "name": "_rnaeCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "-- | The network range to allow or deny, in CIDR notation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rnaeDryRun",
                        "name": "_rnaeDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeEgress",
                        "name": "_rnaeEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "-- | Indicates whether to replace the egress rule.\n--\n-- Default: If no value is specified, we replace the ingress rule.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rnaeIcmpTypeCode",
                        "name": "_rnaeIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "Icmp",
                        "documentation": "-- | ICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP) for\n-- the protocol.",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeNetworkAclId",
                        "name": "_rnaeNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "-- | The ID of the ACL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rnaePortRange",
                        "name": "_rnaePortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "-- | TCP or UDP protocols: The range of ports the rule applies to. Required if\n-- specifying 6 (TCP) or 17 (UDP) for the protocol.",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeProtocol",
                        "name": "_rnaeProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "-- | The IP protocol. You can specify 'all' or '-1' to mean all protocols.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeRuleAction",
                        "name": "_rnaeRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "-- | Indicates whether to allow or deny the traffic that matches the rule.",
                        "typeExposed": "RuleAction",
                        "type": "RuleAction"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rnaeRuleNumber",
                        "name": "_rnaeRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "-- | The rule number of the entry to replace.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "replaceRouteResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ReplaceRouteResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReplaceRoute.html",
            "namespace": "Network.AWS.EC2.ReplaceRoute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ReplaceRoute",
            "method": "post",
            "documentation": "-- | Replaces an existing route within a route table in a VPC. You must provide\n-- only one of the following: Internet gateway or virtual private gateway, NAT\n-- instance, VPC peering connection, or network interface.\n--\n-- For more information about route tables, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html Route Tables\u003e in the /AmazonVirtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "replaceRoute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rrRouteTableId",
                        "name": "_rrRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rrDestinationCidrBlock",
                        "name": "_rrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "-- | The CIDR address block used for the destination match. The value you provide\n-- must match the CIDR of an existing route in the table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 23,
                "name": "ReplaceRoute",
                "query": [
                    {
                        "field": "_rrDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_rrRouteTableId",
                        "locationName": "routeTableId",
                        "type": "field"
                    },
                    {
                        "field": "_rrDestinationCidrBlock",
                        "locationName": "destinationCidrBlock",
                        "type": "field"
                    },
                    {
                        "field": "_rrGatewayId",
                        "locationName": "gatewayId",
                        "type": "field"
                    },
                    {
                        "field": "_rrInstanceId",
                        "locationName": "instanceId",
                        "type": "field"
                    },
                    {
                        "field": "_rrNetworkInterfaceId",
                        "locationName": "networkInterfaceId",
                        "type": "field"
                    },
                    {
                        "field": "_rrVpcPeeringConnectionId",
                        "locationName": "vpcPeeringConnectionId",
                        "type": "field"
                    }
                ],
                "locationPad": 23,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrDryRun",
                        "name": "_rrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrGatewayId",
                        "name": "_rrGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "-- | The ID of an Internet gateway or virtual private gateway.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrInstanceId",
                        "name": "_rrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of a NAT instance in your VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrNetworkInterfaceId",
                        "name": "_rrNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of a network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrVpcPeeringConnectionId",
                        "name": "_rrVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of a VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rrDestinationCidrBlock",
                        "name": "_rrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "-- | The CIDR address block used for the destination match. The value you provide\n-- must match the CIDR of an existing route in the table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrDryRun",
                        "name": "_rrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrGatewayId",
                        "name": "_rrGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "-- | The ID of an Internet gateway or virtual private gateway.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrInstanceId",
                        "name": "_rrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of a NAT instance in your VPC.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrNetworkInterfaceId",
                        "name": "_rrNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of a network interface.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rrRouteTableId",
                        "name": "_rrRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the route table.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrVpcPeeringConnectionId",
                        "name": "_rrVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "-- | The ID of a VPC peering connection.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "replaceRouteTableAssociationResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "monoid": false,
                    "protocol": "ec2",
                    "flattened": false,
                    "required": false,
                    "lens": "rrtarNewAssociationId",
                    "name": "_rrtarNewAssociationId",
                    "shape": "String",
                    "locationName": "newAssociationId",
                    "documentation": "-- | The ID of the new association.",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ReplaceRouteTableAssociationResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrtarNewAssociationId",
                        "name": "_rrtarNewAssociationId",
                        "shape": "String",
                        "locationName": "newAssociationId",
                        "documentation": "-- | The ID of the new association.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrtarNewAssociationId",
                        "name": "_rrtarNewAssociationId",
                        "shape": "String",
                        "locationName": "newAssociationId",
                        "documentation": "-- | The ID of the new association.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReplaceRouteTableAssociation.html",
            "namespace": "Network.AWS.EC2.ReplaceRouteTableAssociation",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ReplaceRouteTableAssociation",
            "method": "post",
            "documentation": "-- | Changes the route table associated with a given subnet in a VPC. After the\n-- operation completes, the subnet uses the routes in the new route table it's\n-- associated with. For more information about route tables, see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html Route Tables\u003e in\n-- the /Amazon Virtual Private Cloud User Guide/.\n--\n-- You can also use ReplaceRouteTableAssociation to change which table is the\n-- main route table in the VPC. You just specify the main route table's\n-- association ID and the route table to be the new main route table.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "replaceRouteTableAssociation",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rrtaAssociationId",
                        "name": "_rrtaAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The association ID.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rrtaRouteTableId",
                        "name": "_rrtaRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the new route table to associate with the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "ReplaceRouteTableAssociation",
                "query": [
                    {
                        "field": "_rrtaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_rrtaAssociationId",
                        "locationName": "associationId",
                        "type": "field"
                    },
                    {
                        "field": "_rrtaRouteTableId",
                        "locationName": "routeTableId",
                        "type": "field"
                    }
                ],
                "locationPad": 14,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrtaDryRun",
                        "name": "_rrtaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rrtaAssociationId",
                        "name": "_rrtaAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "-- | The association ID.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rrtaDryRun",
                        "name": "_rrtaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rrtaRouteTableId",
                        "name": "_rrtaRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "-- | The ID of the new route table to associate with the subnet.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "reportInstanceStatusResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ReportInstanceStatusResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ReportInstanceStatus.html",
            "namespace": "Network.AWS.EC2.ReportInstanceStatus",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ReportInstanceStatus",
            "method": "post",
            "documentation": "-- | Submits feedback about the status of an instance. The instance must be in the 'running' state. If your experience with the instance differs from the instance\n-- status returned by 'DescribeInstanceStatus', use 'ReportInstanceStatus' to report\n-- your experience with the instance. Amazon EC2 collects this information to\n-- improve the accuracy of status checks.\n--\n-- Use of this action does not change the value returned by 'DescribeInstanceStatus'.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "reportInstanceStatus",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "risStatus",
                        "name": "_risStatus",
                        "shape": "ReportStatusType",
                        "locationName": "status",
                        "documentation": "-- | The status of all instances listed.",
                        "typeExposed": "ReportStatusType",
                        "type": "ReportStatusType"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "ReportInstanceStatus",
                "query": [
                    {
                        "field": "_risDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_risInstances",
                        "locationName": "instanceId",
                        "type": "field"
                    },
                    {
                        "field": "_risStatus",
                        "locationName": "status",
                        "type": "field"
                    },
                    {
                        "field": "_risStartTime",
                        "locationName": "startTime",
                        "type": "field"
                    },
                    {
                        "field": "_risEndTime",
                        "locationName": "endTime",
                        "type": "field"
                    },
                    {
                        "field": "_risReasonCodes",
                        "locationName": "reasonCode",
                        "type": "field"
                    },
                    {
                        "field": "_risDescription",
                        "locationName": "description",
                        "type": "field"
                    }
                ],
                "locationPad": 12,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "risDryRun",
                        "name": "_risDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "risInstances",
                        "name": "_risInstances",
                        "shape": "InstanceIdStringList",
                        "locationName": "instanceId",
                        "documentation": "-- | One or more instances.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "risStartTime",
                        "name": "_risStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "-- | The time at which the reported instance health state began.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "risEndTime",
                        "name": "_risEndTime",
                        "shape": "DateTime",
                        "locationName": "endTime",
                        "documentation": "-- | The time at which the reported instance health state ended.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "risReasonCodes",
                        "name": "_risReasonCodes",
                        "shape": "ReasonCodesList",
                        "locationName": "reasonCode",
                        "documentation": "-- | One or more reason codes that describes the health state of your instance.\n--\n-- 'instance-stuck-in-state': My instance is stuck in a state.\n--\n-- 'unresponsive': My instance is unresponsive.\n--\n-- 'not-accepting-credentials': My instance is not accepting my credentials.\n--\n-- 'password-not-available': A password is not available for my instance.\n--\n-- 'performance-network': My instance is experiencing performance problems which\n-- I believe are network related.\n--\n-- 'performance-instance-store': My instance is experiencing performance problems\n-- which I believe are related to the instance stores.\n--\n-- 'performance-ebs-volume': My instance is experiencing performance problems\n-- which I believe are related to an EBS volume.\n--\n-- 'performance-other': My instance is experiencing performance problems.\n--\n-- 'other': [explain using the description parameter]\n--\n--",
                        "typeExposed": "[ReportInstanceReasonCodes]",
                        "type": "List \"item\" ReportInstanceReasonCodes"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "risDescription",
                        "name": "_risDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | Descriptive text about the health state of your instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "risDescription",
                        "name": "_risDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "-- | Descriptive text about the health state of your instance.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "risDryRun",
                        "name": "_risDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "risEndTime",
                        "name": "_risEndTime",
                        "shape": "DateTime",
                        "locationName": "endTime",
                        "documentation": "-- | The time at which the reported instance health state ended.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "risInstances",
                        "name": "_risInstances",
                        "shape": "InstanceIdStringList",
                        "locationName": "instanceId",
                        "documentation": "-- | One or more instances.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "risReasonCodes",
                        "name": "_risReasonCodes",
                        "shape": "ReasonCodesList",
                        "locationName": "reasonCode",
                        "documentation": "-- | One or more reason codes that describes the health state of your instance.\n--\n-- 'instance-stuck-in-state': My instance is stuck in a state.\n--\n-- 'unresponsive': My instance is unresponsive.\n--\n-- 'not-accepting-credentials': My instance is not accepting my credentials.\n--\n-- 'password-not-available': A password is not available for my instance.\n--\n-- 'performance-network': My instance is experiencing performance problems which\n-- I believe are network related.\n--\n-- 'performance-instance-store': My instance is experiencing performance problems\n-- which I believe are related to the instance stores.\n--\n-- 'performance-ebs-volume': My instance is experiencing performance problems\n-- which I believe are related to an EBS volume.\n--\n-- 'performance-other': My instance is experiencing performance problems.\n--\n-- 'other': [explain using the description parameter]\n--\n--",
                        "typeExposed": "[ReportInstanceReasonCodes]",
                        "type": "List \"item\" ReportInstanceReasonCodes"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "risStartTime",
                        "name": "_risStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "-- | The time at which the reported instance health state began.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "risStatus",
                        "name": "_risStatus",
                        "shape": "ReportStatusType",
                        "locationName": "status",
                        "documentation": "-- | The status of all instances listed.",
                        "typeExposed": "ReportStatusType",
                        "type": "ReportStatusType"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "requestSpotInstancesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "rsirSpotInstanceRequests",
                    "name": "_rsirSpotInstanceRequests",
                    "shape": "SpotInstanceRequestList",
                    "locationName": "spotInstanceRequestSet",
                    "documentation": "-- | Information about the Spot Instance request.",
                    "typeExposed": "[SpotInstanceRequest]",
                    "type": "List \"item\" SpotInstanceRequest"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "RequestSpotInstancesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rsirSpotInstanceRequests",
                        "name": "_rsirSpotInstanceRequests",
                        "shape": "SpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "-- | Information about the Spot Instance request.",
                        "typeExposed": "[SpotInstanceRequest]",
                        "type": "List \"item\" SpotInstanceRequest"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rsirSpotInstanceRequests",
                        "name": "_rsirSpotInstanceRequests",
                        "shape": "SpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "-- | Information about the Spot Instance request.",
                        "typeExposed": "[SpotInstanceRequest]",
                        "type": "List \"item\" SpotInstanceRequest"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RequestSpotInstances.html",
            "namespace": "Network.AWS.EC2.RequestSpotInstances",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "RequestSpotInstances",
            "method": "post",
            "documentation": "-- | Creates a Spot Instance request. Spot Instances are instances that Amazon EC2\n-- starts on your behalf when the maximum price that you specify exceeds the\n-- current Spot Price. Amazon EC2 periodically sets the Spot Price based on\n-- available Spot Instance capacity and current Spot Instance requests. For more\n-- information about Spot Instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html Spot Instances\u003e in the /Amazon ElasticCompute Cloud User Guide/.\n--\n-- Users must be subscribed to the required product to run an instance with AWS\n-- Marketplace product codes.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "requestSpotInstances",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rsiSpotPrice",
                        "name": "_rsiSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "-- | The maximum hourly price for any Spot Instance launched to fulfill the\n-- request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "RequestSpotInstances",
                "query": [
                    {
                        "field": "_rsiDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_rsiSpotPrice",
                        "locationName": "spotPrice",
                        "type": "field"
                    },
                    {
                        "field": "_rsiInstanceCount",
                        "locationName": "instanceCount",
                        "type": "field"
                    },
                    {
                        "field": "_rsiType",
                        "locationName": "type",
                        "type": "field"
                    },
                    {
                        "field": "_rsiValidFrom",
                        "locationName": "validFrom",
                        "type": "field"
                    },
                    {
                        "field": "_rsiValidUntil",
                        "locationName": "validUntil",
                        "type": "field"
                    },
                    {
                        "field": "_rsiLaunchGroup",
                        "locationName": "launchGroup",
                        "type": "field"
                    },
                    {
                        "field": "_rsiAvailabilityZoneGroup",
                        "locationName": "availabilityZoneGroup",
                        "type": "field"
                    },
                    {
                        "field": "_rsiLaunchSpecification",
                        "locationName": "LaunchSpecification",
                        "type": "field"
                    }
                ],
                "locationPad": 22,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiDryRun",
                        "name": "_rsiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiInstanceCount",
                        "name": "_rsiInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "-- | The maximum number of Spot Instances to launch.\n--\n-- Default: 1",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiType",
                        "name": "_rsiType",
                        "shape": "SpotInstanceType",
                        "locationName": "type",
                        "documentation": "-- | The Spot Instance request type.\n--\n-- Default: 'one-time'",
                        "typeExposed": "Maybe SpotInstanceType",
                        "type": "Maybe SpotInstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiValidFrom",
                        "name": "_rsiValidFrom",
                        "shape": "DateTime",
                        "locationName": "validFrom",
                        "documentation": "-- | The start date of the request. If this is a one-time request, the request\n-- becomes active at this date and time and remains active until all instances\n-- launch, the request expires, or the request is canceled. If the request is\n-- persistent, the request becomes active at this date and time and remains\n-- active until it expires or is canceled.\n--\n-- Default: The request is effective indefinitely.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiValidUntil",
                        "name": "_rsiValidUntil",
                        "shape": "DateTime",
                        "locationName": "validUntil",
                        "documentation": "-- | The end date of the request. If this is a one-time request, the request\n-- remains active until all instances launch, the request is canceled, or this\n-- date is reached. If the request is persistent, it remains active until it is\n-- canceled or this date and time is reached.\n--\n-- Default: The request is effective indefinitely.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiLaunchGroup",
                        "name": "_rsiLaunchGroup",
                        "shape": "String",
                        "locationName": "launchGroup",
                        "documentation": "-- | The instance launch group. Launch groups are Spot Instances that launch\n-- together and terminate together.\n--\n-- Default: Instances are launched and terminated individually",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiAvailabilityZoneGroup",
                        "name": "_rsiAvailabilityZoneGroup",
                        "shape": "String",
                        "locationName": "availabilityZoneGroup",
                        "documentation": "-- | The user-specified name for a logical grouping of bids.\n--\n-- When you specify an Availability Zone group in a Spot Instance request, all\n-- Spot Instances in the request are launched in the same Availability Zone.\n-- Instance proximity is maintained with this parameter, but the choice of\n-- Availability Zone is not. The group applies only to bids for Spot Instances\n-- of the same instance type. Any additional Spot Instance requests that are\n-- specified with the same Availability Zone group name are launched in that\n-- same Availability Zone, as long as at least one instance from the group is\n-- still active.\n--\n-- If there is no active instance running in the Availability Zone group that\n-- you specify for a new Spot Instance request (all instances are terminated,\n-- the bid is expired, or the bid falls below current market), then Amazon EC2\n-- launches the instance in any Availability Zone where the constraint can be\n-- met. Consequently, the subsequent set of Spot Instances could be placed in a\n-- different zone from the original request, even if you specified the same\n-- Availability Zone group.\n--\n-- Default: Instances are launched in any available Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiLaunchSpecification",
                        "name": "_rsiLaunchSpecification",
                        "shape": "RequestSpotLaunchSpecification",
                        "locationName": "LaunchSpecification",
                        "documentation": null,
                        "typeExposed": "Maybe RequestSpotLaunchSpecification",
                        "type": "Maybe RequestSpotLaunchSpecification"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiAvailabilityZoneGroup",
                        "name": "_rsiAvailabilityZoneGroup",
                        "shape": "String",
                        "locationName": "availabilityZoneGroup",
                        "documentation": "-- | The user-specified name for a logical grouping of bids.\n--\n-- When you specify an Availability Zone group in a Spot Instance request, all\n-- Spot Instances in the request are launched in the same Availability Zone.\n-- Instance proximity is maintained with this parameter, but the choice of\n-- Availability Zone is not. The group applies only to bids for Spot Instances\n-- of the same instance type. Any additional Spot Instance requests that are\n-- specified with the same Availability Zone group name are launched in that\n-- same Availability Zone, as long as at least one instance from the group is\n-- still active.\n--\n-- If there is no active instance running in the Availability Zone group that\n-- you specify for a new Spot Instance request (all instances are terminated,\n-- the bid is expired, or the bid falls below current market), then Amazon EC2\n-- launches the instance in any Availability Zone where the constraint can be\n-- met. Consequently, the subsequent set of Spot Instances could be placed in a\n-- different zone from the original request, even if you specified the same\n-- Availability Zone group.\n--\n-- Default: Instances are launched in any available Availability Zone.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiDryRun",
                        "name": "_rsiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiInstanceCount",
                        "name": "_rsiInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "-- | The maximum number of Spot Instances to launch.\n--\n-- Default: 1",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiLaunchGroup",
                        "name": "_rsiLaunchGroup",
                        "shape": "String",
                        "locationName": "launchGroup",
                        "documentation": "-- | The instance launch group. Launch groups are Spot Instances that launch\n-- together and terminate together.\n--\n-- Default: Instances are launched and terminated individually",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiLaunchSpecification",
                        "name": "_rsiLaunchSpecification",
                        "shape": "RequestSpotLaunchSpecification",
                        "locationName": "LaunchSpecification",
                        "documentation": null,
                        "typeExposed": "Maybe RequestSpotLaunchSpecification",
                        "type": "Maybe RequestSpotLaunchSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rsiSpotPrice",
                        "name": "_rsiSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "-- | The maximum hourly price for any Spot Instance launched to fulfill the\n-- request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiType",
                        "name": "_rsiType",
                        "shape": "SpotInstanceType",
                        "locationName": "type",
                        "documentation": "-- | The Spot Instance request type.\n--\n-- Default: 'one-time'",
                        "typeExposed": "Maybe SpotInstanceType",
                        "type": "Maybe SpotInstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiValidFrom",
                        "name": "_rsiValidFrom",
                        "shape": "DateTime",
                        "locationName": "validFrom",
                        "documentation": "-- | The start date of the request. If this is a one-time request, the request\n-- becomes active at this date and time and remains active until all instances\n-- launch, the request expires, or the request is canceled. If the request is\n-- persistent, the request becomes active at this date and time and remains\n-- active until it expires or is canceled.\n--\n-- Default: The request is effective indefinitely.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsiValidUntil",
                        "name": "_rsiValidUntil",
                        "shape": "DateTime",
                        "locationName": "validUntil",
                        "documentation": "-- | The end date of the request. If this is a one-time request, the request\n-- remains active until all instances launch, the request is canceled, or this\n-- date is reached. If the request is persistent, it remains active until it is\n-- canceled or this date and time is reached.\n--\n-- Default: The request is effective indefinitely.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe ISO8601"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "resetImageAttributeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ResetImageAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ResetImageAttribute.html",
            "namespace": "Network.AWS.EC2.ResetImageAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ResetImageAttribute",
            "method": "post",
            "documentation": "-- | Resets an attribute of an AMI to its default value.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "resetImageAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ria1ImageId",
                        "name": "_ria1ImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ria1Attribute",
                        "name": "_ria1Attribute",
                        "shape": "ResetImageAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The attribute to reset (currently you can only reset the launch permission\n-- attribute).",
                        "typeExposed": "ResetImageAttributeName",
                        "type": "ResetImageAttributeName"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "ResetImageAttribute",
                "query": [
                    {
                        "field": "_ria1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_ria1ImageId",
                        "locationName": "ImageId",
                        "type": "field"
                    },
                    {
                        "field": "_ria1Attribute",
                        "locationName": "Attribute",
                        "type": "field"
                    }
                ],
                "locationPad": 10,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ria1DryRun",
                        "name": "_ria1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ria1Attribute",
                        "name": "_ria1Attribute",
                        "shape": "ResetImageAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The attribute to reset (currently you can only reset the launch permission\n-- attribute).",
                        "typeExposed": "ResetImageAttributeName",
                        "type": "ResetImageAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "ria1DryRun",
                        "name": "_ria1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "ria1ImageId",
                        "name": "_ria1ImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "-- | The ID of the AMI.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "resetInstanceAttributeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ResetInstanceAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ResetInstanceAttribute.html",
            "namespace": "Network.AWS.EC2.ResetInstanceAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ResetInstanceAttribute",
            "method": "post",
            "documentation": "-- | Resets an attribute of an instance to its default value. To reset the 'kernel'\n-- or 'ramdisk', the instance must be in a stopped state. To reset the 'SourceDestCheck', the instance can be either running or stopped.\n--\n-- The 'SourceDestCheck' attribute controls whether source/destination checking\n-- is enabled. The default value is 'true', which means checking is enabled. This\n-- value must be 'false' for a NAT instance to perform NAT. For more information,\n-- see \u003chttp://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html NAT Instances\u003e in the /Amazon Virtual Private Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "resetInstanceAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "riaInstanceId",
                        "name": "_riaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "riaAttribute",
                        "name": "_riaAttribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "-- | The attribute to reset.",
                        "typeExposed": "InstanceAttributeName",
                        "type": "InstanceAttributeName"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ResetInstanceAttribute",
                "query": [
                    {
                        "field": "_riaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_riaInstanceId",
                        "locationName": "instanceId",
                        "type": "field"
                    },
                    {
                        "field": "_riaAttribute",
                        "locationName": "attribute",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riaDryRun",
                        "name": "_riaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "riaAttribute",
                        "name": "_riaAttribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "-- | The attribute to reset.",
                        "typeExposed": "InstanceAttributeName",
                        "type": "InstanceAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riaDryRun",
                        "name": "_riaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "riaInstanceId",
                        "name": "_riaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "-- | The ID of the instance.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "resetNetworkInterfaceAttributeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ResetNetworkInterfaceAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ResetNetworkInterfaceAttribute.html",
            "namespace": "Network.AWS.EC2.ResetNetworkInterfaceAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ResetNetworkInterfaceAttribute",
            "method": "post",
            "documentation": "-- | Resets a network interface attribute. You can specify only one attribute at a\n-- time.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "resetNetworkInterfaceAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rniaNetworkInterfaceId",
                        "name": "_rniaNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "ResetNetworkInterfaceAttribute",
                "query": [
                    {
                        "field": "_rniaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_rniaNetworkInterfaceId",
                        "locationName": "networkInterfaceId",
                        "type": "field"
                    },
                    {
                        "field": "_rniaSourceDestCheck",
                        "locationName": "sourceDestCheck",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rniaDryRun",
                        "name": "_rniaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rniaSourceDestCheck",
                        "name": "_rniaSourceDestCheck",
                        "shape": "String",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | The source/destination checking attribute. Resets the value to 'true'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rniaDryRun",
                        "name": "_rniaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rniaNetworkInterfaceId",
                        "name": "_rniaNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rniaSourceDestCheck",
                        "name": "_rniaSourceDestCheck",
                        "shape": "String",
                        "locationName": "sourceDestCheck",
                        "documentation": "-- | The source/destination checking attribute. Resets the value to 'true'.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "resetSnapshotAttributeResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ResetSnapshotAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-ResetSnapshotAttribute.html",
            "namespace": "Network.AWS.EC2.ResetSnapshotAttribute",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "ResetSnapshotAttribute",
            "method": "post",
            "documentation": "-- | Resets permission settings for the specified snapshot.\n--\n-- For more information on modifying snapshot permissions, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html Sharing Snapshots\u003e\n-- in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "resetSnapshotAttribute",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rsaSnapshotId",
                        "name": "_rsaSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "-- | The ID of the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rsaAttribute",
                        "name": "_rsaAttribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The attribute to reset (currently only the attribute for permission to create\n-- volumes can be reset).",
                        "typeExposed": "SnapshotAttributeName",
                        "type": "SnapshotAttributeName"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ResetSnapshotAttribute",
                "query": [
                    {
                        "field": "_rsaDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_rsaSnapshotId",
                        "locationName": "SnapshotId",
                        "type": "field"
                    },
                    {
                        "field": "_rsaAttribute",
                        "locationName": "Attribute",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsaDryRun",
                        "name": "_rsaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rsaAttribute",
                        "name": "_rsaAttribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "-- | The attribute to reset (currently only the attribute for permission to create\n-- volumes can be reset).",
                        "typeExposed": "SnapshotAttributeName",
                        "type": "SnapshotAttributeName"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsaDryRun",
                        "name": "_rsaDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rsaSnapshotId",
                        "name": "_rsaSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "-- | The ID of the snapshot.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "revokeSecurityGroupEgressResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RevokeSecurityGroupEgressResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RevokeSecurityGroupEgress.html",
            "namespace": "Network.AWS.EC2.RevokeSecurityGroupEgress",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "RevokeSecurityGroupEgress",
            "method": "post",
            "documentation": "-- | Removes one or more egress rules from a security group for EC2-VPC. The\n-- values that you specify in the revoke request (for example, ports) must match\n-- the existing rule's values for the rule to be revoked.\n--\n-- Each rule consists of the protocol and the CIDR range or source security\n-- group. For the TCP and UDP protocols, you must also specify the destination\n-- port or range of ports. For the ICMP protocol, you must also specify the ICMP\n-- type and code.\n--\n-- Rule changes are propagated to instances within the security group as\n-- quickly as possible. However, a small delay might occur.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 31,
                "ctor": "revokeSecurityGroupEgress",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rsgeGroupId",
                        "name": "_rsgeGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 27,
                "name": "RevokeSecurityGroupEgress",
                "query": [
                    {
                        "field": "_rsgeDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_rsgeGroupId",
                        "locationName": "groupId",
                        "type": "field"
                    },
                    {
                        "field": "_rsgeSourceSecurityGroupName",
                        "locationName": "sourceSecurityGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_rsgeSourceSecurityGroupOwnerId",
                        "locationName": "sourceSecurityGroupOwnerId",
                        "type": "field"
                    },
                    {
                        "field": "_rsgeIpProtocol",
                        "locationName": "ipProtocol",
                        "type": "field"
                    },
                    {
                        "field": "_rsgeFromPort",
                        "locationName": "fromPort",
                        "type": "field"
                    },
                    {
                        "field": "_rsgeToPort",
                        "locationName": "toPort",
                        "type": "field"
                    },
                    {
                        "field": "_rsgeCidrIp",
                        "locationName": "cidrIp",
                        "type": "field"
                    },
                    {
                        "field": "_rsgeIpPermissions",
                        "locationName": "ipPermissions",
                        "type": "field"
                    }
                ],
                "locationPad": 27,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeDryRun",
                        "name": "_rsgeDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeSourceSecurityGroupName",
                        "name": "_rsgeSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the destination security group. You\n-- can't specify a destination security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeSourceSecurityGroupOwnerId",
                        "name": "_rsgeSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupOwnerId",
                        "documentation": "-- | The ID of the destination security group. You can't specify a destination\n-- security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeIpProtocol",
                        "name": "_rsgeIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "-- | The IP protocol name ('tcp', 'udp', 'icmp') or number (see \u003chttp://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml Protocol Numbers\u003e). Use '-1'\n-- to specify all.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeFromPort",
                        "name": "_rsgeFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "-- | The start of port range for the TCP and UDP protocols, or an ICMP type\n-- number. For the ICMP type number, use '-1' to specify all ICMP types.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeToPort",
                        "name": "_rsgeToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "-- | The end of port range for the TCP and UDP protocols, or an ICMP code number.\n-- For the ICMP code number, use '-1' to specify all ICMP codes for the ICMP type.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeCidrIp",
                        "name": "_rsgeCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "-- | The CIDR IP address range. You can't specify this parameter when specifying a\n-- source security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rsgeIpPermissions",
                        "name": "_rsgeIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "-- | A set of IP permissions. You can't specify a destination security group and a\n-- CIDR IP address range.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeCidrIp",
                        "name": "_rsgeCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "-- | The CIDR IP address range. You can't specify this parameter when specifying a\n-- source security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeDryRun",
                        "name": "_rsgeDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeFromPort",
                        "name": "_rsgeFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "-- | The start of port range for the TCP and UDP protocols, or an ICMP type\n-- number. For the ICMP type number, use '-1' to specify all ICMP types.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rsgeGroupId",
                        "name": "_rsgeGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rsgeIpPermissions",
                        "name": "_rsgeIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "-- | A set of IP permissions. You can't specify a destination security group and a\n-- CIDR IP address range.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeIpProtocol",
                        "name": "_rsgeIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "-- | The IP protocol name ('tcp', 'udp', 'icmp') or number (see \u003chttp://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml Protocol Numbers\u003e). Use '-1'\n-- to specify all.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeSourceSecurityGroupName",
                        "name": "_rsgeSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the destination security group. You\n-- can't specify a destination security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeSourceSecurityGroupOwnerId",
                        "name": "_rsgeSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupOwnerId",
                        "documentation": "-- | The ID of the destination security group. You can't specify a destination\n-- security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgeToPort",
                        "name": "_rsgeToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "-- | The end of port range for the TCP and UDP protocols, or an ICMP code number.\n-- For the ICMP code number, use '-1' to specify all ICMP codes for the ICMP type.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "revokeSecurityGroupIngressResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RevokeSecurityGroupIngressResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RevokeSecurityGroupIngress.html",
            "namespace": "Network.AWS.EC2.RevokeSecurityGroupIngress",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "RevokeSecurityGroupIngress",
            "method": "post",
            "documentation": "-- | Removes one or more ingress rules from a security group. The values that you\n-- specify in the revoke request (for example, ports) must match the existing\n-- rule's values for the rule to be removed.\n--\n-- Each rule consists of the protocol and the CIDR range or source security\n-- group. For the TCP and UDP protocols, you must also specify the destination\n-- port or range of ports. For the ICMP protocol, you must also specify the ICMP\n-- type and code.\n--\n-- Rule changes are propagated to instances within the security group as\n-- quickly as possible. However, a small delay might occur.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 31,
                "ctor": "revokeSecurityGroupIngress",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 27,
                "name": "RevokeSecurityGroupIngress",
                "query": [
                    {
                        "field": "_rsgiDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_rsgiGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_rsgiGroupId",
                        "locationName": "GroupId",
                        "type": "field"
                    },
                    {
                        "field": "_rsgiSourceSecurityGroupName",
                        "locationName": "SourceSecurityGroupName",
                        "type": "field"
                    },
                    {
                        "field": "_rsgiSourceSecurityGroupOwnerId",
                        "locationName": "SourceSecurityGroupOwnerId",
                        "type": "field"
                    },
                    {
                        "field": "_rsgiIpProtocol",
                        "locationName": "IpProtocol",
                        "type": "field"
                    },
                    {
                        "field": "_rsgiFromPort",
                        "locationName": "FromPort",
                        "type": "field"
                    },
                    {
                        "field": "_rsgiToPort",
                        "locationName": "ToPort",
                        "type": "field"
                    },
                    {
                        "field": "_rsgiCidrIp",
                        "locationName": "CidrIp",
                        "type": "field"
                    },
                    {
                        "field": "_rsgiIpPermissions",
                        "locationName": "IpPermissions",
                        "type": "field"
                    }
                ],
                "locationPad": 27,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiDryRun",
                        "name": "_rsgiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiGroupName",
                        "name": "_rsgiGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiGroupId",
                        "name": "_rsgiGroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiSourceSecurityGroupName",
                        "name": "_rsgiSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the source security group. You can't\n-- specify a source security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiSourceSecurityGroupOwnerId",
                        "name": "_rsgiSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupOwnerId",
                        "documentation": "-- | The ID of the source security group. You can't specify a source security\n-- group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiIpProtocol",
                        "name": "_rsgiIpProtocol",
                        "shape": "String",
                        "locationName": "IpProtocol",
                        "documentation": "-- | The IP protocol name ('tcp', 'udp', 'icmp') or number (see \u003chttp://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml Protocol Numbers\u003e). Use '-1'\n-- to specify all.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiFromPort",
                        "name": "_rsgiFromPort",
                        "shape": "Integer",
                        "locationName": "FromPort",
                        "documentation": "-- | The start of port range for the TCP and UDP protocols, or an ICMP type\n-- number. For the ICMP type number, use '-1' to specify all ICMP types.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiToPort",
                        "name": "_rsgiToPort",
                        "shape": "Integer",
                        "locationName": "ToPort",
                        "documentation": "-- | The end of port range for the TCP and UDP protocols, or an ICMP code number.\n-- For the ICMP code number, use '-1' to specify all ICMP codes for the ICMP type.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiCidrIp",
                        "name": "_rsgiCidrIp",
                        "shape": "String",
                        "locationName": "CidrIp",
                        "documentation": "-- | The CIDR IP address range. You can't specify this parameter when specifying a\n-- source security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rsgiIpPermissions",
                        "name": "_rsgiIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "IpPermissions",
                        "documentation": "-- | A set of IP permissions. You can't specify a source security group and a CIDR\n-- IP address range.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiCidrIp",
                        "name": "_rsgiCidrIp",
                        "shape": "String",
                        "locationName": "CidrIp",
                        "documentation": "-- | The CIDR IP address range. You can't specify this parameter when specifying a\n-- source security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiDryRun",
                        "name": "_rsgiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiFromPort",
                        "name": "_rsgiFromPort",
                        "shape": "Integer",
                        "locationName": "FromPort",
                        "documentation": "-- | The start of port range for the TCP and UDP protocols, or an ICMP type\n-- number. For the ICMP type number, use '-1' to specify all ICMP types.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiGroupId",
                        "name": "_rsgiGroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "-- | The ID of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiGroupName",
                        "name": "_rsgiGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the security group.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rsgiIpPermissions",
                        "name": "_rsgiIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "IpPermissions",
                        "documentation": "-- | A set of IP permissions. You can't specify a source security group and a CIDR\n-- IP address range.",
                        "typeExposed": "[IpPermission]",
                        "type": "List \"item\" IpPermission"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiIpProtocol",
                        "name": "_rsgiIpProtocol",
                        "shape": "String",
                        "locationName": "IpProtocol",
                        "documentation": "-- | The IP protocol name ('tcp', 'udp', 'icmp') or number (see \u003chttp://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml Protocol Numbers\u003e). Use '-1'\n-- to specify all.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiSourceSecurityGroupName",
                        "name": "_rsgiSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupName",
                        "documentation": "-- | [EC2-Classic, default VPC] The name of the source security group. You can't\n-- specify a source security group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiSourceSecurityGroupOwnerId",
                        "name": "_rsgiSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupOwnerId",
                        "documentation": "-- | The ID of the source security group. You can't specify a source security\n-- group and a CIDR IP address range.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rsgiToPort",
                        "name": "_rsgiToPort",
                        "shape": "Integer",
                        "locationName": "ToPort",
                        "documentation": "-- | The end of port range for the TCP and UDP protocols, or an ICMP code number.\n-- For the ICMP code number, use '-1' to specify all ICMP codes for the ICMP type.",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 17,
                "ctor": "runInstancesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rirReservationId",
                        "name": "_rirReservationId",
                        "shape": "String",
                        "locationName": "reservationId",
                        "documentation": "-- | The ID of the reservation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rirOwnerId",
                        "name": "_rirOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The ID of the AWS account that owns the reservation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "RunInstancesResponse",
                "resultWrapper": null,
                "locationPad": 14,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rirRequesterId",
                        "name": "_rirRequesterId",
                        "shape": "String",
                        "locationName": "requesterId",
                        "documentation": "-- | The ID of the requester that launched the instances on your behalf (for\n-- example, AWS Management Console or Auto Scaling).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rirGroups",
                        "name": "_rirGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | One or more security groups.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rirInstances",
                        "name": "_rirInstances",
                        "shape": "InstanceList",
                        "locationName": "instancesSet",
                        "documentation": "-- | One or more instances.",
                        "typeExposed": "[Instance]",
                        "type": "List \"item\" Instance"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rirGroups",
                        "name": "_rirGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "-- | One or more security groups.",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "List \"item\" GroupIdentifier"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "rirInstances",
                        "name": "_rirInstances",
                        "shape": "InstanceList",
                        "locationName": "instancesSet",
                        "documentation": "-- | One or more instances.",
                        "typeExposed": "[Instance]",
                        "type": "List \"item\" Instance"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rirOwnerId",
                        "name": "_rirOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "-- | The ID of the AWS account that owns the reservation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "rirRequesterId",
                        "name": "_rirRequesterId",
                        "shape": "String",
                        "locationName": "requesterId",
                        "documentation": "-- | The ID of the requester that launched the instances on your behalf (for\n-- example, AWS Management Console or Auto Scaling).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "rirReservationId",
                        "name": "_rirReservationId",
                        "shape": "String",
                        "locationName": "reservationId",
                        "documentation": "-- | The ID of the reservation.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-RunInstances.html",
            "namespace": "Network.AWS.EC2.RunInstances",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "RunInstances",
            "method": "post",
            "documentation": "-- | Launches the specified number of instances using an AMI for which you have\n-- permissions.\n--\n-- When you launch an instance, it enters the 'pending' state. After the instance\n-- is ready for you, it enters the 'running' state. To check the state of your\n-- instance, call 'DescribeInstances'.\n--\n-- If you don't specify a security group when launching an instance, Amazon EC2\n-- uses the default security group. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html Security Groups\u003e in\n-- the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- Linux instances have access to the public key of the key pair at boot. You\n-- can use this key to provide secure access to the instance. Amazon EC2 public\n-- images use this feature to provide secure access without passwords. For more\n-- information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html Key Pairs\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- You can provide optional user data when launching an instance. For more\n-- information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html Instance Metadata\u003e in the /Amazon Elastic Compute Cloud UserGuide/.\n--\n-- If any of the AMIs have a product code attached for which the user has not\n-- subscribed, 'RunInstances' fails.\n--\n-- T2 instance types can only be launched into a VPC. If you do not have a\n-- default VPC, or if you do not specify a subnet ID in the request, 'RunInstances'\n-- fails.\n--\n-- For more information about troubleshooting, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html What To Do If An InstanceImmediately Terminates\u003e, and \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html Troubleshooting Connecting to Your Instance\u003e in\n-- the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 36,
                "ctor": "runInstances",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "riImageId",
                        "name": "_riImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "-- | The ID of the AMI, which you can get by calling 'DescribeImages'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "riMinCount",
                        "name": "_riMinCount",
                        "shape": "Integer",
                        "locationName": "MinCount",
                        "documentation": "-- | The minimum number of instances to launch. If you specify a minimum that is\n-- more instances than Amazon EC2 can launch in the target Availability Zone,\n-- Amazon EC2 launches no instances.\n--\n-- Constraints: Between 1 and the maximum number you're allowed for the\n-- specified instance type. For more information about the default limits, and\n-- how to request an increase, see \u003chttp://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2 How many instances can I run in Amazon EC2\u003e in\n-- the Amazon EC2 General FAQ.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "riMaxCount",
                        "name": "_riMaxCount",
                        "shape": "Integer",
                        "locationName": "MaxCount",
                        "documentation": "-- | The maximum number of instances to launch. If you specify more instances than\n-- Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches\n-- the largest possible number of instances above 'MinCount'.\n--\n-- Constraints: Between 1 and the maximum number you're allowed for the\n-- specified instance type. For more information about the default limits, and\n-- how to request an increase, see \u003chttp://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2 How many instances can I run in Amazon EC2\u003e in\n-- the Amazon EC2 General FAQ.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 34,
                "name": "RunInstances",
                "query": [
                    {
                        "field": "_riDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_riImageId",
                        "locationName": "ImageId",
                        "type": "field"
                    },
                    {
                        "field": "_riMinCount",
                        "locationName": "MinCount",
                        "type": "field"
                    },
                    {
                        "field": "_riMaxCount",
                        "locationName": "MaxCount",
                        "type": "field"
                    },
                    {
                        "field": "_riKeyName",
                        "locationName": "KeyName",
                        "type": "field"
                    },
                    {
                        "field": "_riSecurityGroups",
                        "locationName": "SecurityGroup",
                        "type": "field"
                    },
                    {
                        "field": "_riSecurityGroupIds",
                        "locationName": "SecurityGroupId",
                        "type": "field"
                    },
                    {
                        "field": "_riUserData",
                        "locationName": "UserData",
                        "type": "field"
                    },
                    {
                        "field": "_riInstanceType",
                        "locationName": "InstanceType",
                        "type": "field"
                    },
                    {
                        "field": "_riPlacement",
                        "locationName": "Placement",
                        "type": "field"
                    },
                    {
                        "field": "_riKernelId",
                        "locationName": "KernelId",
                        "type": "field"
                    },
                    {
                        "field": "_riRamdiskId",
                        "locationName": "RamdiskId",
                        "type": "field"
                    },
                    {
                        "field": "_riBlockDeviceMappings",
                        "locationName": "BlockDeviceMapping",
                        "type": "field"
                    },
                    {
                        "field": "_riMonitoring",
                        "locationName": "Monitoring",
                        "type": "field"
                    },
                    {
                        "field": "_riSubnetId",
                        "locationName": "SubnetId",
                        "type": "field"
                    },
                    {
                        "field": "_riDisableApiTermination",
                        "locationName": "disableApiTermination",
                        "type": "field"
                    },
                    {
                        "field": "_riInstanceInitiatedShutdownBehavior",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "type": "field"
                    },
                    {
                        "field": "_riPrivateIpAddress",
                        "locationName": "privateIpAddress",
                        "type": "field"
                    },
                    {
                        "field": "_riClientToken",
                        "locationName": "clientToken",
                        "type": "field"
                    },
                    {
                        "field": "_riAdditionalInfo",
                        "locationName": "additionalInfo",
                        "type": "field"
                    },
                    {
                        "field": "_riNetworkInterfaces",
                        "locationName": "networkInterface",
                        "type": "field"
                    },
                    {
                        "field": "_riIamInstanceProfile",
                        "locationName": "iamInstanceProfile",
                        "type": "field"
                    },
                    {
                        "field": "_riEbsOptimized",
                        "locationName": "ebsOptimized",
                        "type": "field"
                    }
                ],
                "locationPad": 34,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riDryRun",
                        "name": "_riDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riKeyName",
                        "name": "_riKeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "-- | The name of the key pair. You can create a key pair using 'CreateKeyPair' or 'ImportKeyPair'.\n--\n-- If you launch an instance without specifying a key pair, you can't connect\n-- to the instance.\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "riSecurityGroups",
                        "name": "_riSecurityGroups",
                        "shape": "SecurityGroupStringList",
                        "locationName": "SecurityGroup",
                        "documentation": "-- | [EC2-Classic, default VPC] One or more security group names. For a nondefault\n-- VPC, you must use security group IDs instead.\n--\n-- Default: Amazon EC2 uses the default security group.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroup\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "riSecurityGroupIds",
                        "name": "_riSecurityGroupIds",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "-- | One or more security group IDs. You can create a security group using 'CreateSecurityGroup'.\n--\n-- Default: Amazon EC2 uses the default security group.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riUserData",
                        "name": "_riUserData",
                        "shape": "String",
                        "locationName": "UserData",
                        "documentation": "-- | The Base64-encoded MIME user data for the instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riInstanceType",
                        "name": "_riInstanceType",
                        "shape": "InstanceType",
                        "locationName": "InstanceType",
                        "documentation": "-- | The instance type. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html Instance Types\u003e in the /AmazonElastic Compute Cloud User Guide/.\n--\n-- Default: 'm1.small'",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riPlacement",
                        "name": "_riPlacement",
                        "shape": "Placement",
                        "locationName": "Placement",
                        "documentation": "-- | The placement for the instance.",
                        "typeExposed": "Maybe Placement",
                        "type": "Maybe Placement"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riKernelId",
                        "name": "_riKernelId",
                        "shape": "String",
                        "locationName": "KernelId",
                        "documentation": "-- | The ID of the kernel.\n--\n-- We recommend that you use PV-GRUB instead of kernels and RAM disks. For\n-- more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html  PV-GRUB\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riRamdiskId",
                        "name": "_riRamdiskId",
                        "shape": "String",
                        "locationName": "RamdiskId",
                        "documentation": "-- | The ID of the RAM disk.\n--\n-- We recommend that you use PV-GRUB instead of kernels and RAM disks. For\n-- more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html  PV-GRUB\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "riBlockDeviceMappings",
                        "name": "_riBlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "BlockDeviceMapping",
                        "documentation": "-- | The block device mapping.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"BlockDeviceMapping\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riMonitoring",
                        "name": "_riMonitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "Monitoring",
                        "documentation": "-- | The monitoring for the instance.",
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riSubnetId",
                        "name": "_riSubnetId",
                        "shape": "String",
                        "locationName": "SubnetId",
                        "documentation": "-- | [EC2-VPC] The ID of the subnet to launch the instance into.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riDisableApiTermination",
                        "name": "_riDisableApiTermination",
                        "shape": "Boolean",
                        "locationName": "disableApiTermination",
                        "documentation": "-- | If you set this parameter to 'true', you can't terminate the instance using the\n-- Amazon EC2 console, CLI, or API; otherwise, you can. If you set this\n-- parameter to 'true' and then later want to be able to terminate the instance,\n-- you must first change the value of the 'disableApiTermination' attribute to 'false' using 'ModifyInstanceAttribute'. Alternatively, if you set 'InstanceInitiatedShutdownBehavior' to 'terminate', you can terminate the instance by running the shutdown command\n-- from the instance.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riInstanceInitiatedShutdownBehavior",
                        "name": "_riInstanceInitiatedShutdownBehavior",
                        "shape": "ShutdownBehavior",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "-- | Indicates whether an instance stops or terminates when you initiate shutdown\n-- from the instance (using the operating system command for system shutdown).\n--\n-- Default: 'stop'",
                        "typeExposed": "Maybe ShutdownBehavior",
                        "type": "Maybe ShutdownBehavior"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riPrivateIpAddress",
                        "name": "_riPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | [EC2-VPC] The primary IP address. You must specify a value from the IP\n-- address range of the subnet.\n--\n-- Only one private IP address can be designated as primary. Therefore, you\n-- can't specify this parameter if 'PrivateIpAddresses.n.Primary' is set to 'true'\n-- and 'PrivateIpAddresses.n.PrivateIpAddress' is set to an IP address.\n--\n-- Default: We select an IP address from the IP address range of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riClientToken",
                        "name": "_riClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | Unique, case-sensitive identifier you provide to ensure the idempotency of\n-- the request. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html How to Ensure Idempotency\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- Constraints: Maximum 64 ASCII characters",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riAdditionalInfo",
                        "name": "_riAdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": "-- | Reserved.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "riNetworkInterfaces",
                        "name": "_riNetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "networkInterface",
                        "documentation": "-- | One or more network interfaces.",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "List \"item\" InstanceNetworkInterfaceSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riIamInstanceProfile",
                        "name": "_riIamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "-- | The IAM instance profile.",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riEbsOptimized",
                        "name": "_riEbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Indicates whether the instance is optimized for EBS I/O. This optimization\n-- provides dedicated throughput to Amazon EBS and an optimized configuration\n-- stack to provide optimal Amazon EBS I/O performance. This optimization isn't\n-- available with all instance types. Additional usage charges apply when using\n-- an EBS-optimized instance.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riAdditionalInfo",
                        "name": "_riAdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": "-- | Reserved.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "riBlockDeviceMappings",
                        "name": "_riBlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "BlockDeviceMapping",
                        "documentation": "-- | The block device mapping.",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "List \"BlockDeviceMapping\" BlockDeviceMapping"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riClientToken",
                        "name": "_riClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "-- | Unique, case-sensitive identifier you provide to ensure the idempotency of\n-- the request. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html How to Ensure Idempotency\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n-- Constraints: Maximum 64 ASCII characters",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riDisableApiTermination",
                        "name": "_riDisableApiTermination",
                        "shape": "Boolean",
                        "locationName": "disableApiTermination",
                        "documentation": "-- | If you set this parameter to 'true', you can't terminate the instance using the\n-- Amazon EC2 console, CLI, or API; otherwise, you can. If you set this\n-- parameter to 'true' and then later want to be able to terminate the instance,\n-- you must first change the value of the 'disableApiTermination' attribute to 'false' using 'ModifyInstanceAttribute'. Alternatively, if you set 'InstanceInitiatedShutdownBehavior' to 'terminate', you can terminate the instance by running the shutdown command\n-- from the instance.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riDryRun",
                        "name": "_riDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riEbsOptimized",
                        "name": "_riEbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "-- | Indicates whether the instance is optimized for EBS I/O. This optimization\n-- provides dedicated throughput to Amazon EBS and an optimized configuration\n-- stack to provide optimal Amazon EBS I/O performance. This optimization isn't\n-- available with all instance types. Additional usage charges apply when using\n-- an EBS-optimized instance.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riIamInstanceProfile",
                        "name": "_riIamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "-- | The IAM instance profile.",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "riImageId",
                        "name": "_riImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "-- | The ID of the AMI, which you can get by calling 'DescribeImages'.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riInstanceInitiatedShutdownBehavior",
                        "name": "_riInstanceInitiatedShutdownBehavior",
                        "shape": "ShutdownBehavior",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "-- | Indicates whether an instance stops or terminates when you initiate shutdown\n-- from the instance (using the operating system command for system shutdown).\n--\n-- Default: 'stop'",
                        "typeExposed": "Maybe ShutdownBehavior",
                        "type": "Maybe ShutdownBehavior"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riInstanceType",
                        "name": "_riInstanceType",
                        "shape": "InstanceType",
                        "locationName": "InstanceType",
                        "documentation": "-- | The instance type. For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html Instance Types\u003e in the /AmazonElastic Compute Cloud User Guide/.\n--\n-- Default: 'm1.small'",
                        "typeExposed": "Maybe InstanceType",
                        "type": "Maybe InstanceType"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riKernelId",
                        "name": "_riKernelId",
                        "shape": "String",
                        "locationName": "KernelId",
                        "documentation": "-- | The ID of the kernel.\n--\n-- We recommend that you use PV-GRUB instead of kernels and RAM disks. For\n-- more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html  PV-GRUB\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riKeyName",
                        "name": "_riKeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "-- | The name of the key pair. You can create a key pair using 'CreateKeyPair' or 'ImportKeyPair'.\n--\n-- If you launch an instance without specifying a key pair, you can't connect\n-- to the instance.\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "riMaxCount",
                        "name": "_riMaxCount",
                        "shape": "Integer",
                        "locationName": "MaxCount",
                        "documentation": "-- | The maximum number of instances to launch. If you specify more instances than\n-- Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches\n-- the largest possible number of instances above 'MinCount'.\n--\n-- Constraints: Between 1 and the maximum number you're allowed for the\n-- specified instance type. For more information about the default limits, and\n-- how to request an increase, see \u003chttp://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2 How many instances can I run in Amazon EC2\u003e in\n-- the Amazon EC2 General FAQ.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "riMinCount",
                        "name": "_riMinCount",
                        "shape": "Integer",
                        "locationName": "MinCount",
                        "documentation": "-- | The minimum number of instances to launch. If you specify a minimum that is\n-- more instances than Amazon EC2 can launch in the target Availability Zone,\n-- Amazon EC2 launches no instances.\n--\n-- Constraints: Between 1 and the maximum number you're allowed for the\n-- specified instance type. For more information about the default limits, and\n-- how to request an increase, see \u003chttp://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2 How many instances can I run in Amazon EC2\u003e in\n-- the Amazon EC2 General FAQ.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riMonitoring",
                        "name": "_riMonitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "Monitoring",
                        "documentation": "-- | The monitoring for the instance.",
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "riNetworkInterfaces",
                        "name": "_riNetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "networkInterface",
                        "documentation": "-- | One or more network interfaces.",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "List \"item\" InstanceNetworkInterfaceSpecification"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riPlacement",
                        "name": "_riPlacement",
                        "shape": "Placement",
                        "locationName": "Placement",
                        "documentation": "-- | The placement for the instance.",
                        "typeExposed": "Maybe Placement",
                        "type": "Maybe Placement"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riPrivateIpAddress",
                        "name": "_riPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | [EC2-VPC] The primary IP address. You must specify a value from the IP\n-- address range of the subnet.\n--\n-- Only one private IP address can be designated as primary. Therefore, you\n-- can't specify this parameter if 'PrivateIpAddresses.n.Primary' is set to 'true'\n-- and 'PrivateIpAddresses.n.PrivateIpAddress' is set to an IP address.\n--\n-- Default: We select an IP address from the IP address range of the subnet.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riRamdiskId",
                        "name": "_riRamdiskId",
                        "shape": "String",
                        "locationName": "RamdiskId",
                        "documentation": "-- | The ID of the RAM disk.\n--\n-- We recommend that you use PV-GRUB instead of kernels and RAM disks. For\n-- more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html  PV-GRUB\u003e in the /Amazon Elastic Compute Cloud User Guide/.\n--\n--",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "riSecurityGroupIds",
                        "name": "_riSecurityGroupIds",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "-- | One or more security group IDs. You can create a security group using 'CreateSecurityGroup'.\n--\n-- Default: Amazon EC2 uses the default security group.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroupId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "riSecurityGroups",
                        "name": "_riSecurityGroups",
                        "shape": "SecurityGroupStringList",
                        "locationName": "SecurityGroup",
                        "documentation": "-- | [EC2-Classic, default VPC] One or more security group names. For a nondefault\n-- VPC, you must use security group IDs instead.\n--\n-- Default: Amazon EC2 uses the default security group.",
                        "typeExposed": "[Text]",
                        "type": "List \"SecurityGroup\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riSubnetId",
                        "name": "_riSubnetId",
                        "shape": "String",
                        "locationName": "SubnetId",
                        "documentation": "-- | [EC2-VPC] The ID of the subnet to launch the instance into.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "riUserData",
                        "name": "_riUserData",
                        "shape": "String",
                        "locationName": "UserData",
                        "documentation": "-- | The Base64-encoded MIME user data for the instances.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "startInstancesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "sirStartingInstances",
                    "name": "_sirStartingInstances",
                    "shape": "InstanceStateChangeList",
                    "locationName": "instancesSet",
                    "documentation": "-- | Information about one or more started instances.",
                    "typeExposed": "[InstanceStateChange]",
                    "type": "List \"item\" InstanceStateChange"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "StartInstancesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sirStartingInstances",
                        "name": "_sirStartingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "-- | Information about one or more started instances.",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "List \"item\" InstanceStateChange"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sirStartingInstances",
                        "name": "_sirStartingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "-- | Information about one or more started instances.",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "List \"item\" InstanceStateChange"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-StartInstances.html",
            "namespace": "Network.AWS.EC2.StartInstances",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "StartInstances",
            "method": "post",
            "documentation": "-- | Starts an Amazon EBS-backed AMI that you've previously stopped.\n--\n-- Instances that use Amazon EBS volumes as their root devices can be quickly\n-- stopped and started. When an instance is stopped, the compute resources are\n-- released and you are not billed for hourly instance usage. However, your root\n-- partition Amazon EBS volume remains, continues to persist your data, and you\n-- are charged for Amazon EBS volume usage. You can restart your instance at any\n-- time. Each time you transition an instance from stopped to started, Amazon\n-- EC2 charges a full instance hour, even if transitions happen multiple times\n-- within a single hour.\n--\n-- Before stopping an instance, make sure it is in a state from which it can be\n-- restarted. Stopping an instance does not preserve data stored in RAM.\n--\n-- Performing this operation on an instance that uses an instance store as its\n-- root device returns an error.\n--\n-- For more information, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html Stopping Instances\u003e in the /Amazon Elastic ComputeCloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "startInstances",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "StartInstances",
                "query": [
                    {
                        "field": "_si1InstanceIds",
                        "locationName": "InstanceId",
                        "type": "field"
                    },
                    {
                        "field": "_si1AdditionalInfo",
                        "locationName": "additionalInfo",
                        "type": "field"
                    },
                    {
                        "field": "_si1DryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "si1InstanceIds",
                        "name": "_si1InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "si1AdditionalInfo",
                        "name": "_si1AdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": "-- | Reserved.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "si1DryRun",
                        "name": "_si1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "si1AdditionalInfo",
                        "name": "_si1AdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": "-- | Reserved.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "si1DryRun",
                        "name": "_si1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "si1InstanceIds",
                        "name": "_si1InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "stopInstancesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "sirStoppingInstances",
                    "name": "_sirStoppingInstances",
                    "shape": "InstanceStateChangeList",
                    "locationName": "instancesSet",
                    "documentation": "-- | Information about one or more stopped instances.",
                    "typeExposed": "[InstanceStateChange]",
                    "type": "List \"item\" InstanceStateChange"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "StopInstancesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sirStoppingInstances",
                        "name": "_sirStoppingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "-- | Information about one or more stopped instances.",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "List \"item\" InstanceStateChange"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "sirStoppingInstances",
                        "name": "_sirStoppingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "-- | Information about one or more stopped instances.",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "List \"item\" InstanceStateChange"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-StopInstances.html",
            "namespace": "Network.AWS.EC2.StopInstances",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "StopInstances",
            "method": "post",
            "documentation": "-- | Stops an Amazon EBS-backed instance. Each time you transition an instance\n-- from stopped to started, Amazon EC2 charges a full instance hour, even if\n-- transitions happen multiple times within a single hour.\n--\n-- You can't start or stop Spot Instances.\n--\n-- Instances that use Amazon EBS volumes as their root devices can be quickly\n-- stopped and started. When an instance is stopped, the compute resources are\n-- released and you are not billed for hourly instance usage. However, your root\n-- partition Amazon EBS volume remains, continues to persist your data, and you\n-- are charged for Amazon EBS volume usage. You can restart your instance at any\n-- time.\n--\n-- Before stopping an instance, make sure it is in a state from which it can be\n-- restarted. Stopping an instance does not preserve data stored in RAM.\n--\n-- Performing this operation on an instance that uses an instance store as its\n-- root device returns an error.\n--\n-- You can stop, start, and terminate EBS-backed instances. You can only\n-- terminate instance store-backed instances. What happens to an instance\n-- differs if you stop it or terminate it. For example, when you stop an\n-- instance, the root device and any other devices attached to the instance\n-- persist. When you terminate an instance, the root device and any other\n-- devices attached during the instance launch are automatically deleted. For\n-- more information about the differences between stopping and terminating\n-- instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html Instance Lifecycle\u003e in the /Amazon Elastic Compute Cloud UserGuide/.\n--\n-- For more information about troubleshooting, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html Troubleshooting StoppingYour Instance\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "stopInstances",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "StopInstances",
                "query": [
                    {
                        "field": "_siDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_siInstanceIds",
                        "locationName": "InstanceId",
                        "type": "field"
                    },
                    {
                        "field": "_siForce",
                        "locationName": "force",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siDryRun",
                        "name": "_siDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "siInstanceIds",
                        "name": "_siInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siForce",
                        "name": "_siForce",
                        "shape": "Boolean",
                        "locationName": "force",
                        "documentation": "-- | Forces the instances to stop. The instances do not have an opportunity to\n-- flush file system caches or file system metadata. If you use this option, you\n-- must perform file system check and repair procedures. This option is not\n-- recommended for Windows instances.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siDryRun",
                        "name": "_siDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "siForce",
                        "name": "_siForce",
                        "shape": "Boolean",
                        "locationName": "force",
                        "documentation": "-- | Forces the instances to stop. The instances do not have an opportunity to\n-- flush file system caches or file system metadata. If you use this option, you\n-- must perform file system check and repair procedures. This option is not\n-- recommended for Windows instances.\n--\n-- Default: 'false'",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "siInstanceIds",
                        "name": "_siInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "terminateInstancesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "tirTerminatingInstances",
                    "name": "_tirTerminatingInstances",
                    "shape": "InstanceStateChangeList",
                    "locationName": "instancesSet",
                    "documentation": "-- | Information about one or more terminated instances.",
                    "typeExposed": "[InstanceStateChange]",
                    "type": "List \"item\" InstanceStateChange"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "TerminateInstancesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "tirTerminatingInstances",
                        "name": "_tirTerminatingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "-- | Information about one or more terminated instances.",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "List \"item\" InstanceStateChange"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "tirTerminatingInstances",
                        "name": "_tirTerminatingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "-- | Information about one or more terminated instances.",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "List \"item\" InstanceStateChange"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-TerminateInstances.html",
            "namespace": "Network.AWS.EC2.TerminateInstances",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "TerminateInstances",
            "method": "post",
            "documentation": "-- | Shuts down one or more instances. This operation is idempotent; if you\n-- terminate an instance more than once, each call succeeds.\n--\n-- Terminated instances remain visible after termination (for approximately one\n-- hour).\n--\n-- By default, Amazon EC2 deletes all Amazon EBS volumes that were attached\n-- when the instance launched. Volumes attached after instance launch continue\n-- running.\n--\n-- You can stop, start, and terminate EBS-backed instances. You can only\n-- terminate instance store-backed instances. What happens to an instance\n-- differs if you stop it or terminate it. For example, when you stop an\n-- instance, the root device and any other devices attached to the instance\n-- persist. When you terminate an instance, the root device and any other\n-- devices attached during the instance launch are automatically deleted. For\n-- more information about the differences between stopping and terminating\n-- instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html Instance Lifecycle\u003e in the /Amazon Elastic Compute Cloud UserGuide/.\n--\n-- For more information about troubleshooting, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html Troubleshooting TerminatingYour Instance\u003e in the /Amazon Elastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "terminateInstances",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "TerminateInstances",
                "query": [
                    {
                        "field": "_tiDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_tiInstanceIds",
                        "locationName": "InstanceId",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "tiDryRun",
                        "name": "_tiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "tiInstanceIds",
                        "name": "_tiInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "tiDryRun",
                        "name": "_tiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "tiInstanceIds",
                        "name": "_tiInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "unassignPrivateIpAddressesResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "ec2",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UnassignPrivateIpAddressesResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-UnassignPrivateIpAddresses.html",
            "namespace": "Network.AWS.EC2.UnassignPrivateIpAddresses",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "UnassignPrivateIpAddresses",
            "method": "post",
            "documentation": "-- | Unassigns one or more secondary private IP addresses from a network interface.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "unassignPrivateIpAddresses",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "upiaNetworkInterfaceId",
                        "name": "_upiaNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 19,
                "name": "UnassignPrivateIpAddresses",
                "query": [
                    {
                        "field": "_upiaNetworkInterfaceId",
                        "locationName": "networkInterfaceId",
                        "type": "field"
                    },
                    {
                        "field": "_upiaPrivateIpAddresses",
                        "locationName": "privateIpAddress",
                        "type": "field"
                    }
                ],
                "locationPad": 19,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "upiaPrivateIpAddresses",
                        "name": "_upiaPrivateIpAddresses",
                        "shape": "PrivateIpAddressStringList",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The secondary private IP addresses to unassign from the network interface.\n-- You can specify this option multiple times to unassign more than one IP\n-- address.",
                        "typeExposed": "[Text]",
                        "type": "List \"PrivateIpAddress\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "error",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": true,
                        "lens": "upiaNetworkInterfaceId",
                        "name": "_upiaNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "-- | The ID of the network interface.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "upiaPrivateIpAddresses",
                        "name": "_upiaPrivateIpAddresses",
                        "shape": "PrivateIpAddressStringList",
                        "locationName": "privateIpAddress",
                        "documentation": "-- | The secondary private IP addresses to unassign from the network interface.\n-- You can specify this option multiple times to unassign more than one IP\n-- address.",
                        "typeExposed": "[Text]",
                        "type": "List \"PrivateIpAddress\" Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "unmonitorInstancesResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_List",
                    "lensMapping": "_List",
                    "default": "mempty",
                    "monoid": true,
                    "protocol": "ec2",
                    "flattened": true,
                    "required": true,
                    "lens": "uirInstanceMonitorings",
                    "name": "_uirInstanceMonitorings",
                    "shape": "InstanceMonitoringList",
                    "locationName": "instancesSet",
                    "documentation": "-- | Monitoring information for one or more instances.",
                    "typeExposed": "[InstanceMonitoring]",
                    "type": "List \"item\" InstanceMonitoring"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "UnmonitorInstancesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "uirInstanceMonitorings",
                        "name": "_uirInstanceMonitorings",
                        "shape": "InstanceMonitoringList",
                        "locationName": "instancesSet",
                        "documentation": "-- | Monitoring information for one or more instances.",
                        "typeExposed": "[InstanceMonitoring]",
                        "type": "List \"item\" InstanceMonitoring"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "uirInstanceMonitorings",
                        "name": "_uirInstanceMonitorings",
                        "shape": "InstanceMonitoringList",
                        "locationName": "instancesSet",
                        "documentation": "-- | Monitoring information for one or more instances.",
                        "typeExposed": "[InstanceMonitoring]",
                        "type": "List \"item\" InstanceMonitoring"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AWSEC2/latest/APIReference/ApiReference-query-UnmonitorInstances.html",
            "namespace": "Network.AWS.EC2.UnmonitorInstances",
            "protocol": "ec2",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "pager": null,
            "name": "UnmonitorInstances",
            "method": "post",
            "documentation": "-- | Disables monitoring for a running instance. For more information about\n-- monitoring instances, see \u003chttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html Monitoring Your Instances and Volumes\u003e in the /AmazonElastic Compute Cloud User Guide/.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "unmonitorInstances",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "ec2",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "UnmonitorInstances",
                "query": [
                    {
                        "field": "_uiDryRun",
                        "locationName": "dryRun",
                        "type": "field"
                    },
                    {
                        "field": "_uiInstanceIds",
                        "locationName": "InstanceId",
                        "type": "field"
                    }
                ],
                "locationPad": 11,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "uiDryRun",
                        "name": "_uiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "uiInstanceIds",
                        "name": "_uiInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "monoid": false,
                        "protocol": "ec2",
                        "flattened": false,
                        "required": false,
                        "lens": "uiDryRun",
                        "name": "_uiDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "monoid": true,
                        "protocol": "ec2",
                        "flattened": true,
                        "required": true,
                        "lens": "uiInstanceIds",
                        "name": "_uiInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "-- | One or more instance IDs.",
                        "typeExposed": "[Text]",
                        "type": "List \"InstanceId\" Text"
                    }
                ]
            }
        }
    ]
}